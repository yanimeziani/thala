Ä’setupParentDatacomputeMinIntrinsicWidthcomputeMaxIntrinsicWidthcomputeMinIntrinsicHeightcomputeMaxIntrinsicHeightcomputeDistanceToActualBaselinecomputeDryBaselinecomputeDryLayoutperformLayoutcomputeSizeForNoChildhitTestChildrenapplyPaintTransformpaintdeferToChildopaquetranslucentbehaviorhitTesthitTestSelfdebugFillPropertiesadditionalConstraints_additionalConstraintsdebugPaintSizemaxWidth	_maxWidth	maxHeight
_maxHeight_limitConstraints_computeSizeaspectRatio_aspectRatio_applyAspectRatio	stepWidth
_stepWidth
stepHeight_stepHeight
_applyStep_childConstraintsalwaysNeedsCompositingisRepaintBoundary_alphaopacity_opacityalwaysIncludeSemantics_alwaysIncludeSemanticspaintsChildupdateCompositedLayervisitChildrenForSemantics_currentlyIsRepaintBoundaryattachdetach_updateOpacitylayershaderCallback_shaderCallback	blendMode
_blendModeenabled_enabledfilter_filterbackdropKey_backdropKey_reclipaddListenerremoveListenergetClipgetApproximateClipRectshouldRecliptoStringshapetextDirectionclipper_clipper_markNeedsClip_defaultClip_clipclipBehavior_clipBehavior_updateClipdescribeApproximatePaintClip_debugPaint
_debugTextdisposeborderRadius_borderRadius_textDirection_cachedRect_cachedPath_getClipPath	elevation
_elevationshadowColor_shadowColorcolor_color_shape
background
foreground_painter
decoration_decorationposition	_positionconfiguration_configurationorigin_origin	alignment
_alignmenttransformHitTests
_transform	transformfilterQuality_filterQualitysetIdentityrotateXrotateYrotateZ	translatescale_effectiveTransform_resolve_resolvedAlignment_markNeedResolution_fitAffectsLayoutfit_fit_hasVisualOverflow_clearPaintData_updatePaintData_paintChildWithTransformtranslation_translationonPointerDownonPointerMoveonPointerUponPointerHoveronPointerCancelonPointerPanZoomStartonPointerPanZoomUpdateonPointerPanZoomEndonPointerSignalhandleEvent_opaquehitTestBehavioronEnteronHoveronExitcursor_cursorvalidForMouseTracker_validForMouseTrackertoImagetoImageSyncdebugSymmetricPaintCount_debugSymmetricPaintCountdebugAsymmetricPaintCount_debugAsymmetricPaintCountdebugResetMetrics!debugRegisterRepaintBoundaryPaintignoring	_ignoringignoringSemantics_ignoringSemanticsdescribeSemanticsConfigurationoffstage	_offstagesizedByParentperformResizedebugDescribeChildren	absorbing
_absorbingmetaDatavalidActions_validActionsonTap_onTaponLongPress_onLongPressonHorizontalDragUpdate_onHorizontalDragUpdateonVerticalDragUpdate_onVerticalDragUpdatescrollFactor_isValidAction_performSemanticScrollLeft_performSemanticScrollRight_performSemanticScrollUp_performSemanticScrollDownblocking	_blocking	excluding
_excludingindex_indexlink_link_previousLayoutSizeshowWhenUnlinked_showWhenUnlinkedoffset_offsetleaderAnchor_leaderAnchorfollowerAnchor_followerAnchorgetCurrentTransformvalue_valuesized_sized_layerHandle8RenderProxyBoxRenderProxyBoxMixinHitTestBehavior!RenderProxyBoxWithHitTestBehaviorRenderConstrainedBoxRenderLimitedBoxRenderAspectRatioRenderIntrinsicWidthRenderIntrinsicHeightRenderIgnoreBaselineRenderOpacityRenderAnimatedOpacityMixinRenderAnimatedOpacityShaderCallbackRenderShaderMaskRenderBackdropFilterCustomClipperShapeBorderClipper_RenderCustomClipRenderClipRectRenderClipRRectRenderClipRSuperellipseRenderClipOvalRenderClipPath_RenderPhysicalModelBaseRenderPhysicalModelRenderPhysicalShapeDecorationPositionRenderDecoratedBoxRenderTransformRenderFittedBoxRenderFractionalTranslationPointerDownEventListenerPointerMoveEventListenerPointerUpEventListenerPointerCancelEventListener PointerPanZoomStartEventListener!PointerPanZoomUpdateEventListenerPointerPanZoomEndEventListenerPointerSignalEventListenerRenderPointerListenerRenderMouseRegionRenderRepaintBoundaryRenderIgnorePointerRenderOffstageRenderAbsorbPointerRenderMetaDataRenderSemanticsGestureHandlerRenderSemanticsAnnotationsRenderBlockSemanticsRenderMergeSemanticsRenderExcludeSemanticsRenderIndexedSemanticsRenderLeaderLayerRenderFollowerLayerRenderAnnotatedRegionÅ∫ColorGradientImageImageFilterPointerCancelEventPointerDownEventPointerEventPointerMoveEventPointerUpEventRenderProxySliver	RenderBoxRenderObjectWithChildMixinchildoptionalTypeArgsToverridevoidRenderObject
parentData
ParentDatadoublegetMinIntrinsicWidthgetMaxIntrinsicWidthgetMinIntrinsicHeightgetMaxIntrinsicHeightTextBaselinegetDistanceToActualBaselinecomputeDistanceToActualBaseline	protectedBoxConstraintsgetDryBaselineSizegetDryLayoutcomputeSizeForNoChildsizelayoutconstraintsparentUsesSizesmallestboolBoxHitTestResultOffsethitTestpositionMatrix4PaintingContext
paintChilddeferToChildcontainshitTestChildrentranslucentaddBoxHitTestEntryopaqueDiagnosticPropertiesBuilderdebugFillPropertiesEnumPropertydefaultValuedebugAssertIsValidmarkNeedsLayouthasBoundedWidthhasTightWidthminWidthcomputeMinIntrinsicWidthisFinitehasInfiniteWidthconstrainWidthcomputeMaxIntrinsicWidthhasBoundedHeighthasTightHeight	minHeightcomputeMinIntrinsicHeighthasInfiniteHeightconstrainHeightcomputeMaxIntrinsicHeightenforce	constrainzerodebugPaintSizePaintisEmptycolorcanvasdrawRectDiagnosticsPropertymaxWidth	maxHeightinfinityChildLayouterlayoutChildChildLayoutHelperdryLayoutChildDoublePropertyFlutterErrorruntimeTypeisTightcomputeDryBaselinetightAlignRowCrossAxisAlignmentstretchceiltightenwidthheightColumnNullgetAlphaFromOpacityintmarkNeedsCompositingBitsUpdatemarkNeedsCompositedLayerUpdatemarkNeedsSemanticsUpdateparentOffsetLayerOpacityLayeroldLayeralphapaintRenderObjectVisitorFlagPropertyvalueifTrueRenderSliverAnimatedOpacityRenderSliver_currentlyIsRepaintBoundary_alpha	Animation_opacityattachedopacityremoveListener_updateOpacityaddListener_alwaysIncludeSemanticsPipelineOwnerattachdetachalwaysIncludeSemanticsShaderRect
ShaderMasklinear	BlendModemodulateShaderMaskLayerlayermarkNeedsPaintneedsCompositingshadermaskRect	blendMode	pushLayerdebugCreatorsrcOverBackdropKeyBackdropFilterLayerblurBackdropGroupfilterbackdropKeyClipRectClipPath	ClipRRectClipOvalShapeBorder
ListenablereclipVoidCallbackStringobjectRuntimeTypePathTextDirectiongetOuterPathtextDirectionshapeClip	antiAliasshouldRecliphasSizeperformLayoutgetClipnonehardEdgeantiAliasWithSaveLayergetApproximateClipRectTextPainterTileModerepeatedstrokeWidthstylePaintingStylestroketextTextSpan	TextStylefontSizertldisposeclipperclipBehavior_clipper_updateClip_clippushClipRectClipRectLayershift_debugPaint
_debugTextRRectBorderRadiusBorderRadiusGeometry_markNeedsClipresolvetoRRectpushClipRRect	outerRectClipRRectLayer	drawRRect	tlRadiusXRSuperellipsetoRSuperellipsepushClipRSuperellipseClipRSuperellipseLayerdrawRSuperellipseaddOvalcenterdxdydistanceSquaredpushClipPathClipPathLayerdrawPathaddRectdebugDisableShadowsalwaysNeedsCompositingColorProperty	elevationBoxShape	rectanglecircle
fromRectXYaddRRectshadowColorCanvas
drawShadow	drawPaint
DecorationImageConfiguration
backgroundempty
BoxPainterBoxDecorationImageProvidercreateBoxPaintercopyWithgetSaveCount	fromPartsDiagnosticsNodeErrorSummaryErrorDescriptionDiagnosticsTreeStyleerrorProperty	isComplexsetIsComplexHint
foregroundtoDiagnosticsNodenameAlignmentGeometryFilterQuality	transform	alignmentfilterQualityoriginAlignmentDirectionalcenterStart	Alignmentxltr	centerEndlocalToGlobalglobalToLocalcopysetIdentityrotateXrotateYrotateZtranslateByDoubleyzscaleByDoubleidentity	alongSizemultiplyaddWithPaintTransformMatrixUtilsgetAsTranslationdeterminantpushTransformTransformLayertranslationValuesmatrixstorageImageFilterLayerfilterLayerimageFilterTransformPropertyBoxFitcontain	scaleDowncoverfill	fitHeightfitWidthloosensizeConstraints,constrainSizeAndAttemptToPreserveAspectRatiounconstrainedSizeFittedSizesapplyBoxFitdestinationsourceinscribelefttopeverysetZerodebugNeedsLayoutaddWithPaintOffsetoffsetListenerPointerPanZoomStartEventPointerPanZoomUpdateEventPointerPanZoomEndEventPointerSignalEventbehaviorPointerHoverEventListenerbiggestHitTestEntrydebugHandleEventcallPointerHoverEventFlagsSummaryFunctionifEmptyMouseRegionMouseTrackerAnnotationMouseCursordeferPointerEnterEventListenerPointerExitEventListenerifFalsedebugDumpRenderTree
pixelRatiodebugNeedsPainttoImageFuturetoImageSyncincludedParentincludedChildMessagePropertyPercentPropertyunittooltipmessage
DeprecatedSemanticsNodevisitChildrenForSemanticsSemanticsConfigurationdescribeSemanticsConfigurationisBlockingUserActionsdescription%markNeedsLayoutForSizedByParentChangecomputeDryLayoutperformResizeListoffstagesparsedynamicGestureTapCallbackGestureLongPressCallbackGestureDragUpdateCallbackSemanticsActiontap
scrollLeftscrollRightSet	setEqualsonTap	longPressonLongPressonScrollRightonScrollLeftscrollUp
onScrollUp
scrollDownonScrollDownDragUpdateDetailsdeltaprimaryDeltaglobalPositionIterablePropertySemanticsAnnotationsMixinSemanticsPropertiesattributedLabelLocaleinitSemanticsAnnotations
properties	containerexplicitChildNodesexcludeSemanticsblockUserActionslocaleForSubtree+isBlockingSemanticsOfPreviouslyPaintedNodesisSemanticBoundaryisMergingSemanticsOfDescendants
ScrollViewscrollIndexCustomScrollViewindexInParentCompositedTransformTargetLeaderLayer	LayerLink
leaderSizelinkCompositedTransformFollowerFollowerLayertopLeft
bottomLeftgetLastTransformleadershowWhenUnlinkedlinkedOffsetunlinkedOffsetchildPaintBoundsfromLTRBnegativeInfinityAnnotatedRegionLayerLayerfindObjectLayerHandle	RenderBoxRenderObjectWithChildMixinRenderProxyBoxMixinRenderProxyBoxRenderAnimatedOpacityMixin
ListenableCustomClipper_RenderCustomClip_RenderPhysicalModelBase!RenderProxyBoxWithHitTestBehaviorMouseTrackerAnnotationSemanticsAnnotationsMixin˜s/)ﬂÎ	©?14ÅÔ⁄Ç∫ÉPointerCancelEventPointerDownEventPointerEventPointerMoveEventPointerUpEvent Çèpackage:flutter/gestures.dart 
Å;ÅcColorGradientImageImageFilter Å%   Å5Å8uiÅ8dart:ui  Åg   package:flutter/animation.dart  Åê   package:flutter/foundation.dart  Å∫   package:flutter/gestures.dart  Å‚   package:flutter/semantics.dart  Ç   package:flutter/services.dart  Ç4   box.dart  ÇG   
layer.dart  Ç\   layout_helper.dart  Çy   object.dart¿`® ¿]Gíâ <ÄÜÄ§Ä•Ä‘ÄÿÄ¸ÅÅ#Å$ÅeÅfÅèÅπÅ·Ç
Ç2Ç3ÇFÇ[ÇxÇéÇèÇ∂ÉÉÉVÉZÉ£ÉÒÑ@ÑÑÑàÑ◊Ö(ÖwÖãÖèÖùÖ°ÖÒÜÜ)ÜzÜúÜ¢ÜÍá7áIápáàáåáéáèá∑áªá¯àCàéàíà‚ââ$âÅâçâ∫ää)äTä{äÅäÖäÜäíä≈ä¸ã ããã@ãwã{ã|ãàãªãÚãˆã˜åå6åmåqårå~å¡å¸ç5ç9ç:çFçSçØçËçÏçÌç˘ééFéôéùéûé™é√éŒèè?èKèOèPèôè›êê9ê=ê>êJêòêÿê‹ê›êÈë.ë/ë;ërëõë¥ë¬ë»ëÔëÛëıëˆíí1ííªíÀíÃììfìÉìçìéì€îî%î'î(îgîÅîÀî˛ïïHïnï†ï∂ïÀïÃññ`ñfñòñûñÂóóóóTópóìóÎò-òbòjòpòÜòäòãòóò‚ò„òÔô4ô_ôºô¿ô¬ô√ôÙô¯öGöêö‡öÌöÒõAõäõßõ€úúúQú´úÂùù/ù0ùpù∂ùﬂûû;ûfûtûzûûûµûπû∫û∆û˘üSüÅüáü»ü‰††S†Y†k†o†p†|†Ø°	°7°=°~°ö°Œ¢	¢¢!¢%¢&¢2¢e¢¡¢¢ˆ£8£U£ä£«£Õ£‡£‰£Â£Ò§$§Ä§Ø§µ§˜••I•Ü•å•ü•£•§•∞¶¶e¶i¶j¶v¶è¶»¶·ß9ßSß`ßØßµßπß∫ß∆ß”®®b®¨®∞®±®Ω®˝©(©8©Q©É©Ω©Ù©¸™™™™™*™o™ö™Æ´	´´´´´P´ì´ó´‰¨/¨z¨…¨‚¨Ê≠1≠w≠á≠∑ÆÆ=ÆCÆäÆûÆ≥Æ…ÆØØ8ØYØvØïØ™Ø´∞ ∞$∞8∞W∞q∞è∞ù∞£∞∫∞—∞’∞÷±-±S±h±à±¢±¡±œ±’±Ì≤≤≤	≤J≤e≤ã≤∑≤ÿ≥
≥2≥`≥Ç≥∂≥Ω≥¡≥¬¥#¥<¥é¥Ω¥√µµµµµ!µaµ√µ«µ»µ‘µÌ∂L∂P∂Q∂]∂¢∂Õ∑&∑Å∑Ö∑á∑à∑√∑«∏∏b∏∞∏¥∏¸πLπÑπàπ’∫#∫r∫π∫Ωª	ªZª´ª˘ºGºïº„Ω1Ω~Ωƒææ5æræxæªø ø!øEøgø{ø|ø¶ø¨ø¸¿ @C¿ @m¿ @Ñ¿ @¶¿ @ø¿ @€¿ @¸¿ A
¿ A¿ A*¿ AA¿ AE¿ AF¿ AR¿ AÖ¿ A†¿ Aƒ¿ A ¿ B¿ B¿ B¿ B¿ BE¿ B`¿ BÑ¿ Bä¿ B¡¿ B≈¿ B∆¿ B“¿ C¿ C¿ CB¿ CH¿ C¿ CÉ¿ CÑ¿ Cê¿ C√¿ C›¿ D ¿ D¿ D=¿ DA¿ DB¿ Dy¿ Dß¿ D∑¿ E¿ E¿ ET¿ E´¿ E¸¿ FN¿ Fl¿ Fw¿ F¿ Fí¿ Fú¿ Fù¿ Fº¿ Fﬂ¿ FÂ¿ FÊ¿ G¿ G"¿ G#¿ Gp¿ Gº¿ G”¿ GÌ¿ H¿ H¿ HE¿ Hj¿ Hp¿ Hq¿ Hø¿ I	¿ IU¿ Il¿ Im¿ Iï¿ Iπ¿ Iﬁ¿ I‰¿ IÂ¿ J¿ J5¿ JZ¿ J`¿ Ja¿ Jâ¿ J≠¿ J“¿ Jÿ¿ JŸ¿ K¿ K)¿ KN¿ KT¿ KU¿ Kå¿ Kê¿ Kë¿ Kù¿ K™¿ KÍ¿ L¿ L¿ L¿ L&¿ Lx¿ Lÿ¿ L‹¿ L›¿ LÈ¿ M¿ M(¿ MW¿ M[¿ M\¿ Mh¿ M≠¿ Mÿ¿ N¿ N¿ N¿ N¿ N[¿ N_¿ N¨¿ N¸¿ O0¿ O4¿ OÄ¿ O–¿ P¿ Pf¿ P≥¿ P€¿ Pﬂ¿ Q/¿ Q{¿ Qπ¿ QΩ¿ R
¿ RX¿ Rß¿ Ræ¿ R¬¿ R–¿ R‘¿ S#¿ Sj¿ S∏¿ SÀ¿ T¿ TZ¿ Tß¿ T€¿ U¿ U_¿ Ue¿ Uµ¿ U÷¿ V(¿ V\¿ Ví¿ V∞¿ V–¿ V‰¿ VÂ¿ W0¿ W6¿ W^¿ WÖ¿ Wõ¿ Wº¿ WÊ¿ X¿ X¿ X¿ X1¿ XH¿ XL¿ XM¿ Xô¿ Xü¿ X«¿ X¿ Y¿ Y)¿ YS¿ Ys¿ YÅ¿ Yá¿ Y†¿ Y∑¿ Yª¿ Yº¿ Yı¿ Z¿ Z)¿ Z=¿ ZC¿ Zl¿ Zp¿ Zq¿ Z}¿ Z∞¿ ZŸ¿ Z›¿ Zﬁ¿ ZÍ¿ [¿ [6¿ [H¿ [N¿ [å¿ [∂¿ [∫¿ [ª¿ [«¿ [˙¿ \¿ \%¿ \+¿ \F¿ \{¿ \Å¿ \ù¿ \‹¿ ]¿ ]¿ ]¿ ]¿ ]L¿ ]e¿ ]w¿ ]}¿ ]ò¿ ]Õ¿ ]”¿ ]Ô¿ ^.¿ ^Z¿ ^^¿ ^_¿ ^±¿ ^—¿ ^¯¿ _	¿ _`¿ _Å¿ _í¿ _Í¿ _Ò¿ _ı¿ _ˆ¿ `W¿ `Ä¿ `ô¿ `∏¿ `˝¿ a¿ a¿ a¿ a¿ a[¿ aΩ¿ a¡¿ a¬¿ aŒ¿ b ¿ bI¿ bú¿ b†¿ b°¿ b≠¿ b∆¿ c%¿ c)¿ c*¿ c6¿ c{¿ c¶¿ c‚¿ d ¿ d$¿ d&¿ d'¿ d\¿ d`¿ dÆ¿ d˛¿ e3¿ e7¿ eÉ¿ e”¿ f!¿ fl¿ f∫¿ f„¿ fÁ¿ g4¿ gÇ¿ g—¿ gË¿ gÏ¿ g˙¿ g˛¿ hM¿ hï¿ h‰¿ h˜¿ iF¿ iä¿ iŸ¿ j¿ jC¿ jî¿ j–¿ j—¿ j›¿ k¿ k)¿ k;¿ kA¿ k]¿ kõ¿ k°¿ kæ¿ kÓ¿ kÚ¿ kÛ¿ kˇ¿ l2¿ lK¿ l]¿ lc¿ l¿ lΩ¿ l√¿ l‡¿ m¿ m¿ m¿ m!¿ mT¿ m}¿ mÅ¿ mÇ¿ m‘¿ m˙¿ n¿ nj¿ nn¿ no¿ n–¿ n˘¿ o¿ o1¿ ov¿ oz¿ o{¿ oá¿ oî¿ o‘¿ p6¿ p:¿ p;¿ pG¿ pô¿ p¬¿ q¿ q¿ q¿ q&¿ q?¿ qû¿ q¢¿ q§¿ q•¿ qÊ¿ r¿ r}¿ r∏¿ rπ¿ r≈¿ s¿ s¿ s¿ s¿ s'¿ sÄ¿ së¿ sï¿ só¿ sò¿ s√¿ s«¿ t¿ tL¿ tP¿ tõ¿ tÂ¿ u-¿ u}¿ u™¿ uﬂ¿ uÂ¿ v*¿ vâ¿ vπ¿ v”¿ w¿ wA¿ wU¿ wV¿ wb¿ w§¿ w•¿ w±¿ wÈ¿ wÍ¿ w¯¿ w˘¿ x.¿ x4¿ xÑ¿ xù¿ x£¿ xÁ¿ y.¿ y?¿ ya¿ yt¿ yí¿ yº¿ yŸ¿ yÁ¿ yÌ¿ z)¿ zR¿ zh¿ zù¿ z’¿ z˝¿ {¿ {)¿ {k¿ {ç¿ {ì¿ {ó¿ {ò¿ {ﬁ¿ {‰¿ |"¿ |(¿ |A¿ |¿ |ü¿ | ¿ |ˆ¿ }¿ }
¿ }/¿ }O¿ }S¿ }T¿ }`¿ }Ü¿ }®¿ }ø¿ }√¿ }ƒ¿ }–¿ ~#¿ ~^¿ ~x¿ ~ä¿ ~é¿ ~è¿ ~õ¿ ~“¿ ~˙¿ ¿ ¿ 0¿ 4¿ 5¿ A¿ Å¿ ≈¿ ‹¿ ‚¿ Ê¿ Á¿ Û¿ Ä8¿ Äc¿ Äõ¿ ÄØ¿ Ä√¿ ÄÂ¿ Å¿ Å6¿ Å?¿ ÅF¿ ÅJ¿ ÅL¿ ÅM¿ Åû¿ Å¢¿ ÅÒ¿ ÇF¿ Çà¿ Ç‰¿ ÇÛ¿ ÇÙ¿ É ¿ ÉO¿ Ét¿ Éu¿ ÉÅ¿ É‘¿ Ñ¿ Ñ7¿ ÑP¿ ÑT¿ ÑU¿ Ñì¿ Ñô¿ ÑÈ¿ Ö¿ Ö¿ ÖQ¿ Öy¿ Ö¿ Öœ¿ Ü¿ ÜD¿ Üc¿ Üå¿ Ü©¿ Ü∑¿ ÜΩ¿ ÜÂ¿ á¿ á¿ á/¿ áC¿ án¿ át¿ áä¿ áé¿ áè¿ á’¿ á€¿ à¿ à¿ à8¿ à>¿ àé¿ à’¿ â¿ â5¿ â`¿ âå¿ âö¿ â†¿ â≈¿ âÂ¿ âÈ¿ âÍ¿ âˆ¿ ä¿ ä4¿ ä]¿ ä§¿ ä®¿ ä©¿ äµ¿ ä«¿ äÛ¿ ã¿ ã¿ ã¿ ã&¿ ãH¿ ãÇ¿ ã†¿ ã‰¿ å¿ åe¿ åè¿ åó¿ åø¿ åÈ¿ ç¿ ç¿ ç¿ ç¿ ç ¿ ç,¿ çU¿ çw¿ çï¿ çô¿ çö¿ ç¶¿ ç›¿ çÙ¿ é¿ é¿ é*¿ é.¿ é/¿ é;¿ é{¿ éø¿ é÷¿ é‹¿ é‡¿ é·¿ éÌ¿ è2¿ è]¿ è≠¿ è¡¿ è’¿ è˜¿ ê¿ êH¿ êQ¿ êX¿ ê\¿ ê^¿ ê_¿ ê¶¿ ê™¿ ê˚¿ ë'¿ ëá¿ ëº¿ ë÷¿ ë˛¿ í'¿ í=¿ íS¿ ío¿ í©¿ í≠¿ íØ¿ í∞¿ í˘¿ í˝¿ ì9¿ ìp¿ ìq¿ ì™¿ ìÆ¿ ì˝¿ î2¿ îb¿ î∫¿ îœ¿ îÂ¿ ï¿ ï?¿ ïh¿ ïá¿ ïú¿ ïù¿ ï©¿ ïÍ¿ ïÎ¿ ñ)¿ ñ/¿ ñ~¿ ñ«¿ ñÕ¿ ó¿ ó'¿ óu¿ ó≠¿ óÂ¿ ò¿ ò4¿ òX¿ òf¿ òl¿ òâ¿ òü¿ ò£¿ ò§¿ òË¿ òÓ¿ ô=¿ ôà¿ ô±¿ ô…¿ ôÏ¿ ö¿ ö¿ ö¿ ö7¿ öM¿ öQ¿ öR¿ ö^¿ öí¿ öì¿ öü¿ ö÷¿ öÔ¿ õ¿ õ2¿ õ?¿ õv¿ õô¿ õª¿ õÒ¿ ú¿ ú/¿ úD¿ úP¿ ú]¿ úq¿ úw¿ ú{¿ ú}¿ ú~¿ úÃ¿ ú–¿ ù ¿ ù4¿ ùh¿ ùâ¿ ùé¿ ùŒ¿ ùÁ¿ ù˝¿ û!¿ ûN¿ ûg¿ ûÖ¿ ûû¿ ûπ¿ ûÿ¿ û˚¿ ü¿ ü¿ ü¿ üf¿ üg¿ ü∏¿ üÿ¿ üÈ¿ †¿ †!¿ †/¿ †5¿ †K¿ †a¿ †e¿ †f¿ †∂¿ †«¿ †Õ¿ °¿ °-¿ °U¿ °o¿ °î¿ °∞¿ °æ¿ °ƒ¿ °Ÿ¿ °Ô¿ °Û¿ °Ù¿ ¢M¿ ¢\¿ ¢b¿ ¢ö¿ ¢√¿ ¢€¿ ¢˛¿ £¿ £+¿ £1¿ £I¿ £_¿ £c¿ £d¿ £∞¿ £¡¿ £«¿ £ˇ¿ §/¿ §L¿ §t¿ §ï¿ §£¿ §©¿ §√¿ §Ÿ¿ §›¿ §ﬁ¿ §Í¿ •¿ •¿ •+¿ •b¿ •w¿ •õ¿ •©¿ •Ø¿ •∞¿ •…¿ •È¿ ¶¿ ¶/¿ ¶T¿ ¶}¿ ¶≥¿ ¶≈¿ ¶Ò¿ ß¿ ß¿ ß¿ ß3¿ ß9¿ ß=¿ ß?¿ ß@¿ ßm¿ ßq¿ ß∫¿ ßÀ¿ ßœ¿ ® ¿ ®$¿ ®m¿ ®π¿ ® ¿ ®Œ¿ ©¿ ©g¿ ©∏¿ ™¿ ™¿ ™¿ ™¿ ™g¿ ™≤¿ ™˚¿ ´D¿ ´ì¿ ´»¿ ´Ë¿ ´Ó¿ ¨?¿ ¨¿ ¨Ä¿ ¨ù¿ ¨û¿ ¨·¿ ¨Á¿ ≠6¿ ≠Ü¿ ≠ù¿ ≠©¿ ≠ˆ¿ ≠˜¿ ÆG¿ Æx¿ Æ~¿ ÆÕ¿ Ø¿ Ø4¿ Ø@¿ Øì¿ Øî¿ Øﬂ¿ ∞¿ ∞¿ ∞¿ ∞a¿ ∞§¿ ∞ÿ¿ ∞ﬁ¿ ±"¿ ±i¿ ±¨¿ ±Û¿ ≤3¿ ≤4¿ ≤Å¿ ≤“¿ ≥#¿ ≥t¿ ≥z¿ ≥¬¿ ¥¿ ¥¿ ¥$¿ ¥r¿ ¥~¿ ¥Ñ¿ ¥ ¿ µ¿ µJ¿ µÜ¿ µá¿ µì¿ µ‘¿ µ÷¿ µ◊¿ ∂¿ ∂U¿ ∂|¿ ∂Ç¿ ∂ ¿ ∑¿ ∑f¿ ∑©¿ ∑¿ ∑Ò¿ ∏0¿ ∏K¿ ∏L¿ ∏î¿ ∏ö¿ ∏Â¿ π¿ π2¿ π3¿ πh¿ πt¿ πê¿ π·¿ πÂ¿ πÊ¿ πÚ¿ ∫(¿ ∫`¿ ∫s¿ ∫y¿ ∫ ¿ ª'¿ ª+¿ ª-¿ ª.¿ ªk¿ ªÅ¿ ªó¿ ª∂¿ ªﬁ¿ ª˘¿ º¿ º3¿ º4¿ ºr¿ ºü¿ ºΩ¿ ºÎ¿ Ω¿ Ω¿ Ω!¿ ΩT¿ Ωo¿ Ω•¿ Ω√¿ Ω·¿ æ¿ æL¿ æd¿ æj¿ æ~¿ æ∞¿ æﬂ¿ æÂ¿ æÈ¿ æÍ¿ æˆ¿ ø¿ ø4¿ ø_¿ øc¿ ød¿ øp¿ øÇ¿ ø∞¿ øƒ¿ ø»¿ ø…¿ ø„¿ øı¿ ¿¿ ¿+¿ ¿/¿ ¿0¿ ¿F¿ ¿R¿ ¿S¿ ¿}¿ ¿û¿ ¿¿¿ ¿›¿ ¿ı¿ ¿˚¿ ¿ˇ¿ ¡ ¿ ¡¿ ¡¿ ¡#¿ ¡<¿ ¡m¿ ¡à¿ ¡£¿ ¡∑¿ ¡Ω¿ ¡¡¿ ¡¬¿ ¡Ÿ¿ ¬¿ ¬¿ ¬¿ ¬!¿ ¬\¿ ¬x¿ ¬é¿ ¬£¿ ¬Ω¿ ¬ÿ¿ √ ¿ √M¿ √S¿ √W¿ √X¿ √n¿ √â¿ √ï¿ √’¿ √Â¿ ƒ¿ ƒ*¿ ƒA¿ ƒe¿ ƒx¿ ƒù¿ ƒ¬¿ ƒÁ¿ ≈¿ ≈¿ ≈E¿ ≈b¿ ≈l¿ ≈à¿ ≈∞¿ ≈“¿ ≈¿ ∆¿ ∆K¿ ∆V¿ ∆¶¿ ∆π¿ ∆Ã¿ ∆÷¿ ∆⁄¿ ∆€¿ ∆Á¿ ∆˙¿ «¿ «,¿ «A¿ «E¿ «G¿ «H¿ «o¿ «s¿ «¡¿ »¿ »(¿ »_¿ »Å¿ »á¿ »◊¿ »Ë¿ »Ó¿ …3¿ …w¿ …x¿ …Ñ¿ …≥¿ …¥¿ …¿¿  ¿  "¿  7¿  T¿  |¿  í¿  ö¿  †¿  ÷¿  ⁄¿  €¿  Á¿ À¿ À7¿ À^¿ Àu¿ Àõ¿ À∑¿ À…¿ À€¿ ÀÚ¿ Ã¿ ÃE¿ ÃP¿ Ã_¿ Ãã¿ Ã°¿ Ã©¿ Ã∂¿ Ã ¿ Ã–¿ Ã‘¿ Ã’¿ Ã·¿ Õ!¿ Õ1¿ ÕL¿ Õ{¿ Õ§¿ ÕÎ¿ Œ¿ Œ$¿ ŒÄ¿ Œç¿ Œó¿ Œü¿ Œ≤¿ Œº¿ Œ¿¿ Œ¬¿ Œ√¿ ŒÚ¿ Œˆ¿ œF¿ œî¿ œ™¿ œ„¿ –¿ –¿ –c¿ –¿ –Ö¿ –≈¿ –À¿ —¿ —$¿ —5¿ —p¿ —É¿ —õ¿ —Ω¿ —‚¿ “	¿ “
¿ “:¿ “@¿ “ã¿ “¶¿ “¨¿ “‚¿ ”¿ ”B¿ ”s¿ ”ï¿ ”£¿ ”©¿ ”ƒ¿ ”⁄¿ ”ﬁ¿ ”ﬂ¿ ‘¿ ‘T¿ ‘u¿ ‘°¿ ‘ƒ¿ ‘“¿ ‘ÿ¿ ‘Ù¿ ’
¿ ’¿ ’¿ ’¿ ’y¿ ’z¿ ’Ü¿ ’Ã¿ ’Ë¿ ’˝¿ ÷¿ ÷B¿ ÷X¿ ÷`¿ ÷f¿ ÷ú¿ ÷†¿ ÷°¿ ÷≠¿ ÷‰¿ ÷˝¿ ◊$¿ ◊;¿ ◊b¿ ◊~¿ ◊ê¿ ◊¨¿ ◊æ¿ ◊’¿ ◊˚¿ ÿ)¿ ÿ4¿ ÿC¿ ÿo¿ ÿÖ¿ ÿç¿ ÿö¿ ÿÆ¿ ÿ¥¿ ÿ∏¿ ÿπ¿ ÿ≈¿ Ÿ¿ Ÿ¿ Ÿ0¿ Ÿ_¿ Ÿà¿ Ÿ–¿ ŸÌ¿ ⁄	¿ ⁄c¿ ⁄p¿ ⁄z¿ ⁄Ç¿ ⁄ï¿ ⁄ü¿ ⁄£¿ ⁄•¿ ⁄¶¿ ⁄ÿ¿ ⁄‹¿ €&¿ €o¿ €ò¿ €ú¿ €Ë¿ ‹1¿ ‹\¿ ‹b¿ ‹≤¿ ‹Œ¿ ‹‘¿ ›¿ ›5¿ ›F¿ ›Å¿ ›î¿ ›¨¿ ›Œ¿ ›Û¿ ﬁ¿ ﬁ¿ ﬁK¿ ﬁQ¿ ﬁú¿ ﬁ∑¿ ﬁΩ¿ ﬁÛ¿ ﬂ-¿ ﬂS¿ ﬂÑ¿ ﬂ¶¿ ﬂ¥¿ ﬂ∫¿ ﬂ’¿ ﬂÎ¿ ﬂÔ¿ ﬂ¿ ‡/¿ ‡e¿ ‡Ü¿ ‡≤¿ ‡’¿ ‡„¿ ‡È¿ ·¿ ·¿ ·¿ · ¿ ·,¿ ·P¿ ·†¿ ·°¿ ·≠¿ ·Û¿ ‚¿ ‚$¿ ‚A¿ ‚s¿ ‚â¿ ‚ë¿ ‚ó¿ ‚Õ¿ ‚—¿ ‚“¿ ‚ﬁ¿ „¿ „.¿ „U¿ „l¿ „õ¿ „∑¿ „…¿ „Â¿ „˜¿ ‰¿ ‰4¿ ‰j¿ ‰u¿ ‰Ñ¿ ‰∞¿ ‰∆¿ ‰Œ¿ ‰€¿ ‰Ô¿ ‰ı¿ ‰˘¿ ‰˙¿ Â¿ ÂF¿ ÂV¿ Âq¿ Â†¿ Â…¿ Ê¿ Ê6¿ ÊR¿ Ê¨¿ Êπ¿ Ê√¿ ÊÀ¿ Êﬁ¿ ÊË¿ ÊÏ¿ ÊÓ¿ ÊÔ¿ Á¿ Á¿ Ád¿ Á≠¿ Á˜¿ Ë.¿ ËQ¿ ËW¿ Ëß¿ Ëƒ¿ Ë ¿ È¿ ÈS¿ ÈT¿ Èi¿ ÈÇ¿ ÈÉ¿ È§¿ È√¿ È›¿ Í¿ Í¿ Í.¿ Í2¿ Í3¿ Í?¿ Ín¿ Ío¿ Í{¿ Í¡¿ Í‘¿ ÍÔ¿ Î¿ Îd¿ ÎÜ¿ Î∂¿ ÎÁ¿ ÎÓ¿ Ï#¿ ÏL¿ Ïe¿ Ïy¿ Ï¿ Ïµ¿ Ïπ¿ Ï∫¿ Ï∆¿ Ï˝¿ Ì¿ Ì=¿ ÌT¿ Ìz¿ Ìñ¿ Ì®¿ Ì∫¿ Ì⁄¿ ÌÒ¿ Ó¿ ÓD¿ ÓO¿ Ó^¿ Óä¿ Ó†¿ Ó®¿ Óµ¿ Ó…¿ Óœ¿ Ó”¿ Ó‘¿ Ó‡¿ Ô ¿ Ô0¿ ÔK¿ Ôz¿ Ô£¿ Ô¯¿ ¿ 1¿ F¿ ^¿ ö¿ ◊¿ Í¿ ˜¿ Ò¿ Ò	¿ Ò¿ Ò&¿ Ò*¿ Ò,¿ Ò-¿ ÒO¿ ÒS¿ Òò¿ ÒŸ¿ Ò›¿ Ú¿ Ú9¿ Ú=¿ Úw¿ Ú∑¿ Ú˙¿ Û1¿ ÛL¿ ÛR¿ Û£¿ Û¿ Ù@¿ ÙS¿ ÙY¿ Ùû¿ Ù‚¿ Ù„¿ ÙÔ¿ ı/¿ ı0¿ ı<¿ ıÇ¿ ıû¿ ı≥¿ ı–¿ ı¯¿ ˆ¿ ˆ¿ ˆ¿ ˆR¿ ˆV¿ ˆW¿ ˆc¿ ˆö¿ ˆ≥¿ ˆ⁄¿ ˆÒ¿ ˜¿ ˜3¿ ˜E¿ ˜c¿ ˜u¿ ˜å¿ ˜≤¿ ˜ﬂ¿ ˜Í¿ ˜˘¿ ¯%¿ ¯;¿ ¯C¿ ¯P¿ ¯d¿ ¯j¿ ¯n¿ ¯o¿ ¯{¿ ¯ª¿ ¯À¿ ¯Ê¿ ˘¿ ˘>¿ ˘Ö¿ ˘∫¿ ˘ƒ¿ ˘Ã¿ ˘ﬂ¿ ˘È¿ ˘Ì¿ ˘Ô¿ ˘¿ ˙4¿ ˙8¿ ˙â¿ ˙ø¿ ˚	¿ ˚?¿ ˚\¿ ˚v¿ ˚ï¿ ˚Ø¿ ˚œ¿ ˚Û¿ ¸¿ ¸'¿ ¸F¿ ¸]¿ ¸Ä¿ ¸Å¿ ¸–¿ ¸÷¿ ¸˜¿ ¸˝¿ ˝K¿ ˝y¿ ˝ü¿ ˝¥¿ ˝‘¿ ˝Ó¿ ˛¿ ˛¿ ˛ ¿ ˛\¿ ˛t¿ ˛¨¿ ˛‘¿ ˛⁄¿ ˛¿ ˛Ù¿ ˛ı¿ ˇ¿ ˇ6¿ ˇL¿ ˇm¿ ˇç¿ ˇõ¿ ˇ°¿ ˇª¿ ˇ—¿ ˇ’¿ ˇ÷¿ ˇÚ¿ ¿ ¿ :¿ T¿ b¿ h¿ |¿ í¿ ñ¿ ó¿ £¿ È¿¿R¿Ü¿¿¿ƒ¿∆¿«¿¿¿¿c¿ß¿—¿◊¿ˆ¿¸¿2¿J¿[¿Ñ¿ú¿º¿◊¿Ò¿"¿C¿Z¿¿Ä¿û¿§¿Û¿¿+¿>¿\¿v¿Ñ¿ä¿û¿¥¿∏¿π¿È¿Ô¿:¿U¿[¿¶¿¨¿Ê¿¿8¿b¿É¿ë¿ó¿≤¿»¿Ã¿Õ¿Ÿ¿Ù¿	¿3¿P¿ü¿Ò¿¯¿¸¿˝¿		¿	O¿	k¿	Ä¿	ù¿	≈¿	€¿	„¿	È¿
¿
#¿
$¿
0¿
g¿
Ä¿
î¿
¢¿
®¿
©¿
º¿
¿2¿P¿`¿Å¿†¿ƒ¿›¿Ò¿¿B¿q¿~¿à¿¶¿Æ¿¡¿À¿Ã¿ˆ¿"¿{¿Å¿Õ¿Á¿$¿*¿M¿e¿s¿ç¿õ¿Ã¿È¿%¿t¿√¿¿C¿M¿s¿|¿¶¿»¿œ¿–¿‡¿
¿¿'¿+¿,¿8¿~¿™¿Ó¿D¿H¿J¿K¿ê¿î¿ÿ¿‹¿Í¿Ó¿:¿J¿ç¿¥¿∫¿Û¿˘¿/¿G¿X¿à¿†¿ª¿’¿¿'¿(¿4¿t¿u¿Å¿«¿„¿¯¿¿=¿S¿[¿a¿ó¿õ¿ú¿®¿ﬂ¿¯¿¿¿ ¿!¿4¿f¿Ñ¿î¿µ¿‘¿˜¿¿#¿G¿t¿£¿∞¿∫¿ÿ¿‡¿Û¿˝¿˛¿(¿T¿¶¿¨¿¯¿¿M¿S¿u¿ç¿õ¿µ¿√¿Ù¿¿M¿ú¿Î¿/¿k¿u¿õ¿§¿Õ¿Ô¿ˆ¿˜¿¿1¿D¿N¿R¿S¿_¿•¿—¿$¿(¿*¿+¿P¿j¿û¿¨¿≠¿Ê¿Ù¿ˆ¿˜¿:¿l¿ã¿ë¿ﬂ¿ ¿ $¿ s¿ û¿ µ¿ Ÿ¿!¿![¿!q¿!í¿!Ø¿!÷¿!Î¿!Ï¿"¿"¿"%¿"+¿"M¿"y¿"ì¿"∏¿"ÿ¿"Ê¿"Ï¿#¿#¿#3¿#I¿#M¿#N¿#ô¿#…¿#È¿$¿$2¿$@¿$F¿$]¿$s¿$w¿$x¿$√¿%¿%!¿%'¿%j¿%∞¿%Í¿&¿&?¿&b¿&p¿&v¿&í¿&®¿&¨¿&≠¿&π¿&À¿&‰¿&˘¿'¿'R¿'õ¿'Á¿(3¿(n¿(Ñ¿(à¿(â¿(ï¿(®¿(¡¿(÷¿(⁄¿(€¿(Á¿)¿)i¿)m¿)n¿)z¿)±¿)¿*G¿*|¿*ó¿*©¿*·¿*ˆ¿+¿+F¿+X¿+ó¿+—¿+Î¿,G¿,V¿,t¿,–¿-0¿-ç¿-ú¿-…¿-Ì¿.¿.@¿.O¿.|¿.ù¿.µ¿.Ó¿.˝¿/¿/¿/*¿/6¿/X¿/|¿/Ñ¿/ä¿/¨¿/·¿0%¿0G¿0k¿0s¿0y¿0}¿0~¿0ä¿0œ¿0˙¿1A¿1û¿1¢¿1§¿1•¿1›¿2¿2E¿2Y¿2y¿2ç¿2Ø¿2—¿2Ù¿3¿3,¿3B¿3b¿3Ç¿3™¿3“¿3Ï¿3¿3Ò¿4A¿4y¿4¿4Œ¿5¿52¿5E¿5c¿5¿5ç¿5ì¿5®¿5æ¿5ﬁ¿5‚¿5„¿6'¿6-¿6y¿6√¿6…¿7¿7Y¿7©¿7¯¿87¿8à¿8∫¿8€¿9¿9&¿94¿9:¿9R¿9h¿9à¿9å¿9ç¿9…¿9œ¿:¿:V¿:å¿:≠¿:Ÿ¿:¸¿;
¿;¿;,¿;B¿;b¿;f¿;g¿;s¿;¡¿;¬¿<¿<X¿<{¿<Å¿<—¿="¿=<¿==¿=T¿=U¿=§¿=√¿=…¿>¿>d¿>â¿>¥¿>’¿>Ù¿?¿?¿?.¿?D¿?d¿?h¿?i¿?ª¿?¡¿@¿@7¿@X¿@Ñ¿@ß¿@µ¿@ª¿@˜¿A¿AK¿As¿Ay¿Aè¿Aì¿Aî¿A≈¿A‹¿A˚¿B¿B1¿B5¿B6¿By¿Bö¿Bº¿B“¿BÚ¿Bˆ¿B˜¿C:¿C[¿C}¿Cì¿C≥¿C∑¿C∏¿C˚¿D¿D>¿DT¿Dt¿Dx¿Dy¿Dª¿D˙¿E)¿E?¿E_¿Ec¿Ed¿Eì¿Eƒ¿E˘¿F¿F/¿F3¿F4¿FY¿F•¿F›¿Fˆ¿F¸¿G+¿GF¿GÜ¿Gå¿G•¿G ¿H¿HG¿HM¿Ho¿Hî¿H›¿H„¿H˛¿I@¿IF¿IY¿I]¿I^¿Ij¿I∞¿IÁ¿J$¿Jb¿J|¿J¥¿J∏¿Jπ¿J≈¿K¿KR¿K{¿Kº¿K÷¿L¿LT¿L]¿Ld¿Lh¿Li¿Lu¿L¨¿L≈¿L˚¿M¿Mk¿Mé¿M„¿N'¿N]¿Nà¿N¢¿N∂¿N¬¿NÎ¿O	¿O¿O4¿OM¿Oû¿O´¿Oº¿OÚ¿P
¿P¿P#¿PÉ¿P£¿P‡¿Q¿QC¿Ql¿Qw¿Q¥¿Q‡¿QÒ¿R*¿R4¿Rl¿RÄ¿RÆ¿R≈¿R”¿R€¿R·¿RÂ¿RÊ¿RÚ¿S3¿Sa¿Se¿Sf¿Sr¿S∑¿S‚¿T)¿Tl¿T¿¿U%¿U|¿UÄ¿UÇ¿UÉ¿U»¿U˜¿V+¿V?¿V`¿Vî¿V∂¿VÃ¿VÔ¿W¿W!¿WH¿Wm¿WÇ¿WÉ¿W÷¿W˜¿W¯¿X¿X6¿XL¿XP¿XQ¿Xx¿Xã¿X®¿XΩ¿Xÿ¿XÒ¿Y	¿Y&¿YB¿YZ¿Yp¿Yv¿Yz¿Y{¿Y√¿Y›¿YÏ¿Z¿Z¿Z-¿Z3¿ZT¿Zf¿Z®¿Z¡¿ZŒ¿ZÁ¿Zˇ¿[¿[	¿[
¿[C¿[I¿[ô¿[Í¿\¿\ ¿\_¿\á¿\∏¿\ÿ¿]¿]"¿]0¿]6¿]N¿]e¿]Ä¿]Ñ¿]Ö¿]¡¿]«¿^¿^N¿^Ñ¿^•¿^—¿^Ù¿_¿_¿_$¿_;¿_V¿_Z¿_[¿_ú¿_ù¿_©¿_∂¿_ˆ¿`¿`Y¿`Z¿`o¿`é¿`’¿a¿aV¿aë¿aÆ¿a…¿a„¿b¿b ¿b:¿bê¿bò¿b•¿b»¿bŒ¿b“¿b”¿bﬂ¿b¯¿c¿cT¿ci¿cà¿cœ¿d¿dR¿dç¿d™¿d≈¿dﬂ¿d˛¿e¿e6¿eé¿eñ¿eØ¿eº¿eﬂ¿eÂ¿eÈ¿eÍ¿f¿f¿f¿fT¿fZ¿fy¿f£¿f≈¿fÊ¿g¿g%¿g=¿g_¿ge¿gi¿gj¿gÖ¿g§¿gª¿gø¿g¿¿g‹¿g˙¿h¿h¿h¿h(¿hJ¿hq¿h~¿h¥¿hﬁ¿i"¿il¿i∏¿j¿jX¿js¿jè¿jò¿j≥¿k	¿k;¿kò¿k»¿l¿lY¿l_¿lc¿ld¿lπ¿m¿m#¿mG¿ma¿mq¿mÜ¿mõ¿mË¿mÒ¿m˛¿n0¿n6¿nG¿nK¿nL¿nX¿nè¿nœ¿n›¿n„¿n˚¿o¿oR¿ov¿oê¿o†¿oº¿oﬁ¿p)¿pM¿pV¿pc¿pú¿p¢¿p¶¿pß¿p≥¿q¿q;¿qO¿qU¿qm¿qñ¿q≥¿qÕ¿r	¿rK¿rT¿r[¿r_¿r`¿rl¿rí¿r¥¿rÂ¿rÈ¿rÍ¿rˆ¿s7¿sV¿sq¿s~¿sò¿sø¿s≈¿s…¿s ¿s÷¿t¿tF¿t|¿t–¿u5¿u9¿u;¿u<¿uÄ¿uÑ¿u‘¿v¿vT¿vX¿vï¿v‚¿vı¿w0¿wt¿wî¿wµ¿wÿ¿wÓ¿x¿x&¿x'¿xp¿xv¿x≈¿x˛¿y(¿y?¿ya¿yÇ¿yê¿yñ¿y∞¿y∆¿yÊ¿yÍ¿yÎ¿y˜¿z=¿zÄ¿zΩ¿z˚¿{¿{M¿{Q¿{R¿{ü¿{Ë¿|¿|¿|a¿|≤¿|Ã¿|Õ¿|Ÿ¿}'¿}F¿}l¿}å¿}⁄¿}Ï¿~¿~B¿~Ñ¿~ç¿~î¿~ò¿~ô¿~•¿~‹¿~˚¿¿'¿8¿õ¿§¿™¿Æ¿Ø¿ª¿¸¿Ä^¿Äb¿Äc¿Äo¿Ä¥¿Äﬂ¿Å,¿ÅÉ¿Åá¿Åâ¿Åä¿Åƒ¿Å»¿Å¸¿ÇF¿ÇG¿ÇÅ¿ÇÖ¿Çπ¿É¿É¿É<¿É@¿Ét¿É∫¿Éª¿É˜¿É˚¿Ñ/¿Ñ}¿Ñ~¿Ñ¿¿Ñƒ¿Ñ¯¿ÖR¿ÖS¿Öñ¿Öö¿ÖŒ¿Ü*¿Ü+¿Ük¿Üo¿Ü£¿Ü˘¿Ü˙¿á6¿á:¿án¿áº¿áΩ¿á˜¿á˚¿àC¿àè¿àì¿à„¿â)¿âT¿âX¿âò¿âú¿âÎ¿ä3¿ä|¿äÇ¿äÃ¿äÊ¿ä˛¿ã¿ã,¿ãE¿ã_¿ã¿ã†¿ãæ¿ãÿ¿ãÏ¿ã˝¿å¿å¿åN¿åü¿åØ¿å⁄¿å€¿ç+¿çV¿çW¿ç•¿çƒ¿çÎ¿çÏ¿é:¿ég¿éh¿é∏¿éË¿è¿è¿è]¿èò¿èô¿è¬¿èˇ¿ê ¿ê'¿ê^¿ê_¿êõ¿ê ¿êÀ¿ê◊¿ë¿ë2¿ë6¿ë7¿ëC¿ëÄ¿ë¨¿ë»¿í ¿í8¿íl¿í¶¿í‚¿ì*¿ìt¿ì∏¿ìÙ¿î¿î¿î¿î¿î¿îb¿îç¿î°¿î·¿ï ¿ï¿ï:¿ï[¿ï~¿ï≠¿ïﬁ¿ñ	¿ñ,¿ñI¿ñP¿ñT¿ñV¿ñW¿ñ•¿ñ©¿ñı¿óB¿ó`¿ód¿ó≥¿ò¿ò$¿ò(¿òk¿òo¿ò¡¿ò≈¿ò”¿ò◊¿ô¿ô5¿ôw¿ôü¿ôË¿ôÓ¿ö:¿öÖ¿öõ¿ö≠¿öø¿ö–¿ö¸¿õ"¿õ:¿õK¿õä¿õ£¿õÿ¿õÒ¿ú4¿ú5¿úA¿úá¿ú»¿úÃ¿úÕ¿úŸ¿ù¿ùB¿ùh¿ùÑ¿ùä¿ùé¿ùè¿ù‡¿û1¿ûL¿ûR¿ûõ¿û„¿ü+¿üf¿ül¿üΩ¿†¿†-¿†3¿†P¿†n¿†~¿†ô¿†µ¿†Ã¿°¿°1¿°7¿°;¿°<¿°d¿°j¿°£¿°◊¿¢¿¢M¿¢m¿¢à¿¢’¿¢Ì¿¢Û¿¢˜¿¢¯¿£¿£*¿£+¿£v¿£ç¿£ì¿£◊¿£˝¿£˛¿§
¿§.¿§/¿§;¿§`¿§w¿§ô¿§µ¿§Ã¿•¿•M¿•e¿•k¿•o¿•p¿•|¿•∂¿•‘¿•’¿•·¿¶¿¶¿¶A¿¶E¿¶F¿¶R¿¶d¿¶Ø¿ß
¿ß2¿ßU¿ßi¿ßm¿ßn¿ßz¿ßµ¿ß’¿ßŸ¿ß⁄¿ßÊ¿®+¿®V¿®j¿®™¿®ƒ¿®ﬁ¿®ˆ¿©¿©¿©.¿©â¿©ê¿©Â¿©˘¿™¿™-¿™R¿™n¿™õ¿™§¿™´¿™Ø¿™±¿™≤¿™Â¿™È¿´5¿´Å¿´Œ¿¨¿¨h¿¨π¿¨‘¿¨ÿ¿≠'¿≠u¿≠∆¿Æ¿Æ`¿Æ∞¿Æ˛¿ØA¿ØE¿Øã¿Øÿ¿∞$¿∞s¿∞∫¿±¿±<¿±m¿±©¿±™¿±∂¿±‹¿±›¿≤'¿≤7¿≤=¿≤ç¿≤…¿≤œ¿≥ ¿≥N¿≥T¿≥¢¿≥€¿¥*¿¥y¿¥õ¿¥°¿¥∑¿¥Ω¿µ¿µ&¿µ,¿µ:¿µg¿µã¿µë¿µ£¿µ‹¿µ‰¿µÍ¿∂¿∂H¿∂N¿∂y¿∂Ú¿∑-¿∑ä¿∑œ¿∑Í¿∑Ù¿∑˙¿∏¿∏9¿∏[¿∏w¿∏í¿∏≥¿∏€¿π/¿π@¿πO¿π\¿πf¿πn¿πx¿πä¿πê¿π†¿π¶¿πÎ¿∫;¿∫s¿∫ë¿∫Ã¿ª¿ª¿ª¿ªg¿ªÖ¿ªã¿ª€¿º¿º¿ºr¿º†¿º¶¿ºÙ¿Ω-¿Ω|¿ΩÀ¿ΩÌ¿ΩÛ¿æE¿æî¿æö¿æ∞¿æ∂¿æ˝¿ø)¿ø/¿ø=¿øs¿ø†¿ø¶¿ø∏¿¿¿¿¿¿¿¿V¿¿Å¿¿á¿¿¶¿¡¿¡X¿¡ù¿¡ß¿¡≠¿¡ø¿¡Ï¿¬¿¬*¿¬E¿¬f¿¬ê¿¬‰¿¬ı¿√¿√¿√¿√#¿√-¿√?¿√E¿√U¿√[¿√§¿√¯¿ƒ,¿ƒJ¿ƒÖ¿ƒ’¿ƒŸ¿ƒ⁄¿≈*¿≈y¿≈«¿∆¿∆¿∆e¿∆q¿∆w¿∆≈¿«¿«'¿«h¿«ç¿«é¿«›¿»+¿»w¿»ƒ¿…¿…B¿…H¿…ï¿…°¿…ß¿…¯¿ C¿ [¿ û¿ ƒ¿ ≈¿À¿À'¿À-¿Àx¿Àï¿À•¿À ¿À¿Ã¿Ã¿Ã¿Ã¿Ã¿ÃÉ¿Ãì¿Ã¿¿ÃË¿Ã˜¿Õ ¿Õ(¿Õ;¿ÕE¿ÕI¿ÕJ¿ÕV¿Õõ¿Õ∆¿ÕÂ¿Õı¿Œ¿Œf¿ŒÑ¿Œú¿Œ˜¿œ¿œ¿œZ¿œè¿œ≥¿–¿–f¿–±¿–ƒ¿—W¿—j¿— ¿—¸¿“V¿“∞¿“ª¿“º¿“‘¿“Ô¿”¿”¿”8¿”ë¿”û¿”©¿”Í¿”Ú¿‘¿‘¿‘(¿‘>¿‘ù¿‘¶¿‘¨¿‘∞¿‘≤¿‘≥¿‘Ì¿‘Ò¿’@¿’è¿’‡¿÷	¿÷¿÷¿÷"¿÷o¿÷~¿÷Ç¿÷∑¿÷ª¿÷¯¿÷¸¿◊
¿◊¿◊\¿◊ä¿◊Ω¿◊˝¿ÿ¿ÿ+¿ÿE¿ÿV¿ÿ¶¿ÿ‚¿ÿË¿Ÿ¿Ÿ"¿ŸQ¿Ÿf¿Ÿg¿Ÿß¿Ÿ≠¿Ÿ˛¿⁄K¿⁄Q¿⁄à¿⁄™¿⁄º¿⁄Ÿ¿⁄˜¿€¿€¿€"¿€G¿€i¿€o¿€s¿€t¿€‘¿€⁄¿‹¿‹¿‹n¿‹}¿‹À¿›¿›	¿›>¿›Z¿›Å¿›®¿›∂¿›º¿›‹¿›¸¿ﬁ ¿ﬁ¿ﬁ¿ﬁS¿ﬁñ¿ﬁö¿ﬁõ¿ﬁß¿ﬁÁ¿ﬂ¿ﬂ¿ﬂ"¿ﬂP¿ﬂT¿ﬂU¿ﬂa¿ﬂ®¿ﬂ⁄¿‡+¿‡H¿‡ñ¿‡ö¿‡õ¿‡ß¿‡Ï¿·¿·]¿·q¿·í¿·Ø¿·À¿‚&¿‚/¿‚6¿‚:¿‚<¿‚=¿‚ç¿‚‹¿‚Ù¿„"¿„K¿„¨¿„≠¿„Í¿„¿‰;¿‰å¿‰π¿‰ø¿‰¸¿Â¿Â0¿ÂM¿Âk¿Ây¿Â¿Âñ¿Â√¿Â«¿Â»¿Â‘¿Ê¿Ê¿Ê-¿Ê3¿Êf¿Êj¿Êk¿Êw¿Ê™¿Êæ¿Ê–¿Ê÷¿Á	¿Á¿Á¿Á¿ÁM¿Áa¿Ás¿Áy¿Á¨¿Á∞¿Á±¿ÁΩ¿Á¿Ë¿Ë¿Ë¿ËO¿ËS¿ËT¿Ë`¿Ë£¿Ë∑¿Ë ¿Ë–¿È¿È¿È¿È¿ÈC¿ÈD¿ÈP¿È¢¿È¿ÈÙ¿Èı¿Í¿Í¿ÍN¿Íb¿ÍÖ¿Íã¿Íª¿Íø¿Í¿¿ÍÃ¿ÍÂ¿Í˚¿Î¿Î¿Î¿Î'¿Î@¿ÎT¿Îv¿ÎÉ¿Î†¿Î¶¿Î™¿Î´¿Î∑¿Î˝¿Ï@¿ÏD¿ÏE¿ÏQ¿Ïw¿Ïô¿ÏØ¿Ï≥¿Ï¥¿Ï¿¿Ï˜¿Ì¿Ì¿Ì¿ÌA¿ÌE¿ÌF¿ÌR¿Ìí¿Ì¶¿Ì¥¿Ì∫¿ÌË¿ÌÏ¿ÌÌ¿Ì˘¿Ó>¿Ói¿ÓÆ¿Ó≤¿Ó≥¿Óø¿ÓÒ¿Ô
¿Ô,¿Ô2¿ÔP¿Ôp¿Ôá¿Ôﬁ¿ÔÁ¿ÔÓ¿ÔÚ¿ÔÙ¿Ôı¿3¿7¿Ç¿Œ¿Ò¿Òl¿Òî¿Òò¿Ò©¿Ò≠¿Ò˙¿Ú	¿Ú¿ÚB¿ÚF¿ÚÉ¿Úá¿Úï¿Úô¿Ú„¿Û-¿Û`¿Û®¿Û¿¿Û÷¿ÛÒ¿Ù¿ÙR¿Ùé¿Ùî¿Ù±¿Ù–¿Ùˇ¿ı¿ı¿ı[¿ıa¿ı¨¿ı˚¿ˆ¿ˆ¿ˆH¿ˆl¿ˆ¿ˆù¿ˆº¿ˆ ¿ˆ–¿ˆË¿˜¿˜/¿˜5¿˜9¿˜:¿˜ä¿˜†¿˜¶¿˜Â¿˜Î¿¯:¿¯I¿¯ó¿¯—¿¯’¿˘
¿˘&¿˘M¿˘t¿˘Ç¿˘à¿˘®¿˘»¿˘Ã¿˘Õ¿˘Ÿ¿˙¿˙{¿˙¿˙Ä¿˙å¿˙Ã¿˙Û¿˚¿˚¿˚5¿˚9¿˚:¿˚F¿˚ç¿˚ø¿¸¿¸-¿¸{¿¸¿¸Ä¿¸å¿¸—¿¸¸¿˝C¿˝W¿˝x¿˝ï¿˝∞¿˛	¿˛¿˛¿˛¿˛¿˛ ¿˛O¿˛S¿˛§¿˛ı¿ˇ@¿ˇe¿ˇ¶¿ˇ‡¿ˇÊ¿ 0¿ p¿ q¿ §¿ ∏¿ π¿ ≈¿
¿5¿}¿Å¿É¿Ñ¿À¿Á¿7¿Ç¿§¿µ¿‘¿ˇ¿6¿k¿à¿ú¿≥¿÷¿¿D¿E¿î¿æ¿ƒ¿¿_¿Ä¿Ü¿ ¿¿i¿≥¿˛¿¿W¿~¿∞¿Ï¿˙¿ ¿¿;¿?¿@¿v¿°¿ø¿Ë¿	¿	¿	¿	C¿	W¿	Ä¿	¢¿	®¿	¨¿	≠¿
 ¿
=¿
g¿
ú¿
Ω¿
À¿
—¿¿¿F¿h¿n¿r¿s¿≥¿¿=¿~¿™¿∏¿æ¿˚¿ ¿I¿k¿q¿u¿v¿•¿ı¿)¿h¿í¿†¿¶¿·¿¿-¿O¿U¿Y¿Z¿ù¿‰¿$¿c¿y¿ê¿ë¿ù¿‰¿¿¿W¿s¿y¿≈¿Ì¿Û¿¿V¿í¿ö¿“¿¿¿¿B¿x¿Æ¿∂¿Ó¿(¿0¿6¿:¿;¿k¿Æ¿≤¿≥¿Ÿ¿¿A¿`¿{¿ß¿Õ¿¿¿$¿*¿.¿/¿V¿Ä¿Ω¿‹¿˜¿#¿I¿å¿ó¿†¿¶¿™¿´¿œ¿˜¿6¿S¿n¿ö¿¿¿¿¿¿¿!¿"¿H¿p¿Æ¿À¿Ê¿¿8¿{¿Ü¿è¿ï¿ô¿ö¿¶¿Î¿¿B¿b¿è¿Œ¿	¿¿,¿J¿P¿î¿ò¿ö¿õ¿ÿ¿1¿t¿z¿Â¿¿¿G¿c¿à¿´¿Œ¿Ï¿¿$¿B¿`¿|¿™¿‘¿˛¿ (¿ L¿ S¿ W¿ Y¿ Z¿ ©¿ ≈¿ …¿!¿!L¿!Ä¿!œ¿!‹¿"¿"9¿"M¿"N¿"õ¿"Î¿#¿#¿#<¿#Z¿#h¿#n¿#Ö¿#•¿#©¿#™¿#∂¿#˝¿$/¿$r¿$v¿$w¿$É¿$»¿$Û¿%8¿%<¿%>¿%?¿%Ç¿%≈¿%Ÿ¿%›¿&$¿&k¿&ù¿&—¿'¿'Z¿'[¿'g¿'Æ¿'‡¿'Î¿(¿(=¿(A¿(C¿(D¿(v¿(z¿(…¿(Â¿(È¿)0¿)k¿)°¿)Í¿*.¿*L¿*`¿*a¿*¶¿* ¿*›¿*˚¿+¿+(¿+.¿+F¿+f¿+j¿+k¿+w¿+∑¿+Ã¿+⁄¿+‡¿,¿,¿,¿,¿,d¿,è¿,÷¿,⁄¿,‹¿,›¿-¿-¿-h¿-±¿-„¿.¿.¿.¿.#¿.f¿.ú¿.Ï¿/M¿/N¿/Å¿/ú¿/™¿/√¿/›¿/Î¿/Ò¿0¿0%¿0)¿0*¿06¿0}¿0Ø¿0—¿0’¿0÷¿0‚¿1'¿1R¿1ê¿1î¿1ñ¿1ó¿1À¿1œ¿1›¿1·¿2¿2`¿2ë¿2 ¿3)¿3*¿3x¿3ñ¿3ú¿3Ì¿4¿4&¿49¿4W¿4q¿4¿4Ö¿4¢¿4µ¿4‹¿5
¿5¿5&¿5*¿5+¿57¿5b¿5c¿5±¿5ˇ¿6A¿6^¿6_¿6k¿6Ñ¿6ü¿6ø¿6€¿6ﬂ¿6‡¿6Ï¿7#¿7<¿7s¿7Ä¿7Ω¿7œ¿7Â¿8 ¿8¿8?¿8O¿8y¿8å¿8ñ¿8ö¿8õ¿8ß¿8Ï¿9¿9Y¿9]¿9_¿9`¿9Æ¿9·¿9Â¿:1¿:5¿:Ä¿:—¿:Â¿:È¿:˜¿:˚¿;;¿;~¿;±¿;Ï¿<¿<!¿<C¿<d¿<î¿<∆¿<‹¿<Ò¿=¿=7¿=\¿=Ö¿=ö¿=õ¿=·¿>¿>6¿>I¿>g¿>Å¿>è¿>ï¿>®¿>æ¿>¬¿>√¿?¿?E¿?K¿?ú¿?ﬁ¿?‰¿@5¿@Ñ¿@∏¿@Í¿A¿A)¿AO¿A]¿Ac¿AÇ¿Aò¿Aú¿Aù¿AÍ¿B¿B4¿BF¿Bc¿B¿Bç¿Bì¿B®¿Bæ¿B¬¿B√¿C¿C+¿C1¿Cv¿Cª¿D
¿DL¿Dõ¿D‹¿E¿EG¿E\¿Eb¿Eâ¿E∏¿E”¿E˘¿F¿F)¿F/¿FJ¿F`¿Fd¿Fe¿F±¿FÎ¿FÒ¿G3¿G9¿G`¿Gì¿G∞¿Gÿ¿G¸¿H
¿H¿H-¿HC¿HG¿HH¿HT¿Hf¿Hx¿Hå¿Hê¿Hë¿Hù¿H»¿H…¿Hˇ¿I¿IH¿II¿Iô¿Iü¿IÔ¿J ¿Jo¿Jâ¿J´¿JÁ¿JÎ¿JÏ¿J¯¿K>¿K¿K≥¿K«¿KÕ¿L¿LE¿LÉ¿Lù¿L’¿LŸ¿L⁄¿LÊ¿M4¿M]¿MÖ¿Mü¿M€¿N¿N&¿N-¿N1¿N2¿N>¿Nu¿N£¿NØ¿O
¿O_¿O™¿O’¿O‹¿P¿P.¿Pã¿P§¿P¡¿P’¿Q¿Q.¿QN¿QW¿Qd¿Qp¿Qá¿Qµ¿Q‰¿R¿R¿R$¿R2¿RE¿RX¿RÖ¿R„¿S¿S%¿S>¿SW¿S`¿Sg¿Sw¿S°¿S¥¿Sæ¿S¬¿S√¿Sœ¿T¿T?¿TC¿TD¿TP¿Tï¿T¿¿U¿UW¿Uö¿UÙ¿U¯¿U˙¿U˚¿VJ¿VN¿V\¿V`¿V§¿VÈ¿W0¿Ww¿Wâ¿Wè¿W‹¿X¿X¿XC¿Xñ¿X¨¿X¬¿Xˇ¿Y¿Y¿YM¿Yf¿Yr¿Yå¿Y™¿Y∏¿Yæ¿Y’¿YÎ¿YÔ¿Y¿ZD¿Z`¿Zo¿Zâ¿Z§¿Z≤¿Z∏¿ZÃ¿Z‚¿ZÊ¿ZÁ¿["¿[#¿[/¿[[¿[\¿[h¿[ü¿[˘¿\<¿\I¿\j¿\è¿\ñ¿\∂¿\È¿\Ì¿\Ó¿\˙¿]¿],¿]A¿]E¿]G   t/// @docImport 'package:flutter/widgets.dart';
///
/// @docImport 'proxy_sliver.dart';
/// @docImport 'sliver.dart';
Å$Å9Å8Å;ÅcÅf   Åè   Åπ   Å·   Ç
   Ç3   ÇF   Ç[   Çx   ÇèÇ∫É +ÉÑwÉÜÇÎ/// A base class for render boxes that resemble their children.
///
/// A proxy box has a single child and mimics all the properties of that
/// child by calling through to the child for each function in the render box
/// protocol. For example, a proxy box determines its size by asking its child
/// to layout with the same constraints and then matching the size.
///
/// A proxy box isn't useful on its own because you might as well just replace
/// the proxy box with its child. However, RenderProxyBox is a useful base class
/// for render objects that wish to mimic most, but not all, of the properties
/// of their child.
///
/// See also:
///
///  * [RenderProxySliver], a base class for render slivers that resemble their
///    children. Ü|ÅáK áKáY Äƒ/// Creates a proxy render box.
///
/// Proxy render boxes are rarely created directly because they proxy
/// the render box protocol to [child]. Instead, consider using one of the
/// subclasses.á[ágáf        î(Öôî(îêX/// A RenderProxyBox subclass that allows you to customize the
/// hit-testing behavior. îÕÄ˝ïJ ïJïk v/// Initializes member variables for subclasses.
///
/// By default, the [behavior] is [HitTestBehavior.deferToChild].ïr,ïxïw  ï§ï∞ïØ  ïÇïëïíïΩï¬ï»ï√ïŒÅ1ñ˜ñ˜Å/// How to behave during hit testing when deciding how the hit test propagates
/// to children and whether to consider targets behind this one.
///
/// Defaults to [HitTestBehavior.deferToChild].
///
/// See [HitTestBehavior] for the allowed values and their meanings.   óÅÖóó  óó/ó.  ó7óHóG  óóòçTòûòû  ò™ò≤ò±  òçòéòÂÄ⁄òˆòˆ  ô
&ô'ô&  òÂòÊ ô√ëRô√õ≠Å„/// Imposes additional constraints on its child.
///
/// A render constrained box proxies most functions in the render box protocol
/// to its child, except that when laying out its child, it tightens the
/// constraints provided by its parent by enforcing the [additionalConstraints]
/// as well.
///
/// For example, if you wanted [child] to have a minimum height of 50.0 logical
/// pixels, you could use `const BoxConstraints(minHeight: 50.0)` as the
/// [additionalConstraints]. õ›ÅQúS úSúg o/// Creates a render box that constrains its child.
///
/// The [additionalConstraints] argument must be valid.úiúuút  ú{-úîúì  ú±ú∑ú‚ú∏úÕúŒú‡ú·ùúÎùù!ù&ù,ù'ù∏%ù«ù«  ù2ÄÉùÖùÖ=/// Additional constraints to apply to [child] during layout.   ù·Ä◊ùÂùÂ  ù˚ûû
   	ûºÅ≤ûœûœ  ûËûûÔ  ûºûΩ†rÅ≤†Ö†Ö  †û†¶†•  †r†s¢(Åª¢;¢;  ¢U¢]¢\  ¢(¢)£ÁÅª£˙£˙  §§§  £Á£Ë•¶Ä¬•∫•∫  •Õ$•Á•Ê  •Û¶¶   •¶•ß¶lÅL¶}¶}   ¶l¶mßºÄÛß⁄ß⁄  ßÎ$®®  ßºßΩß»ß…®≥Åi®ƒ®ƒ  ®”®‰®„  ®Ï®Ù®Û  ®≥®¥™ ÄÛ™1™1  ™E&™b™a  ™ ™! ´åo´≠çÇo/// Constrains the child's [BoxConstraints.maxWidth] and
/// [BoxConstraints.maxHeight] if they're otherwise unconstrained.
///
/// This has the effect of giving the child a natural dimension in unbounded
/// environments. For example, by providing a [maxHeight] to a widget that
/// normally tries to be as big as possible, the widget will normally size
/// itself to fit its parent, but when placed in a vertical list, it will take
/// on the given height.
///
/// This is useful when composing widgets that normally try to match their
/// parents' size, so that they behave reasonably in lists (which are
/// unbounded). ≠πÅÆ† Æ†Æ∞ Ä‹/// Creates a render box that imposes a maximum width or maximum height on its
/// child if the child is otherwise unconstrained.
///
/// The [maxWidth] and [maxHeight] arguments not be null and must be
/// non-negative.Æ∑Æ√Æ¬  ÆÕ!Æ’Æ‘  ÆÙ"Æ¸Æ˚  ÆﬂÆÂÆÊØØØØØ%Ø5Ø/Ø&Ø2Ø?ØEØVØPØFØSØjØ`ØlØàØ}ØäØúØ°ØßØ¢∞&∞-∞-  ±U±\±\  Ø≠v∞∞R/// The value to use for maxWidth if the incoming maxWidth constraint is infinite.   ∞ÿz±:±:T/// The value to use for maxHeight if the incoming maxHeight constraint is infinite.   ∞:Äö∞>∞>  ∞G∞O∞N   ±jÄù±n±n  ±x±Ä±   ≤Åµ≤≤  ≤,≤<≤;   ≥ƒÅB≥…≥…  ≥◊#≥≥Ô  ≥¸"¥¥   µ
Äºµ(µ(  µ9$µSµR  µ
µµµµ ÄÖµ€µ€   µ µÀ∂SÅ1∂d∂d  ∂x&∂ï∂î  ∂S∂T ∑àñï∑àæ
Ü{/// Attempts to size the child to a specific aspect ratio.
///
/// The render object first tries the largest width permitted by the layout
/// constraints. The height of the render object is determined by applying the
/// given aspect ratio to the width, expressed as a ratio of width to height.
///
/// For example, a 16:9 width:height aspect ratio would have a value of
/// 16.0/9.0. If the maximum width is infinite, the initial width is determined
/// by applying the aspect ratio to the maximum height.
///
/// Now consider a second example, this time with an aspect ratio of 2.0 and
/// layout constraints that require the width to be between 0.0 and 100.0 and
/// the height to be between 0.0 and 100.0. We'll select a width of 100.0 (the
/// biggest allowed) and a height of 50.0 (to match the aspect ratio).
///
/// In that same situation, if the aspect ratio is 0.5, we'll also select a
/// width of 100.0 (still the biggest allowed) and we'll attempt to use a height
/// of 200.0. Unfortunately, that violates the constraints because the child can
/// be at most 100.0 pixels tall. The render object will then take that value
/// and apply the aspect ratio again to obtain a width of 50.0. That width is
/// permitted by the constraints and the child receives a width of 50.0 and a
/// height of 100.0. If the width were not permitted, the render object would
/// continue iterating through the constraints. If the render object does not
/// find a feasible size after consulting each constraint, the render object
/// will eventually select a size for the child that meets the layout
/// constraints but fails to meet the aspect ratio constraints. æ7ÅCæΩ æΩæŒ /// Creates as render object with a specific aspect ratio.
///
/// The [aspectRatio] argument must be a finite, positive value.æ–æ‹æ€  æ‚æÛæÚ  øøøøøøø'ø-øBø.ø9ø:øXøKøZømørøxøs¿ @o¿ @v¿ @v  ø~ÄÓ¿ @P¿ @PÄæ/// The aspect ratio to attempt to use.
///
/// The aspect ratio is expressed as a ratio of width to height. For example,
/// a 16:9 width:height aspect ratio would have a value of 16.0/9.0.   ¿ @ÜÄæ¿ @ä¿ @ä  ¿ @ñ¿ @û¿ @ù   	¿ AHÄº¿ A[¿ A[  ¿ At¿ A|¿ A{  ¿ AH¿ AI¿ BÄº¿ B¿ B  ¿ B4¿ B<¿ B;  ¿ B¿ B	¿ B»Ä∫¿ B€¿ B€  ¿ Bı¿ B˝¿ B¸  ¿ B»¿ B…¿ CÜÄ∫¿ Cô¿ Cô  ¿ C≥¿ Cª¿ C∫  ¿ CÜ¿ Cá¿ DDáK¿ DI¿ DI  ¿ D[¿ Dk¿ Dj   ¿ KìÄÖ¿ K±¿ K±  ¿ K¬$¿ K‹¿ K€  ¿ Kì¿ Kî¿ Kü¿ K†¿ LÄø¿ L0¿ L0  ¿ LC¿ LS¿ LR  ¿ L_¿ Lm¿ Ll  ¿ L¿ L¿ Lﬂ{¿ L¿ L   ¿ Lﬂ¿ L‡¿ M^ÄΩ¿ Mo¿ Mo  ¿ MÉ&¿ M†¿ Mü  ¿ M^¿ M_ ¿ Nñ¿ N¿ T·Üº/// Sizes its child to the child's maximum intrinsic width.
///
/// This class is useful, for example, when unlimited width is available and
/// you would like a child that would otherwise attempt to expand infinitely to
/// instead size itself to a more reasonable width.
///
/// The constraints that this object passes to its child will adhere to the
/// parent's constraints, so if the constraints are not large enough to satisfy
/// the child's maximum intrinsic width, then the child will get less width
/// than it otherwise would. Likewise, if the minimum width constraint is
/// larger than the child's maximum intrinsic width, the child will be given
/// more width than it otherwise would.
///
/// If [stepWidth] is non-null, the child's width will be snapped to a multiple
/// of the [stepWidth]. Similarly, if [stepHeight] is non-null, the child's
/// height will be snapped to a multiple of the [stepHeight].
///
/// This class is relatively expensive, because it adds a speculative layout
/// pass before the final layout phase. Avoid using it where possible. In the
/// worst case, this render object can result in a layout that is O(N¬≤) in the
/// depth of the tree.
///
/// See also:
///
///  * [Align], a widget that aligns its child within itself. This can be used
///    to loosen the constraints passed to the [RenderIntrinsicWidth],
///    allowing the [RenderIntrinsicWidth]'s child to be smaller than that of
///    its parent.
///  * [Row], which when used with [CrossAxisAlignment.stretch] can be used
///    to loosen just the width constraints that are passed to the
///    [RenderIntrinsicWidth], allowing the [RenderIntrinsicWidth]'s child's
///    width to be smaller than that of its parent. ¿ UÅ“¿ Uÿ ¿ Uÿ¿ UÏ Äæ/// Creates a render object that sizes itself to its child's intrinsic width.
///
/// If [stepWidth] is non-null it must be > 0.0. Similarly If [stepHeight] is
/// non-null it must be > 0.0.¿ UÓ¿ U˜¿ Uˆ  ¿ V¿ V
¿ V	  ¿ V¿ V!¿ V   ¿ V.¿ V4¿ VY¿ VG¿ V?¿ V5¿ VB¿ VT¿ VJ¿ VV¿ Vb¿ Vh¿ Vè¿ V|¿ Vt¿ Vi¿ Vw¿ Vä¿ V¿ Vå¿ V£¿ Vò¿ V•¿ V¬¿ V∂¿ Vƒ¿ V÷¿ V€¿ V·¿ V‹¿ Wá¿ Wè¿ Wè  ¿ XÚ¿ X˙¿ X˙  ¿ VÁÄù¿ Wl¿ Wlr/// If non-null, force the child's width to be a multiple of this value.
///
/// This value must be null or > 0.0.   ¿ XOÄ†¿ X’¿ X’s/// If non-null, force the child's height to be a multiple of this value.
///
/// This value must be null or > 0.0.   ¿ WùÄÆ¿ W°¿ W°  ¿ W´¿ W¥¿ W≥   ¿ Y	Ä±¿ Y¿ Y  ¿ Y¿ Y!¿ Y    ¿ YæÄ±¿ YÃ¿ YÃ  ¿ Y◊¿ Yﬂ¿ Yﬁ  ¿ YÂ¿ YÓ¿ YÌ   ¿ Zsi¿ ZÜ¿ ZÜ  ¿ Zü¿ Zß¿ Z¶  ¿ Zs¿ Zt¿ Z‡ÄŸ¿ ZÛ¿ ZÛ  ¿ [¿ [¿ [  ¿ Z‡¿ Z·¿ [ΩÅN¿ [–¿ [–  ¿ [Í¿ [Ú¿ [Ò  ¿ [Ω¿ [æ¿ ]ÅN¿ ]"¿ ]"  ¿ ]<¿ ]D¿ ]C  ¿ ]¿ ]¿ ^aÅì¿ ^p¿ ^p  ¿ ^Ç¿ ^ç¿ ^å  ¿ ^ì¿ ^£¿ ^¢   ¿ _¯Å¿ _˝¿ _˝  ¿ `"¿ `#¿ `"  ¿ `/#¿ `H¿ `G   ¿ aÄº¿ a"¿ a"  ¿ a3$¿ aM¿ aL  ¿ a¿ a¿ a¿ a¿ aƒÄ€¿ aÿ¿ aÿ  ¿ aÎ¿ a˚¿ a˙  ¿ b¿ b¿ b  ¿ aƒ¿ a≈¿ b£ÄÖ¿ b¥¿ b¥   ¿ b£¿ b§¿ c,Ä˜¿ c=¿ c=  ¿ cQ&¿ cn¿ cm  ¿ c,¿ c- ¿ d'ç|¿ d'¿ jÖÁ/// Sizes its child to the child's intrinsic height.
///
/// This class is useful, for example, when unlimited height is available and
/// you would like a child that would otherwise attempt to expand infinitely to
/// instead size itself to a more reasonable height.
///
/// The constraints that this object passes to its child will adhere to the
/// parent's constraints, so if the constraints are not large enough to satisfy
/// the child's maximum intrinsic height, then the child will get less height
/// than it otherwise would. Likewise, if the minimum height constraint is
/// larger than the child's maximum intrinsic height, the child will be given
/// more height than it otherwise would.
///
/// This class is relatively expensive, because it adds a speculative layout
/// pass before the final layout phase. Avoid using it where possible. In the
/// worst case, this render object can result in a layout that is O(N¬≤) in the
/// depth of the tree.
///
/// See also:
///
///  * [Align], a widget that aligns its child within itself. This can be used
///    to loosen the constraints passed to the [RenderIntrinsicHeight],
///    allowing the [RenderIntrinsicHeight]'s child to be smaller than that of
///    its parent.
///  * [Column], which when used with [CrossAxisAlignment.stretch] can be used
///    to loosen just the height constraints that are passed to the
///    [RenderIntrinsicHeight], allowing the [RenderIntrinsicHeight]'s child's
///    height to be smaller than that of its parent. ¿ jEÄä¿ jñ ¿ jñ¿ j´ N/// Creates a render object that sizes itself to its child's intrinsic height.¿ j≠¿ jπ¿ j∏  ¿ j¬¿ j«¿ jÕ¿ j»   ¿ j”Å¿ jÊ¿ jÊ  ¿ jˇ¿ k¿ k  ¿ j”¿ j‘¿ kıÅ¿ l¿ l  ¿ l!¿ l)¿ l(  ¿ kı¿ kˆ¿ mi¿ m*¿ m*  ¿ mD¿ mL¿ mK  ¿ m¿ m¿ mÑÄÈ¿ mì¿ mì  ¿ m•¿ m∞¿ mØ  ¿ m∂¿ m∆¿ m≈   ¿ nqÅ¿ nv¿ nv  ¿ nÑ"¿ nú¿ nõ  ¿ n®#¿ n¡¿ n¿   ¿ o}Äº¿ oõ¿ oõ  ¿ o¨$¿ o∆¿ o≈  ¿ o}¿ o~¿ oâ¿ oä¿ p=Ä€¿ pQ¿ pQ  ¿ pd¿ pt¿ ps  ¿ pÄ¿ pé¿ pç  ¿ p=¿ p>¿ qÄÖ¿ q-¿ q-   ¿ q¿ q ¿ q•ÅÒ¿ q•¿ qÏ@/// Excludes the child from baseline computations in the parent. ¿ rÄõ¿ r ¿ r¿ rì `/// Create a render object that causes the parent to ignore the child for baseline computations.¿ rï¿ r°¿ r†  ¿ r™¿ rØ¿ rµ¿ r∞   ¿ rª^¿ rÃ¿ rÃ  ¿ rÏ¿ r˙¿ r˘  ¿ rª¿ rº¿ sw¿ s.¿ s.  ¿ sA$¿ s[¿ sZ  ¿ sg¿ su¿ st  ¿ s¿ s ¿ sòç≥¿ sò¿ uÉÅ‰/// Makes its child partially transparent.
///
/// This class paints its child into an intermediate buffer and then blends the
/// child back into the scene partially transparent.
///
/// For values of opacity other than 0.0 and 1.0, this class is relatively
/// expensive because it requires painting the child into an intermediate
/// buffer. For the value 0.0, the child is not painted at all. For the
/// value 1.0, the child is painted immediately without an intermediate buffer. ¿ u¨Å®¿ v, ¿ v,¿ v9 y/// Creates a partially transparent render object.
///
/// The [opacity] argument must be between 0.0 and 1.0, inclusive.¿ v;¿ vC¿ vB  ¿ vQ#¿ vW¿ vV  ¿ vv¿ vÇ¿ vÅ   ¿ vL¿ vo¿ vè¿ vï¿ v∂¿ v•¿ vû¿ vñ¿ v°¿ v∞¿ v®¿ v≥¿ v»¿ vø¿ v ¿ vÒ¿ vŸ¿ vÛ¿ w¿ w¿ w¿ w¿ w¿ w"¿ w#¿ w6¿ w>¿ w7¿ wG¿ wL¿ wR¿ wM¿ wÏ
¿ w¿ w  ¿ yc¿ yj¿ yj  ¿ |Å¿ |Ü¿ |Ü  ¿ wXK¿ wm¿ wm   ¿ wX¿ wY¿ wßA¿ wº¿ wº   ¿ wß¿ w®¿ w˚Åe¿ yL¿ yLÅ5/// The fraction to scale the child's alpha value.
///
/// An opacity of 1.0 is fully opaque. An opacity of 0.0 is fully transparent
/// (i.e., invisible).
///
/// Values 1.0 and 0.0 are painted with a fast path. Other values
/// require painting the child into an intermediate buffer, which is
/// expensive.   ¿ {öÄ‰¿ |L¿ |LÄû/// Whether child semantics are included regardless of the opacity.
///
/// If false, semantics are excluded when [opacity] is 0.0.
///
/// Defaults to false.   ¿ yvÇ ¿ yz¿ yz  ¿ yÇ¿ yä¿ yâ   ¿ |°Ä±¿ |•¿ |•  ¿ |º
¿ |¬¿ |¡   ¿ }Vl¿ }g¿ }g  ¿ }s¿ }~¿ }}  ¿ }V¿ }W¿ }∆Ä«¿ }ﬁ¿ }ﬁ  ¿ }˛ ¿ ~¿ ~  ¿ }∆¿ }«¿ ~ëÄ¢¿ ~¢¿ ~¢  ¿ ~®¿ ~π¿ ~∏  ¿ ~¡¿ ~…¿ ~»  ¿ ~ë¿ ~í¿ 7ÄÆ¿ H¿ H  ¿ b¿ w¿ v  ¿ 7¿ 8¿ ÈÅ`¿ ˙¿ ˙  ¿ Ä&¿ Ä+¿ Ä*  ¿ È¿ Í ¿ ê_ÇO¿ ê_¿ ë-Ä«/// Makes its child partially transparent, driven from an [Animation].
///
/// This is a variant of [RenderOpacity] that uses an [Animation<double>] rather
/// than a [double] to control the opacity. ¿ ëâÅ#¿ ëæ ¿ ëæ¿ ë” 2/// Creates a partially transparent render object.¿ ë⁄"¿ ëˆ¿ ëı  ¿ í#¿ í¿ í  ¿ í+¿ í7¿ í6  ¿ í ¿ íD¿ íI¿ íO¿ íJ     ¿ ìqâ¿ ìq¿ î8Ä¿/// Applies a mask generated by a [Shader] to its child.
///
/// For example, [RenderShaderMask] can be used to gradually fade out the edge
/// of a child by using a [ui.Gradient.linear] mask. ¿ îdÅ7¿ îº ¿ îº¿ îÃ U/// Creates a render object that applies a mask generated by a [Shader] to its child.¿ î”¿ îﬂ¿ îﬁ  ¿ îÈ&¿ ï¿ ï  ¿ ï(¿ ï ¿ ï  ¿ ï+¿ ï4¿ ï5¿ ïV¿ ïF¿ ïX¿ ïz¿ ïo¿ ï|¿ ïé¿ ïì¿ ïô¿ ïî¿ óÁ¿ óˆ¿ óˆ  ¿ ô≥¿ ôΩ¿ ôΩ  ¿ ïüJ¿ ï¿¿ ï¿   ¿ ïü¿ ï†¿ ïÌÅ˜¿ ó¬¿ ó¬Å-/// Called to creates the [Shader] that generates the mask.
///
/// The shader callback is called with the current size of the child so that
/// it can customize the shader to the size and location of the child.
///
/// The rectangle will always be at the origin when called by
/// [RenderShaderMask].   ¿ ò¶Å
¿ ôò¿ ôòÄ€/// The [BlendMode] to use when applying the shader to the child.
///
/// The default, [BlendMode.modulate], is useful for applying an alpha blend
/// to the child. Other blend modes can be used to create other effects.   ¿ öT=¿ öi¿ öi   ¿ öT¿ öU¿ ò	Äô¿ ò¿ ò  ¿ ò¿ ò,¿ ò+   ¿ ôÀÄÖ¿ ôœ¿ ôœ  ¿ ôŸ¿ ô‰¿ ô„   ¿ öïÅÂ¿ ö¶¿ ö¶  ¿ ö¨¿ öΩ¿ öº  ¿ ö≈¿ öÕ¿ öÃ  ¿ öï¿ öñ ¿ ú~ä¿¿ ú~¿ ù:Äµ/// Applies a filter to the existing painted content and then paints [child].
///
/// This effect is relatively expensive, especially if the filter is non-local,
/// such as a blur. ¿ ùjÅ•¿ ù– ¿ ù–¿ ù‰ \/// Creates a backdrop filter.
/// The [blendMode] argument defaults to [BlendMode.srcOver].¿ ùÎ¿ ù˜¿ ùˆ  ¿ û¿ û¿ û  ¿ û%'¿ û0¿ û/  ¿ ûR¿ ûX¿ ûW  ¿ ûk¿ ûy¿ ûx  ¿ û;¿ ûD¿ ûE¿ ûa¿ ûî¿ ûå¿ ûñ¿ ûÆ¿ û•¿ û∞¿ ûÀ¿ û¿¿ ûÕ¿ ûÏ¿ ûﬂ¿ ûÓ¿ ü¿ ü¿ ü¿ ü¿ ü⁄¿ üﬂ¿ üﬂ  ¿ °W¿ °f¿ °f  ¿ ¢≈¿ ¢œ¿ ¢œ  ¿ §1¿ §>¿ §>  ¿ üR¿ ü8¿ ü8   ¿ ü¿ ü¿ üin¿ ü√¿ ü√N/// Whether or not the backdrop filter operation will be applied to the child.   ¿ †hÄÏ¿ °B¿ °BÄº/// The image filter to apply to the existing painted content before painting
/// the child.
///
/// For example, consider using [ui.ImageFilter.blur] to create a backdrop
/// blur effect.   ¿ °ˆÄÃ¿ ¢™¿ ¢™Äù/// The blend mode to use to apply the filtered background content onto the background
/// surface.
///
/// {@macro flutter.widgets.BackdropFilter.blendMode}   ¿ £fÄ»¿ §¿ §Äí/// The backdrop key that identifies the [BackdropGroup] this filter will
/// read from.
///
/// The default value for the backdrop key is `null`.   ¿ §‡=¿ §ı¿ §ı   ¿ §‡¿ §·¿ üÎy¿ üÔ¿ üÔ  ¿ ü˜
¿ ü˝¿ ü¸   ¿ °qÄÅ¿ °u¿ °u  ¿ °|¿ °å¿ °ã   ¿ ¢›ÄÖ¿ ¢·¿ ¢·  ¿ ¢Î¿ ¢ˆ¿ ¢ı   ¿ §NÄé¿ §R¿ §R  ¿ §^¿ §l¿ §k   ¿ •!Ç¿ •2¿ •2  ¿ •8¿ •I¿ •H  ¿ •Q¿ •Y¿ •X  ¿ •!¿ •" ¿ ß@éï¿ ß@¿ ´¢ÑR/// An interface for providing custom clips.
///
/// This class is used by a number of clip widgets (e.g., [ClipRect] and
/// [ClipPath]).
///
/// The [getClip] method is called whenever the custom clip needs to be updated.
///
/// The [shouldReclip] method is called when a new instance of the class
/// is provided, to check if the new instance actually represents different
/// information.
///
/// The most efficient way to update the clip provided by this class is to
/// supply a `reclip` argument to the constructor of the [CustomClipper]. The
/// custom object will listen to this animation and update the clip whenever the
/// animation ticks, avoiding both the build and layout phases of the pipeline.
///
/// See also:
///
///  * [ClipRect], which can be customized with a [CustomClipper<Rect>].
///  * [ClipRRect], which can be customized with a [CustomClipper<RRect>].
///  * [ClipOval], which can be customized with a [CustomClipper<Rect>].
///  * [ClipPath], which can be customized with a [CustomClipper<Path>].
///  * [ShapeBorderClipper], for specifying a clip path using a [ShapeBorder].¿ ´∞¿ ´∞¿ ´∞¿ ´ Ä¥¿ ¨G ¿ ¨G¿ ¨T p/// Creates a custom clipper.
///
/// The clipper will update its clip whenever [reclip] notifies its listeners.¿ ¨V¿ ¨c¿ ¨b  ¿ ¨u¿ ¨m¿ ¨w¿ ¨Ç¿ ¨î¿ ¨î    ¿ ¨†ÅU¿ ≠∞¿ ≠∞ÄÙ/// Register a closure to be notified when it is time to reclip.
///
/// The [CustomClipper] implementation merely forwards to the same method on
/// the [Listenable] provided to the constructor in the `reclip` argument, if
/// it was not null. ¿ ≠º¿ ≠ ¿ ≠…  ¿ ≠ü¿ ≠†¿ ≠˘Åô¿ ØG¿ ØGÅ0/// Remove a previously registered closure from the list of closures that the
/// object notifies when it is time to reclip.
///
/// The [CustomClipper] implementation merely forwards to the same method on
/// the [Listenable] provided to the constructor in the `reclip` argument, if
/// it was not null. ¿ ØV¿ Ød¿ Øc  ¿ Ø6¿ Ø7¿ ØñÄÑ¿ ∞¿ ∞j/// Returns a description of the clip given that the render object being
/// clipped is of the given size. ¿ ∞	¿ ∞¿ ∞   ¿ ∞Ç¿ ±˙¿ ±˙Å∆/// Returns an approximation of the clip returned by [getClip], as
/// an axis-aligned Rect. This is used by the semantics layer to
/// determine whether widgets should be excluded.
///
/// By default, this returns a rectangle that is the same size as
/// the RenderObject. If getClip returns a shape that is roughly the
/// same size as the RenderObject (e.g. it's a rounded rectangle
/// with very small arcs in the corners), then this may be adequate. ¿ ≤	¿ ≤¿ ≤   ¿ ≤6ÉO¿ µQ¿ µQÇ˜/// Called whenever a new instance of the custom clipper delegate class is
/// provided to the clip object, or any time that a new clip object is created
/// with a new instance of the custom clipper delegate class (which amounts to
/// the same thing, because the latter is implemented in terms of the former).
///
/// If the new instance represents different information than the old
/// instance, then the method should return true, otherwise it should return
/// false.
///
/// If the method returns false, then the [getClip] call might be optimized
/// away.
///
/// It's possible that the [getClip] method will get called even if
/// [shouldReclip] returns false or if the [shouldReclip] method is never
/// called at all (e.g. if the box changes size). ¿ µ^%¿ µz¿ µy   ¿ µâJ¿ µú¿ µú   ¿ µâ¿ µä ¿ µ◊ÖU¿ µ◊¿ ∂$F/// A [CustomClipper] that clips to the outer path of a [ShapeBorder]. ¿ ∂WÅò¿ ∑± ¿ ∑±¿ ∑√ ÅG/// Creates a [ShapeBorder] clipper.
///
/// The [textDirection] argument must be provided non-null if [shape]
/// has a text direction dependency (for example if it is expressed in terms
/// of "start" and "end" instead of "left" and "right"). It may be null if
/// the border will not need the text direction to paint itself.¿ ∑≈¿ ∑‘¿ ∑”  ¿ ∑⁄¿ ∑‡¿ ∑ﬂ   ¿ ∑ÛV¿ ∏D¿ ∏D</// The shape border whose outer path this clipper clips to. ¿ ∏NÄ‚¿ π#¿ π#Ä∑/// The text direction to use for getting the outer path for [shape].
///
/// [ShapeBorder]s can depend on the text direction (e.g having a "dent"
/// towards the start of the shape).   ¿ π5ÄØ¿ π{¿ π{2/// Returns the outer path of [shape] as the clip. ¿ πÉ	¿ πâ¿ πà  ¿ πj¿ πk¿ πËÅB¿ π˘¿ π˘  ¿ ∫¿ ∫¿ ∫  ¿ πË¿ πÈ ¿ ª.å¿ ª.¿ ª= ¿ ªO¿ ªO¿ ªO¿ ªmÄ≈¿ ªm ¿ ªm¿ ª~  ¿ ªÖ¿ ªë¿ ªê  ¿ ªõ¿ ªÆ¿ ª≠  ¿ ª∫"¿ ª¿¿ ªø  ¿ ªŒ¿ ª“¿ ª”¿ ªÓ¿ ªÂ¿ ª¿ º¿ º ¿ º¿ º%¿ º*¿ º0¿ º+¿ º°¿ º≥¿ º≥  ¿ ¿H¿ ¿K¿ ¿K  ¿ ¡¿ ¡¿ ¡  ¿ √Z¿ √a¿ √a  ¿ √p¿ √}¿ √}  ¿ º6h¿ ºä¿ ºä;/// If non-null, determines which clip to use on the child.   ¿ ¿2¿ ¿8¿ ¿8    ¿ ¿U'¿ ¿^¿ ¿^    ¿ ºøÇ)¿ º√¿ º√  ¿ ºÀ¿ ºﬁ¿ º›   ¿ ¿¿ ¿É¿ ¿É  ¿ ¿ê
¿ ¿ñ¿ ¿ï   ¿ æÏv¿ æ˝¿ æ˝  ¿ ø¿ ø¿ ø  ¿ æÏ¿ æÌ¿ øfa¿ øw¿ øw   ¿ øf¿ øg¿ øÀc¿ ø–¿ ø–    ¿ ¡Äß¿ ¡*¿ ¡*   ¿ ¡¿ ¡¿ ¡ƒO¿ ¡…¿ ¡…    ¿ ¬Å?¿ ¬)¿ ¬)  ¿ ¬F¿ ¬T¿ ¬S  ¿ ¬¿ ¬¿ √ãÉN¿ √ú¿ √ú  ¿ √´¿ √º¿ √ª  ¿ √ƒ¿ √Ã¿ √À  ¿ √ã¿ √å¿ ∆›g¿ ∆Ó¿ ∆Ó   ¿ ∆›¿ ∆ﬁ ¿ «Háy¿ «H¿ ».Äﬂ/// Clips its child using a rectangle.
///
/// By default, [RenderClipRect] prevents its child from painting outside its
/// bounds, but the size and location of the clip rect can be customized using a
/// custom [clipper]. ¿ »aÅ¿ …5 ¿ …5¿ …C Ä«/// Creates a rectangular clip.
///
/// If [clipper] is null, the clip will match the layout size and position of
/// the child.
///
/// If [clipBehavior] is [Clip.none], no clipping will be applied.¿ …E¿ …L¿ …K  ¿ …R¿ …Y¿ …X  ¿ …a¿ …h¿ …g    ¿ …z8¿ …è¿ …è   ¿ …z¿ …{ ¿ …∂Å#¿ …«¿ …«  ¿ …œ¿ …·¿ …‡  ¿ …È¿ …˙¿ …˘  ¿ …∂¿ …∑¿  ›Åˆ¿  Ó¿  Ó  ¿  Ù¿ À¿ À  ¿ À¿ À¿ À  ¿  ›¿  ﬁ¿ Ã◊ÅË¿ ÃË¿ ÃË  ¿ Ã˜¿ Õ¿ Õ  ¿ Õ¿ Õ¿ Õ  ¿ Ã◊¿ Ãÿ ¿ Œ√ã·¿ Œ√¿ œ∞ÄÊ/// Clips its child using a rounded rectangle.
///
/// By default, [RenderClipRRect] uses its own bounds as the base rectangle for
/// the clip, but the size and location of the clip can be customized using a
/// custom [clipper]. ¿ œÂÇ#¿ — ¿ —¿ —! Å/// Creates a rounded-rectangular clip.
///
/// The [borderRadius] defaults to [BorderRadius.zero], i.e. a rectangle with
/// right-angled corners.
///
/// If [clipper] is non-null, then [borderRadius] is ignored.
///
/// If [clipBehavior] is [Clip.none], no clipping will be applied.¿ —(¿ —/¿ —.  ¿ —95¿ —O¿ —N  ¿ —t¿ —{¿ —z  ¿ —á¿ —é¿ —ç  ¿ —ü¿ —Ø¿ —Æ  	¿ —]¿ —i¿ —j¿ —“¿ —ƒ¿ —‘¿ —¯¿ —È¿ —˙¿ ”"¿ ”3¿ ”3  ¿ ‘V¿ ‘e¿ ‘e  ¿ “Å¿ “˝¿ “˝ÄÀ/// The border radius of the rounded corners.
///
/// Values are clamped so that horizontal and vertical radii sums do not
/// exceed width/height.
///
/// This value is ignored if [clipper] is non-null.   ¿ ”·r¿ ‘3¿ ‘3</// The text direction with which to resolve [borderRadius].   ¿ ’g¿ ’'¿ ’'   ¿ ’¿ ’¿ ”DÄô¿ ”H¿ ”H  ¿ ”U¿ ”k¿ ”j   ¿ ‘wÄñ¿ ‘{¿ ‘{  ¿ ‘â¿ ‘ô¿ ‘ò   ¿ ’|Å#¿ ’ç¿ ’ç  ¿ ’ï¿ ’ß¿ ’¶  ¿ ’Ø¿ ’¿¿ ’ø  ¿ ’|¿ ’}¿ ÷£Ç¿ ÷¥¿ ÷¥  ¿ ÷∫¿ ÷À¿ ÷   ¿ ÷”¿ ÷€¿ ÷⁄  ¿ ÷£¿ ÷§¿ ÿªÅÁ¿ ÿÃ¿ ÿÃ  ¿ ÿ€¿ ÿÏ¿ ÿÎ  ¿ ÿÙ¿ ÿ¸¿ ÿ˚  ¿ ÿª¿ ÿº ¿ ⁄¶åG¿ ⁄¶¿ €ÓÅA/// Clips its child using a rounded superellipse.
///
/// By default, [RenderClipRSuperellipse] uses its own bounds as the base
/// rectangle for the clip, but the size and location of the clip can be
/// customized using a custom [clipper].
///
/// Hit tests are performed based on the bounding box of the RSuperellipse. ¿ ‹3ÅÊ¿ › ¿ ›¿ ›2 Ä€/// Creates a rounded-superellipse clip.
///
/// The [borderRadius] defaults to [BorderRadius.zero], i.e. a rectangle with
/// right-angled corners.
///
/// If [clipBehavior] is [Clip.none], no clipping will be applied.¿ ›9¿ ›@¿ ›?  ¿ ›J5¿ ›`¿ ›_  ¿ ›Ö¿ ›å¿ ›ã  ¿ ›ò¿ ›ü¿ ›û  ¿ ›∞¿ ›¿¿ ›ø  	¿ ›n¿ ›z¿ ›{¿ ›„¿ ›’¿ ›Â¿ ﬁ	¿ ›˙¿ ﬁ¿ ﬂ/"¿ ﬂD¿ ﬂD  ¿ ‡g¿ ‡v¿ ‡v  ¿ ﬁÅ¿ ﬂ¿ ﬂÄÀ/// The border radius of the rounded corners.
///
/// Values are clamped so that horizontal and vertical radii sums do not
/// exceed width/height.
///
/// This value is ignored if [clipper] is non-null.   ¿ ﬂÚr¿ ‡D¿ ‡D</// The text direction with which to resolve [borderRadius].   ¿ ·"}¿ ·@¿ ·@   ¿ ·"¿ ·#¿ ﬂUÄô¿ ﬂY¿ ﬂY  ¿ ﬂf¿ ﬂ|¿ ﬂ{   ¿ ‡àÄñ¿ ‡å¿ ‡å  ¿ ‡ö¿ ‡™¿ ‡©   ¿ ·£Å-¿ ·¥¿ ·¥  ¿ ·º¿ ·Œ¿ ·Õ  ¿ ·÷¿ ·Á¿ ·Ê  ¿ ·£¿ ·§¿ ‚‘Ç$¿ ‚Â¿ ‚Â  ¿ ‚Î¿ ‚¸¿ ‚˚  ¿ „¿ „¿ „  ¿ ‚‘¿ ‚’¿ ‰¸ÅÔ¿ Â¿ Â  ¿ Â¿ Â-¿ Â,  ¿ Â5¿ Â=¿ Â<  ¿ ‰¸¿ ‰˝ ¿ ÊÔä<¿ ÊÔ¿ Á˝Å/// Clips its child using an oval.
///
/// By default, inscribes an axis-aligned oval into its layout dimensions and
/// prevents its child from painting outside that oval, but the size and
/// location of the clip oval can be customized using a custom [clipper]. ¿ Ë0Å"¿ È ¿ È¿ È Ä‘/// Creates an oval-shaped clip.
///
/// If [clipper] is null, the oval will be inscribed into the layout size and
/// position of the child.
///
/// If [clipBehavior] is [Clip.none], no clipping will be applied.¿ È!¿ È(¿ È'  ¿ È.¿ È5¿ È4  ¿ È=¿ ÈD¿ ÈC   ¿ ÈV¿ È\¿ È\  ¿ Èk¿ Èu¿ Èu  ¿ Í58¿ ÍJ¿ ÍJ   ¿ Í5¿ Í6 ¿ ÈÖÄ¨¿ Èä¿ Èä  ¿ Èó	¿ Èù¿ Èú   ¿ ÍqÇG¿ ÍÇ¿ ÍÇ  ¿ Íä¿ Íú¿ Íõ  ¿ Í§¿ Íµ¿ Í¥  ¿ Íq¿ Ír¿ ÏºÇ¿ ÏÕ¿ ÏÕ  ¿ Ï”¿ Ï‰¿ Ï„  ¿ ÏÏ¿ ÏÙ¿ ÏÛ  ¿ Ïº¿ ÏΩ¿ Ó÷ÇS¿ ÓÁ¿ ÓÁ  ¿ Óˆ¿ Ô¿ Ô  ¿ Ô¿ Ô¿ Ô  ¿ Ó÷¿ Ó◊ ¿ Ò-à¡¿ Ò-¿ Û ÅÃ/// Clips its child using a path.
///
/// Takes a delegate whose primary method returns a path that should
/// be used to prevent the child from painting outside the path.
///
/// Clipping to a path is expensive. Certain shapes have more
/// optimized render objects:
///
///  * To clip to a rectangle, consider [RenderClipRect].
///  * To clip to an oval or circle, consider [RenderClipOval].
///  * To clip to a rounded rectangle, consider [RenderClipRRect]. ¿ Û3ÅÆ¿ Ù† ¿ Ù†¿ ÙÆ Å\/// Creates a path clip.
///
/// If [clipper] is null, the clip will be a rectangle that matches the layout
/// size and location of the child. However, rather than use this default,
/// consider using a [RenderClipRect], which can achieve the same effect more
/// efficiently.
///
/// If [clipBehavior] is [Clip.none], no clipping will be applied.¿ Ù∞¿ Ù∑¿ Ù∂  ¿ ÙΩ¿ Ùƒ¿ Ù√  ¿ ÙÃ¿ Ù”¿ Ù“    ¿ ÙÂI¿ Ù˙¿ Ù˙   ¿ ÙÂ¿ ÙÊ ¿ ı2Å#¿ ıC¿ ıC  ¿ ıK¿ ı]¿ ı\  ¿ ıe¿ ıv¿ ıu  ¿ ı2¿ ı3¿ ˆYÇ¿ ˆj¿ ˆj  ¿ ˆp¿ ˆÅ¿ ˆÄ  ¿ ˆâ¿ ˆë¿ ˆê  ¿ ˆY¿ ˆZ¿ ¯qÅ{¿ ¯Ç¿ ¯Ç  ¿ ¯ë¿ ¯¢¿ ¯°  ¿ ¯™¿ ¯≤¿ ¯±  ¿ ¯q¿ ¯r ¿ ˘á’¿ ˘¿ ˙ŒÄŒ/// A physical model layer casts a shadow based on its [elevation].
///
/// The concrete implementations [RenderPhysicalModel] and [RenderPhysicalShape]
/// determine the actual shape of the physical model.¿ ˙Á¿ ˙Á¿ ˙Á¿ ˚Åt¿ ˚A ¿ ˚A¿ ˚Y 3/// The [elevation] parameter must be non-negative.¿ ˚`¿ ˚p¿ ˚o  ¿ ˚z¿ ˚ã¿ ˚ä  ¿ ˚ô¿ ˚©¿ ˚®  ¿ ˚≥¿ ˚√¿ ˚¬  ¿ ˚”¿ ˚⁄¿ ˚Ÿ  ¿ ˚˜¿ ˚˛¿ ˚˝  ¿ ˚Ë¿ ˚Ï¿ ˚Ì¿ ¸¿ ¸¿ ¸$¿ ¸¿ ¸¿ ¸!¿ ¸9¿ ¸.¿ ¸;¿ ¸T¿ ¸M¿ ¸V¿ ¸q¿ ¸d¿ ¸s¿ ˝°¿ ˝®¿ ˝®  ¿ ˇ8¿ ˇ>¿ ˇ>  ¿ ¿ ¿   ¿ ¸ÉÅ¿ ˝Ü¿ ˝ÜÄÎ/// The z-coordinate relative to the parent at which to place this material.
///
/// The value is non-negative.
///
/// If [debugDisableShadows] is set, this value is ignored and no shadow is
/// drawn (an outline is rendered instead).   ¿ ˛˜>¿ ˇ¿ ˇ/// The shadow color.   ¿ ˇÿ6¿ ˇ˛¿ ˇ˛/// The background color.   ¿ ˝∂Å=¿ ˝∫¿ ˝∫  ¿ ˝ƒ¿ ˝Ã¿ ˝À   ¿ ˇNÄÜ¿ ˇR¿ ˇR  ¿ ˇ^¿ ˇe¿ ˇd   ¿ !t¿ %¿ %  ¿ +¿ 2¿ 1   ¿ ôÅ*¿ ™¿ ™  ¿ æ'¿ €¿ ⁄  ¿ ô¿ ö ¿«êÇ¿«¿iÄõ/// Creates a physical model layer that clips its child to a rounded
/// rectangle.
///
/// A physical model layer casts a shadow based on its [elevation]. ¿©Å’¿4 ¿4¿G ÄÄ/// Creates a rounded-rectangular clip.
///
/// The [color] is required.
///
/// The [elevation] parameter must be non-negative.¿N¿U¿T  ¿_#¿i¿h  ¿à¿è¿é  ¿†¿Ø¿Æ  ¿¿¿«¿∆  ¿€¿Î¿Í  ¿ı+¿¸¿˚  ¿p¿x¿y¿“¿	¿¿¿¿¿)¿/¿@¿:¿0¿=¿Q¿J¿S¿o¿a¿q¿-¿6¿6  ¿¿)¿)  ¿ÇÄ®¿¿ÄÇ/// The shape of the layer.
///
/// Defaults to [BoxShape.rectangle]. The [borderRadius] affects the corners
/// of the rectangle.   ¿ªÅ]¿˙¿˙Å/// The border radius of the rounded corners.
///
/// Values are clamped so that horizontal and vertical radii sums do not
/// exceed width/height.
///
/// This property is ignored if the [shape] is not [BoxShape.rectangle].
///
/// The value null is treated like [BorderRadius.zero].   ¿œÅ,¿Â¿Â   ¿œ¿–¿@w¿D¿D  ¿J¿T¿S   ¿:Äë¿>¿>  ¿K¿Z¿Y   ¿ˇÅ#¿	¿	  ¿	¿	*¿	)  ¿	2¿	C¿	B  ¿ˇ¿	 ¿
&á¿
7¿
7  ¿
=¿
N¿
M  ¿
V¿
^¿
]  ¿
&¿
'¿.Å¿?¿?  ¿S'¿p¿o  ¿.¿/ ¿Kãﬁ¿K¿PÄ˛/// Creates a physical shape layer that clips its child to a [Path].
///
/// A physical shape layer casts a shadow based on its [elevation].
///
/// See also:
///
///  * [RenderPhysicalModel], which is optimized for rounded rectangles and
///    circles. ¿èÅó¿1 ¿1¿D Äó/// Creates an arbitrary shape clip.
///
/// The [color] and [clipper] parameters are required.
///
/// The [elevation] parameter must be non-negative.¿K¿R¿Q  ¿\*¿Ä¿  ¿å¿ì¿í  ¿§¿´¿™  ¿ø¿œ¿Œ  ¿Ÿ+¿‡¿ﬂ  ¿∂¿Ì¿Û¿¯¿¿˘¿¿¿$¿¿¿! ¿*I¿?¿?   ¿*¿+ ¿wÅ#¿à¿à  ¿ê¿¢¿°  ¿™¿ª¿∫  ¿w¿x¿ûÜ≥¿Ø¿Ø  ¿µ¿∆¿≈  ¿Œ¿÷¿’  ¿û¿ü¿UÄ“¿f¿f  ¿z'¿ó¿ñ  ¿U¿V ¿˜í¨¿˜¿@B/// Paints a [Decoration] either before or after its child paints. ¿nÇ|¿ † ¿ †¿ ≤ Å#/// Creates a decorated box.
///
/// The [decoration], [position], and [configuration] arguments must not be
/// null. By default the decoration paints behind the child.
///
/// The [ImageConfiguration] will be passed to the decoration (with the size
/// filled in) to let it resolve images.¿ π¿ Œ¿ Õ  ¿ ›;¿ Ò¿   ¿!;¿!2¿!1  ¿!_¿!k¿!j  ¿ ˚¿!¿!¿!A¿!S¿!T¿!Ñ¿!x¿!Ü¿!£¿!ô¿!•¿!≈¿!∂¿!«¿!›¿!‚¿!Ë¿!„¿!Ó¿!˙¿!˙  ¿"{¿"Ü¿"Ü  ¿#À¿#ﬁ¿#ﬁ  ¿%Ï!¿%ˇ¿%ˇ  ¿"q¿"^¿"^A/// What decoration to paint.
///
/// Commonly a [BoxDecoration].   ¿#Px¿#≤¿#≤H/// Whether to paint the box decoration behind or in front of the child.   ¿$zÅo¿%…¿%…Å+/// The settings to pass to the decoration when painting, so that it can
/// resolve images appropriately. See [ImageProvider.resolve] and
/// [BoxPainter.paint].
///
/// The [ImageConfiguration.textDirection] field is also used by
/// direction-sensitive [Decoration]s for painting and hit-testing.   ¿"ïÄ∑¿"ô¿"ô  ¿"§¿"∞¿"Ø   ¿#ÎÄã¿#Ô¿#Ô  ¿#¯¿$¿$   ¿&Äö¿&¿&  ¿&#¿&7¿&6   ¿&ØÅÿ¿&¿¿&¿   ¿&Ø¿&∞¿(ãN¿(ú¿(ú   ¿(ã¿(å¿(›Äè¿(Ó¿(Ó  ¿(˙¿)¿)  ¿(›¿(ﬁ¿)pá¿)Å¿)Å  ¿)á¿)ò¿)ó  ¿)†¿)®¿)ß  ¿)p¿)q¿0ÄÅ!¿0ë¿0ë  ¿0•&¿0¬¿0¡  ¿0Ä¿0Å ¿1•£‹¿1•¿1„7/// Applies a transformation before painting its child. ¿2Å·¿2G ¿2G¿2V 6/// Creates a render object that transforms its child.¿2]¿2o¿2n  ¿2}¿2Ü¿2Ö  ¿2ë¿2•¿2§  ¿2≥¿2√¿2¬  ¿2’¿2€¿2⁄  ¿2¯¿3¿3  ¿3¿3&¿3%  ¿2Ó¿33¿38¿3>¿39¿54¿5<¿5<  ¿8º¿8œ¿8œ  ¿:é¿:ù¿:ù  ¿;ƒÅv¿=)¿=)ÅS/// When set to true, hit tests are performed based on the position of the
/// child as it is painted. When set to false, hit tests are performed
/// ignoring the transformation.
///
/// [applyPaintTransform], and therefore [localToGlobal] and [globalToLocal],
/// always honor the transformation, regardless of the value of this property. ¿=?¿=H¿=H  ¿@9¿@H¿@H  ¿3ÛÅ>¿5¿5Å/// The origin of the coordinate system (relative to the upper left corner of
/// this render object) in which to apply the matrix.
///
/// Setting an origin is equivalent to conjugating the transform matrix by a
/// translation. This property is provided just for convenience.   ¿5ÂÇ‘¿8°¿8°Çé/// The alignment of the origin, relative to the size of the box.
///
/// This is equivalent to setting an origin based on the size of the box.
/// If it is specified at the same time as an offset, both are applied.
///
/// An [AlignmentDirectional.centerStart] value is the same as an [Alignment]
/// whose [Alignment.x] value is `-1.0` if [textDirection] is
/// [TextDirection.ltr], and `1.0` if [textDirection] is [TextDirection.rtl].
/// Similarly [AlignmentDirectional.centerEnd] is the same as an [Alignment]
/// whose [Alignment.x] value is `1.0` if [textDirection] is
/// [TextDirection.ltr], and `-1.0` if [textDirection] is [TextDirection.rtl].   ¿9èÄ¸¿:k¿:kÄ¿/// The text direction with which to resolve [alignment].
///
/// This may be changed to null, but only after [alignment] has been changed
/// to a value that does not depend on the direction.   ¿;iW¿;~¿;~   ¿;i¿;j¿?kÄÀ¿@¿@Äë/// The filter quality with which to apply the transform as a bitmap operation.
///
/// {@macro flutter.widgets.Transform.optional.FilterQuality}   ¿F6É&¿FC¿FC    ¿5GÄö¿5K¿5K  ¿5R¿5[¿5Z   ¿8›ÄÆ¿8·¿8·  ¿8Î¿8ˇ¿8˛   ¿:ØÄ∂¿:≥¿:≥  ¿:¡¿:—¿:–   ¿=WÇ¿>∫¿>∫Å'/// The matrix to transform the child by during painting. The provided value
/// is copied on assignment.
///
/// There is no getter for [transform], because [Matrix4] is mutable, and
/// mutations outside of the control of the render object could not reliably
/// be reflected in the rendering. ¿>ƒ¿>Õ¿>Ã   ¿@ZÅ8¿@^¿@^  ¿@l¿@|¿@{   ¿AñÄû¿AÃ¿AÃ./// Sets the transform to the identity matrix.   ¿B8ÄΩ¿BÄ¿BÄ@/// Concatenates a rotation about the x axis into the transform. ¿Bà¿Bê¿Bè   ¿B˘ÄΩ¿CA¿CA@/// Concatenates a rotation about the y axis into the transform. ¿CI¿CQ¿CP   ¿C∫ÄΩ¿D¿D@/// Concatenates a rotation about the z axis into the transform. ¿D
¿D¿D   ¿D{ÄÁ¿D¬¿D¬?/// Concatenates a translation by (x, y, z) into the transform. ¿DÃ¿D‘¿D”  ¿D◊¿Dﬂ¿Dﬁ  ¿DÁ¿DÔ¿DÓ  ¿D‚¿DÚ¿EfÄÃ¿Eö¿Eö,/// Concatenates a scale into the transform. ¿E†¿E®¿Eß  ¿E´	¿E¥¿E≥  ¿E∂	¿Eø¿Eæ   ¿I`ÅW¿Iq¿Iq  ¿Iy¿Iã¿Iä  ¿Iì¿I§¿I£  ¿I`¿Ia¿JªÅ¨¿JÃ¿JÃ  ¿J‹¿JÓ¿JÌ  ¿Jˆ¿K¿K  ¿Jª¿Jº¿LkÜy¿L|¿L|  ¿LÇ¿Lì¿Lí  ¿Lõ¿L£¿L¢  ¿Lk¿Ll¿RË|¿R˘¿R˘  ¿S¿S¿S  ¿S¿S'¿S&  ¿RË¿RÈ¿ShÇ¿Sy¿Sy  ¿Sç&¿S™¿S©  ¿Sh¿Si ¿UÉü∑¿UÉ¿UŒD/// Scales and positions its child within itself according to [fit]. ¿U˘Åà¿V- ¿V-¿V< 1/// Scales and positions its child within itself.¿VC¿VK¿VJ  ¿Vd.¿Vw¿Vv  ¿Vò¿V®¿Vß  ¿V∫¿V∆¿V≈  ¿V–¿V÷¿V’  ¿VP¿VV¿VW¿VÇ¿Vã¿Vå¿V‰¿VË¿VÈ¿V˚¿Vˆ¿V˝¿W¿W	¿W¿W7¿W(¿W9¿W]¿WO¿W_¿Wt¿Wy¿W¿Wz¿Wÿ¿W„¿W„  ¿Yﬂ¿YÊ¿YÊ  ¿\∫¿\Ã¿\Ã  ¿^Ü¿^ï¿^ï  ¿eÏ¿eÚ¿eÚ  ¿f¿f¿f  ¿f•¿f™¿f™ ¿f∫¿fæ¿fø¿Y}_¿Y–¿Y–E/// How to inscribe the child into the space allocated during layout.   ¿[Å´¿\ü¿\üÅl/// How to align the child within its parent's bounds.
///
/// An alignment of (0.0, 0.0) aligns the child to the top-left corner of its
/// parent's bounds. An alignment of (1.0, 0.5) aligns the child to the middle
/// of the right edge of its parent's bounds.
///
/// If this is set to an [AlignmentDirectional] object, then
/// [textDirection] must not be null.   ¿]áÄ¸¿^c¿^cÄ¿/// The text direction with which to resolve [alignment].
///
/// This may be changed to null, but only after [alignment] has been changed
/// to a value that does not depend on the direction.   ¿f ÄÇ¿fÑ¿fÑT/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.none].   ¿YÓÅ¿YÚ¿YÚ  ¿Yˆ¿Y˛¿Y˝   ¿\⁄Ä©¿\ﬁ¿\ﬁ  ¿\Ë¿\˚¿\˙   ¿^ßÄ≤¿^´¿^´  ¿^π¿^…¿^»   ¿f«Ä°¿fÀ¿fÀ  ¿fÿ
¿fﬁ¿f›   ¿WÖP¿Wè¿Wè    ¿W˙U¿Wˇ¿Wˇ    ¿XSÅ&¿XX¿XX  ¿Xj
¿Xr¿Xq   ¿_üÉ2¿_Ω¿_Ω  ¿_Œ$¿_Ë¿_Á  ¿_ü¿_†¿_´¿_¨¿b’É¿bÊ¿bÊ   ¿b’¿b÷¿glR¿gq¿gq    ¿g¬Ñ†¿g«¿g«    ¿lfÅ‰¿lv¿lv  ¿lè¿l†¿lü  ¿l®¿l∞¿lØ   ¿nNÇW¿n_¿n_  ¿ne¿nv¿nu  ¿n~¿nÜ¿nÖ  ¿nN¿nO¿p©Åµ¿p∫¿p∫  ¿p ¿p‹¿p€  ¿p‰¿pı¿pÙ  ¿p©¿p™¿rbÄÜ¿rs¿rs  ¿r¿rä¿râ  ¿rb¿rc¿rÏÄ‹¿r˝¿r˝  ¿s¿s¿s  ¿s"¿s+¿s*  ¿rÏ¿rÌ¿sÃÅl¿s›¿s›  ¿sÒ&¿t¿t  ¿sÃ¿sÕ ¿u<åL¿u<¿v˚Å∏/// Applies a translation transformation before painting its child.
///
/// The translation is expressed as an [Offset] scaled to the child's size. For
/// example, an [Offset] with a `dx` of 0.25 will result in a horizontal
/// translation of one quarter the width of the child.
///
/// Hit tests will only be detected inside the bounds of the
/// [RenderFractionalTranslation], even if the contents are offset such that
/// they overflow. ¿w2ÄÛ¿wv ¿wv¿wë A/// Creates a render object that translates its child's painting.¿wò¿w©¿w®  ¿wπ¿wø¿wæ  ¿w‹¿wË¿wÁ  ¿w“¿x¿wı¿x¿x¿x¿x#¿x¿y*¿y1¿y1  ¿{TÅv¿|π¿|πÅS/// When set to true, hit tests are performed based on the position of the
/// child as it is painted. When set to false, hit tests are performed
/// ignoring the transformation.
///
/// applyPaintTransform(), and therefore localToGlobal() and globalToLocal(),
/// always honor the transformation, regardless of the value of this property. ¿x)Ä˛¿y¿yÄŒ/// The translation to apply to the child, scaled to the child's size.
///
/// For example, an [Offset] with a `dx` of 0.25 will result in a horizontal
/// translation of one quarter the width of the child.   ¿yAÄ®¿yE¿yE  ¿yQ¿yY¿yX   ¿yÌÅc¿y˛¿y˛  ¿z¿z¿z  ¿z ¿z1¿z0  ¿yÌ¿yÓ¿|œÅ»¿|‡¿|‡  ¿|¿}¿}  ¿}
¿}¿}  ¿|œ¿|–¿~õÅ¿~¨¿~¨  ¿~≤¿~√¿~¬  ¿~À¿~”¿~“  ¿~õ¿~ú¿±Ä∞¿¬¿¬  ¿÷¿·¿‡  ¿Á¿¿Ô  ¿±¿≤¿ÄeÅ!¿Äv¿Äv  ¿Ää&¿Äß¿Ä¶  ¿Äe¿Äf ¿áΩéò¿áΩ¿âÒÇ-/// Calls callbacks in response to common pointer events.
///
/// It responds to events that can construct gestures, such as when the
/// pointer is pointer is pressed and moved, and then released or canceled.
///
/// It does not respond to events that are exclusive to mouse, such as when the
/// mouse enters and exits a region without pressing any buttons. For
/// these events, use [RenderMouseRegion].
///
/// If it has a child, defers to the child for sizing behavior.
///
/// If it does not have a child, grows to fit the parent-provided constraints. ¿ä5ÅÕ¿äŒ ¿äŒ¿ä„ Äí/// Creates a render object that forwards pointer events to callbacks.
///
/// The [behavior] argument defaults to [HitTestBehavior.deferToChild].¿äÍ¿ä¿äÔ  ¿ã¿ã¿ã  ¿ã¿ã ¿ã  ¿ã0¿ã6¿ã5  ¿ãI¿ãO¿ãN  ¿ãc¿ãi¿ãh  ¿ãÉ¿ãâ¿ãà  ¿ã§¿ã™¿ã©  ¿ã¬¿ã»¿ã«  ¿ã‹¿ã„¿ã‚  ¿ã¿ã˜¿ãˆ   	¿åÄ“¿åÀ¿åÀÄ§/// Called when a pointer comes into contact with the screen (for touch
/// pointers), or has its button pressed (for mouse pointers) at this widget's
/// location. ¿å›w¿çG¿çGM/// Called when a pointer that triggered an [onPointerDown] changes position. ¿çYÄê¿çﬁ¿çﬁh/// Called when a pointer that triggered an [onPointerDown] is no longer in
/// contact with the screen. ¿çÓw¿éW¿éWK/// Called when a pointer that has not an [onPointerDown] changes position. ¿éjÄ´¿è¿è{/// Called when the input from a pointer that triggered an [onPointerDown] is
/// no longer directed towards this receiver. ¿è|¿èÅ¿èÅB/// Called when a pan/zoom begins such as from a trackpad gesture. ¿èõb¿èÁ¿èÁ&/// Called when a pan/zoom is updated. ¿êZ¿êI¿êI$/// Called when a pan/zoom finishes. ¿êag¿êπ¿êπ9/// Called when a pointer signal occurs over this object.   ¿êÕh¿êﬁ¿êﬁ  ¿êÙ¿ë¿ë  ¿êÕ¿êŒ¿ë9Ç÷¿ëJ¿ëJ  ¿ëV¿ëd¿ëc  ¿ëj¿ëx¿ëw  ¿ë9¿ë:¿îÇ@¿î$¿î$  ¿î8&¿îU¿îT  ¿î¿î ¿ñWîY¿ñW¿ô;Ç›/// Calls callbacks in response to pointer events that are exclusive to mice.
///
/// It responds to events that are related to hovering, i.e. when the mouse
/// enters, exits (with or without pressing buttons), or moves over a region
/// without pressing buttons.
///
/// It does not respond to common events that construct gestures, such as when
/// the pointer is pressed, moved, then released or canceled. For these events,
/// use [RenderPointerListener].
///
/// If it has a child, it defers to the child for sizing behavior.
///
/// If it does not have a child, it grows to fit the parent-provided constraints.
///
/// See also:
///
///  * [MouseRegion], a widget that listens to hover events using
///    [RenderMouseRegion]. ¿ô°Çí¿öá ¿öá¿öò Ä›/// Creates a render object that forwards pointer events to callbacks.
///
/// All parameters are optional. By default this method creates an opaque
/// mouse region with no callbacks and cursor being [MouseCursor.defer].¿öü¿ö•¿ö§  ¿ö±¿ö∑¿ö∂  ¿ö√¿ö…¿ö»  ¿ö‘&¿ö·¿ö‡  ¿õ  ¿õ¿õ  ¿õ&¿õ,¿õ+  ¿õ>¿õE¿õD  ¿õO9¿õa¿õ`  ¿öÈ¿öÙ¿öı¿õ¿õ4¿õr¿õÅ¿õÇ¿õô¿õë¿õõ¿õ¿¿õ™¿õ¬¿õÁ¿õﬂ¿õÈ¿õ¯¿õ˝¿ú1¿ú¿õ˛¿ú¿ú¿ú¿ú*¿ú+¿†p¿†u¿†u  ¿¢˙.¿£!¿£! ¿¢˙¿¢˚¿£-ÄŒ¿£Ù¿£ÙÄ£/// Triggered when a pointer has moved onto or within the region without
/// buttons pressed.
///
/// This callback is not triggered by the movement of the object. ¿§ ,¿§&¿§& ¿§ ¿§¿§b¿§n¿§n  ¿•∏¿•Ω¿•Ω  ¿ùëÇ‹¿†[¿†[Ç§/// Whether this object should prevent [RenderMouseRegion]s visually behind it
/// from detecting the pointer, thus affecting how their [onHover], [onEnter],
/// and [onExit] behave.
///
/// If [opaque] is true, this object will absorb the mouse pointer and
/// prevent this object's siblings (or any other objects that are not
/// ancestors or descendants of this object) from detecting the mouse
/// pointer even when the pointer is within their areas.
///
/// If [opaque] is false, this object will not affect how [RenderMouseRegion]s
/// behind it behave, which will detect the mouse pointer as long as the
/// pointer is within their areas.
///
/// This defaults to true.   ¿°>Äò¿°∫¿°∫`/// How to behave during hit testing.
///
/// This defaults to [HitTestBehavior.opaque] if null.   ¿§1.¿§M¿§M   ¿§1¿§2¿•rC¿•á¿•á   ¿•r¿•s¿†ÄÄ∫¿†Ñ¿†Ñ  ¿†ã
¿†ë¿†ê   ¿°ŸÅ¿°›¿°›  ¿°Ì¿°ˇ¿°˛   ¿§yÄı¿§}¿§}  ¿§Ñ¿§ë¿§ê   ¿ú7Äî¿úH¿úH  ¿úP¿úb¿úa  ¿új¿ú{¿úz  ¿ú7¿ú8¿úœÄæ¿ú‡¿ú‡  ¿úÏ¿ú˙¿ú˘  ¿ù ¿ù¿ù  ¿úœ¿ú–¿•◊m¿•Ë¿•Ë  ¿•Ô¿•˛¿•˝  ¿•◊¿•ÿ¿¶HÅ$¿¶Y¿¶Y   ¿¶H¿¶I¿ßph¿ßÅ¿ßÅ  ¿ßó¿ßß¿ß¶  ¿ßp¿ßq¿ß‹Ç“¿ßÌ¿ßÌ  ¿®&¿®¿®  ¿ß‹¿ß› ¿™≤©ˇ¿™≤¿±ÜT/// Creates a separate display list for its child.
///
/// This render object creates a separate display list for its child, which
/// can improve performance if the subtree repaints at different times than
/// the surrounding parts of the tree. Specifically, when the child does not
/// repaint but its parent does, we can re-use the display list we recorded
/// previously. Similarly, when the child repaints but the surround tree does
/// not, we can re-record its display list without re-recording the display list
/// for the surround tree.
///
/// In some cases, it is necessary to place _two_ (or more) repaint boundaries
/// to get a useful effect. Consider, for example, an e-mail application that
/// shows an unread count and a list of e-mails. Whenever a new e-mail comes in,
/// the list would update, but so would the unread count. If only one of these
/// two parts of the application was behind a repaint boundary, the entire
/// application would repaint each time. On the other hand, if both were behind
/// a repaint boundary, a new e-mail would only change those two parts of the
/// application and the rest of the application would not repaint.
///
/// To tell if a particular RenderRepaintBoundary is useful, run your
/// application in debug mode, interacting with it in typical ways, and then
/// call [debugDumpRenderTree]. Each RenderRepaintBoundary will include the
/// ratio of cases where the repaint boundary was useful vs the cases where it
/// was not. These counts can also be inspected programmatically using
/// [debugAsymmetricPaintCount] and [debugSymmetricPaintCount] respectively. ¿±>j¿±o ¿±o¿±Ñ ./// Creates a repaint boundary around [child].¿±Ü¿±í¿±ë  ¿±õ¿±†¿±¶¿±°¿«j!¿«n¿«n ¿«ä¿ †"¿ §¿ § ¿ ¡¿±¨/¿±¡¿±¡   ¿±¨¿±≠¿ƒ‹Çã¿«1¿«1Ç6/// The number of times that this render object repainted at the same time as
/// its parent. Repaint boundaries are only useful when the parent and child
/// paint at different times. When both paint at the same time, the repaint
/// boundary is redundant, and may be actually making performance worse.
///
/// Only valid when asserts are enabled. In release builds, always returns
/// zero.
///
/// Can be reset using [debugResetMetrics]. See [debugAsymmetricPaintCount]
/// for the corresponding count of times where only the parent or only the
/// child painted.   ¿«êÉ¿ e¿ eÇ≤/// The number of times that either this render object repainted without the
/// parent being painted, or the parent repainted without this object being
/// painted. When a repaint boundary is used at a seam in the render tree
/// where the parent tends to repaint at entirely different times than the
/// child, it can improve performance by reducing the number of paint
/// operations that have to be recorded each frame.
///
/// Only valid when asserts are enabled. In release builds, always returns
/// zero.
///
/// Can be reset using [debugResetMetrics]. See [debugSymmetricPaintCount] for
/// the corresponding count of times where both the parent and the child
/// painted together.    ¿±ﬂâ<¿∫N¿∫NáÁ/// Capture an image of the current state of this render object and its
/// children.
///
/// The returned [ui.Image] has uncompressed raw RGBA bytes in the dimensions
/// of the render object, multiplied by the [pixelRatio].
///
/// To use [toImage], the render object must have gone through the paint phase
/// (i.e. [debugNeedsPaint] must be false).
///
/// The [pixelRatio] describes the scale between the logical pixels and the
/// size of the output image. It is independent of the
/// [dart:ui.FlutterView.devicePixelRatio] for the device, so specifying 1.0
/// (the default) will give you a 1:1 mapping between logical pixels and the
/// output pixels in the image.
///
/// {@tool snippet}
///
/// The following is an example of how to go from a `GlobalKey` on a
/// `RepaintBoundary` to a PNG:
///
/// ```dart
/// class PngHome extends StatefulWidget {
///   const PngHome({super.key});
///
///   @override
///   State<PngHome> createState() => _PngHomeState();
/// }
///
/// class _PngHomeState extends State<PngHome> {
///   GlobalKey globalKey = GlobalKey();
///
///   Future<void> _capturePng() async {
///     final RenderRepaintBoundary boundary = globalKey.currentContext!.findRenderObject()! as RenderRepaintBoundary;
///     final ui.Image image = await boundary.toImage();
///     final ByteData? byteData = await image.toByteData(format: ui.ImageByteFormat.png);
///     final Uint8List pngBytes = byteData!.buffer.asUint8List();
///     print(pngBytes);
///   }
///
///   @override
///   Widget build(BuildContext context) {
///     return RepaintBoundary(
///       key: globalKey,
///       child: Center(
///         child: TextButton(
///           onPressed: _capturePng,
///           child: const Text('Hello World', textDirection: TextDirection.ltr),
///         ),
///       ),
///     );
///   }
/// }
/// ```
/// {@end-tool}
///
/// See also:
///
///  * [OffsetLayer.toImage] for a similar API at the layer level.
///  * [dart:ui.Scene.toImage] for more information about the image returned. ¿∫W¿∫_¿∫^  ¿∫k¿ªâπ¿ƒ¿ƒàb/// Capture an image of the current state of this render object and its
/// children synchronously.
///
/// The returned [ui.Image] has uncompressed raw RGBA bytes in the dimensions
/// of the render object, multiplied by the [pixelRatio].
///
/// To use [toImageSync], the render object must have gone through the paint phase
/// (i.e. [debugNeedsPaint] must be false).
///
/// The [pixelRatio] describes the scale between the logical pixels and the
/// size of the output image. It is independent of the
/// [dart:ui.FlutterView.devicePixelRatio] for the device, so specifying 1.0
/// (the default) will give you a 1:1 mapping between logical pixels and the
/// output pixels in the image.
///
/// This API functions like [toImage], except that rasterization begins eagerly
/// on the raster thread and the image is returned before this is completed.
///
/// {@tool snippet}
///
/// The following is an example of how to go from a `GlobalKey` on a
/// `RepaintBoundary` to an image handle:
///
/// ```dart
/// class ImageCaptureHome extends StatefulWidget {
///   const ImageCaptureHome({super.key});
///
///   @override
///   State<ImageCaptureHome> createState() => _ImageCaptureHomeState();
/// }
///
/// class _ImageCaptureHomeState extends State<ImageCaptureHome> {
///   GlobalKey globalKey = GlobalKey();
///
///   void _captureImage() {
///     final RenderRepaintBoundary boundary = globalKey.currentContext!.findRenderObject()! as RenderRepaintBoundary;
///     final ui.Image image = boundary.toImageSync();
///     print('Image dimensions: ${image.width}x${image.height}');
///   }
///
///   @override
///   Widget build(BuildContext context) {
///     return RepaintBoundary(
///       key: globalKey,
///       child: Center(
///         child: TextButton(
///           onPressed: _captureImage,
///           child: const Text('Hello World', textDirection: TextDirection.ltr),
///         ),
///       ),
///     );
///   }
/// }
/// ```
/// {@end-tool}
///
/// See also:
///
///  * [OffsetLayer.toImageSync] for a similar API at the layer level.
///  * [dart:ui.Scene.toImageSync] for more information about the image returned. ¿ƒ¿ƒ¿ƒ  ¿ƒ$¿ «ÅI¿À¿ÀÄ™/// Resets the [debugSymmetricPaintCount] and [debugAsymmetricPaintCount]
/// counts to zero.
///
/// Only valid when asserts are enabled. Does nothing in release builds.   ¿ÃÅ4¿Ã%¿Ã%  ¿ÃH¿ÃN¿ÃM  ¿Ãd¿Ãj¿Ãi  ¿Ã¿Ã¿Ã^¿Ãy¿ÕLác¿Õ]¿Õ]  ¿Õq&¿Õé¿Õç  ¿ÕL¿ÕM ¿‘≥çà¿‘≥¿◊êÇ÷/// A render object that is invisible during hit testing.
///
/// When [ignoring] is true, this render object (and its subtree) is invisible
/// to hit testing. It still consumes space during layout and paints its child
/// as usual. It just cannot be the target of located events, because its render
/// object returns false from [hitTest].
///
/// ## Semantics
///
/// Using this class may also affect how the semantics subtree underneath is
/// collected.
///
/// {@macro flutter.widgets.IgnorePointer.semantics}
///
/// {@macro flutter.widgets.IgnorePointer.ignoringSemantics}
///
/// See also:
///
///  * [RenderAbsorbPointer], which takes the pointer events but prevents any
///    nodes in the subtree from seeing them. ¿◊øÅ¶¿◊ˇ ¿◊ˇ¿ÿ =/// Creates a render object that is invisible to hit testing.¿ÿ¿ÿ%¿ÿ$  ¿ÿ/¿ÿ5¿ÿ4  ¿ÿIÄ∫¿ÿÛ¿ÿÚ  ¿ÿ?¿ÿI¿ÿJ¿ÿT¿ÿÊ¿ÿ\¿ÿ¨¿Ÿ¿Ÿ¿Ÿ¿Ÿ<¿Ÿ)¿Ÿ>¿ŸX¿Ÿ]¿Ÿc¿Ÿ^¿⁄¨¿⁄±¿⁄±  ¿›@¿›F¿›F  ¿ŸiÅ@¿⁄ì¿⁄ìÅ/// Whether this render object is ignored during hit testing.
///
/// Regardless of whether this render object is ignored during hit testing, it
/// will still consume space during layout and be visible during painting.
///
/// {@macro flutter.widgets.IgnorePointer.semantics}   ¿€vÅ«¿›¿›ÄÔ/// Whether the semantics of this render object is ignored when compiling the semantics tree.
///
/// {@macro flutter.widgets.IgnorePointer.ignoringSemantics}
///
/// See [SemanticsNode] for additional information about the semantics tree.  ¿‹p¿‹q¿‹{¿›¿‹Å¿‹œ¿⁄æÄ¥¿⁄¬¿⁄¬  ¿⁄À
¿⁄—¿⁄–   ¿›\Ä£¿›`¿›`  ¿›r¿›y¿›x   ¿ﬁÄñ¿ﬁ¿ﬁ  ¿ﬁ¿ﬁ.¿ﬁ-  ¿ﬁ6¿ﬁG¿ﬁF  ¿ﬁ¿ﬁ¿ﬁùÄ∂¿ﬁÆ¿ﬁÆ  ¿ﬁ»¿ﬁ›¿ﬁ‹  ¿ﬁù¿ﬁû¿ﬂWÅB¿ﬂh¿ﬂh  ¿ﬂá¿ﬂü¿ﬂû  ¿ﬂW¿ﬂX¿‡ùÅú¿‡Æ¿‡Æ  ¿‡¬&¿‡ﬂ¿‡ﬁ  ¿‡ù¿‡û ¿‚=ç∂¿‚=¿‚˙Ä∂/// Lays the child out as if it was in the tree, but without painting anything,
/// without making the child available for hit testing, and without taking any
/// room in the parent. ¿„$Äá¿„M ¿„M¿„[ &/// Creates an offstage render object.¿„]¿„c¿„b  ¿„s¿„¿„~  ¿„m¿„í¿„à¿„î¿„û¿„£¿„©¿„§¿Â ¿Â%¿Â%  ¿„ØÅn¿Â¿ÂÅ@/// Whether the child is hidden from the rest of the tree.
///
/// If true, the child is laid out as if it was in the tree, but without
/// painting anything, without making the child available for hit testing, and
/// without taking any room in the parent.
///
/// If false, the child is included in the tree as normal.   ¿È/¿È(¿È(   ¿È¿È¿Â2Äî¿Â6¿Â6  ¿Â?
¿ÂE¿ÂD   ¿Â Äü¿Â›¿Â›  ¿Âˆ¿Â˛¿Â˝  ¿Â ¿ÂÀ¿ÊmÄü¿ÊÄ¿ÊÄ  ¿Êô¿Ê°¿Ê†  ¿Êm¿Ên¿ÁÄü¿Á#¿Á#  ¿Á=¿ÁE¿ÁD  ¿Á¿Á¿Á≥Äü¿Á∆¿Á∆  ¿Á‡¿ÁË¿ÁÁ  ¿Á≥¿Á¥¿ËVÄπ¿Ëj¿Ëj  ¿Ëä¿Ëò¿Ëó  ¿ËV¿ËW¿ÈFÄ≠¿ÈZ¿ÈZ  ¿Èm¿È}¿È|  ¿Èâ¿Èó¿Èñ  ¿ÈF¿ÈG¿È˜Ä«¿Í¿Í  ¿Í&$¿Í@¿Í?  ¿È˜¿È¯¿Í¿Í¿Í¬W¿Í”¿Í”   ¿Í¬¿Í√¿ÎÄå¿Î.¿Î.   ¿Î¿Î¿Î≠Äñ¿Îæ¿Îæ  ¿Î∆¿Îÿ¿Î◊  ¿Î‡¿ÎÒ¿Î  ¿Î≠¿ÎÆ¿ÏGk¿ÏX¿ÏX  ¿Ïd¿Ïo¿Ïn  ¿ÏG¿ÏH¿Ï∂Äé¿Ï«¿Ï«  ¿ÏÕ¿Ïﬁ¿Ï›  ¿ÏÊ¿ÏÓ¿ÏÌ  ¿Ï∂¿Ï∑¿ÌHÄ£¿ÌY¿ÌY  ¿Ìs¿Ìà¿Ìá  ¿ÌH¿ÌI¿ÌÔÄ¬¿Ó ¿Ó   ¿Ó&¿Ó1¿Ó0  ¿ÌÔ¿Ì¿ÓµÅ<¿Ó◊¿Ó◊   ¿Óµ¿Ó∂ ¿Ôıé)¿Ôı¿Û3É7/// A render object that absorbs pointers during hit testing.
///
/// When [absorbing] is true, this render object prevents its subtree from
/// receiving pointer events by terminating hit testing at itself. It still
/// consumes space during layout and paints its child as usual. It just prevents
/// its children from being the target of located events, because its render
/// object returns true from [hitTest].
///
/// ## Semantics
///
/// Using this class may also affect how the semantics subtree underneath is
/// collected.
///
/// {@macro flutter.widgets.AbsorbPointer.semantics}
///
/// {@macro flutter.widgets.AbsorbPointer.ignoringSemantics}
///
/// See also:
///
///  * [RenderIgnorePointer], which has the opposite effect: removing the
///    subtree from considering entirely for the purposes of hit testing. ¿ÛbÅ±¿Û™ ¿Û™¿ÛΩ E/// Creates a render object that absorbs pointers during hit testing.¿Ûƒ¿Û–¿Ûœ  ¿Û⁄¿Û‡¿Ûﬂ  ¿ÛıÄ∫¿Ùü¿Ùû  ¿ÛÎ¿Ûı¿Ûˆ¿Ù ¿Ùí¿Ù¿ÙX¿Ù√¿Ù∏¿Ù≈¿ÙÍ¿Ù◊¿ÙÏ¿ı¿ı¿ı¿ı¿ˆn¿ˆs¿ˆs  ¿˘¿˘¿˘  ¿ıÅT¿ˆS¿ˆSÅ$/// Whether this render object absorbs pointers during hit testing.
///
/// Regardless of whether this render object absorbs pointers during hit
/// testing, it will still consume space during layout and be visible during
/// painting.
///
/// {@macro flutter.widgets.AbsorbPointer.semantics}   ¿˜<ÅÕ¿¯·¿¯·ÄÛ/// Whether the semantics of this render object is ignored when compiling the
/// semantics tree.
///
/// {@macro flutter.widgets.AbsorbPointer.ignoringSemantics}
///
/// See [SemanticsNode] for additional information about the semantics tree.  ¿¯<¿¯=¿¯G¿¯”¿¯M¿¯õ¿ˆÅÄ∑¿ˆÖ¿ˆÖ  ¿ˆè
¿ˆï¿ˆî   ¿˘(Ä£¿˘,¿˘,  ¿˘>¿˘E¿˘D   ¿˘œÄØ¿˘‡¿˘‡  ¿˘Ë¿˘˙¿˘˘  ¿˙¿˙¿˙  ¿˘œ¿˘–¿˙ÇÄ∂¿˙ì¿˙ì  ¿˙≠¿˙¬¿˙¡  ¿˙Ç¿˙É¿˚<ÅB¿˚M¿˚M  ¿˚l¿˚Ñ¿˚É  ¿˚<¿˚=¿¸ÇÅö¿¸ì¿¸ì  ¿¸ß&¿¸ƒ¿¸√  ¿¸Ç¿¸É ¿˛ Éb¿˛ ¿ˇkÅD/// Holds opaque meta data in the render tree.
///
/// Useful for decorating the render tree with information that will be consumed
/// later. For example, you could store information in the render tree that will
/// be used when the user interacts with the render tree but has no visual
/// impact prior to the interaction. ¿ˇ®Ä«¿ 2 ¿ 2¿ @ ÄÉ/// Creates a render object that hold opaque meta data.
///
/// The [behavior] argument defaults to [HitTestBehavior.deferToChild].¿ B¿ H¿ G  ¿ Q¿ X¿ W  ¿ a¿ h¿ g   ¿ sC¿ Æ¿ Æ0/// Opaque meta data ignored by the render tree.   ¿ ªÄ≈¿ Ã¿ Ã  ¿ ‡&¿ ˝¿ ¸  ¿ ª¿ º ¿Ñõ¿Ñ¿Ìb/// Listens for the specified gestures from the semantics server (e.g.
/// an accessibility tool). ¿9Ç
¿Ñ ¿Ñ¿° H/// Creates a render object that listens for specific semantic gestures.¿®¿Ø¿Æ  ¿π¿Œ¿Õ  ¿ÿ%¿Û¿Ú  ¿1¿¿  ¿:/¿V¿U  ¿o¿u¿t  ¿å¿ì¿í  ¿É¿™¿£¿¨¿«¿∫¿…¿ı¿›¿˜¿,¿¿.¿Y#¿o¿o  ¿£¿∑¿∑  ¿
?&¿
Y¿
Y  ¿	2¿$¿$  ¿˜0¿¿  ¿\Å2¿Ç¿ÇÅ/// The fraction of the dimension of this render box to use when
/// scrolling. For example, if this is 0.8 and the box is 200 pixels
/// wide, then when a left-scroll action is received from the
/// accessibility system, it will translate into a 160 pixel
/// leftwards drag. ¿GÉ¿8¿8Çº/// If non-null, the set of actions to allow. Other actions will be omitted,
/// even if their callback is provided.
///
/// For example, if [onTap] is non-null but [validActions] does not contain
/// [SemanticsAction.tap], then the semantic description of this node will
/// not claim to support taps.
///
/// This is normally used to filter the actions made available by
/// [onHorizontalDragUpdate] and [onVerticalDragUpdate]. Normally, these make
/// both the right and left, or up and down, actions available. For example,
/// if [onHorizontalDragUpdate] is set but [validActions] only contains
/// [SemanticsAction.scrollLeft], then the [SemanticsAction.scrollRight]
/// action will be omitted.   ¿B^¿ê¿ê3/// Called when the user taps on the render object.   ¿	ØÄç¿
 ¿
 P/// Called when the user presses on the render object for a long period of time.   ¿uÄë¿‘¿‘=/// Called when the user scrolls to the left or to the right.   ¿x|¿∆¿∆,/// Called when the user scrolls up or down.   ¿ÄÄæ¿Ñ¿Ñ  ¿ë¿®¿ß   ¿¡ÄÍ¿≈¿≈  ¿À¿‡¿ﬂ   ¿
iÅ¿
m¿
m  ¿
y¿
î¿
ì   ¿?Å5¿C¿C  ¿Z ¿v¿u   ¿+Å-¿/¿/  ¿D ¿`¿_   ¿ìÉ¶¿§¿§  ¿√¿€¿⁄  ¿ì¿î¿=t¿B¿B  ¿Q¿b¿a   ¿µÅx¿∫¿∫    ¿1Åx¿6¿6    ¿≠Ås¿≤¿≤    ¿$Åt¿)¿)    ¿úÅ˚¿≠¿≠  ¿¡&¿ﬁ¿›  ¿ú¿ù ¿õÉΩ¿õ¿ﬁ</// Add annotations to the [SemanticsNode] for this subtree. ¿3É#¿Á ¿Á¿ Ä≠/// Creates a render object that attaches a semantic annotation.
///
/// If the [SemanticsProperties.attributedLabel] is not null, the [textDirection] must also not be null.¿¿¿  ¿'¿<¿;  ¿K¿Q¿P  ¿g¿m¿l  ¿å¿í¿ë  ¿Ø¿µ¿¥  ¿“¿€¿⁄  ¿¿ ¿ˇ  ¿\¿Å¿§¿«¿¿¿ ¿     ¿ ZÑ„¿ Z¿!RÄÒ/// Causes the semantics of all earlier render objects below the same semantic
/// boundary to be dropped.
///
/// This is useful in a stack where an opaque mask should prevent interactions
/// with the render objects painted below the mask. ¿!ÇÄ ¿!ﬁ ¿!ﬁ¿!Ú W/// Create a render object that blocks semantics for nodes below it in paint
/// order.¿!Ù¿" ¿!ˇ  ¿"¿"¿"  ¿"¿"-¿"#¿"/¿"?¿"D¿"J¿"E¿#¿#¿#  ¿"PÄº¿"ˆ¿"ˆÄò/// Whether this render object is blocking semantics of previously painted
/// [RenderObject]s below a common semantics boundary from the semantic tree.   ¿#!Äá¿#%¿#%  ¿#.
¿#4¿#3   ¿#¨Ä…¿#Ω¿#Ω  ¿#‹¿#Ù¿#Û  ¿#¨¿#≠¿$yÄ¬¿$ä¿$ä  ¿$û&¿$ª¿$∫  ¿$y¿$z ¿%?É¿%?¿&£Å]/// Causes the semantics of all descendants to be merged into this
/// node such that the entire subtree becomes a single leaf in the
/// semantics tree.
///
/// Useful for combining the semantics of multiple render objects that
/// form part of a single conceptual widget, e.g. a checkbox, a label,
/// and the gesture detector that goes with them. ¿&”ÄÜ¿'! ¿'!¿'5 K/// Creates a render object that merges the semantics from its descendants.¿'7¿'C¿'B  ¿'L¿'Q¿'W¿'R   ¿']Ä„¿'n¿'n  ¿'ç¿'•¿'§  ¿']¿'^ ¿(DÑó¿(D¿)qÅ&/// Excludes this subtree from the semantic tree.
///
/// When [excluding] is true, this render object (and its subtree) is excluded
/// from the semantic tree.
///
/// Useful e.g. for hiding text that is redundant with other text next
/// to it (e.g. text included only for the visual effect). ¿)£Äº¿)Ï ¿)Ï¿* F/// Creates a render object that ignores the semantics of its subtree.¿*¿*¿*  ¿*¿*¿*  ¿*'¿*?¿*4¿*A¿*R¿*W¿*]¿*X¿*Ã¿*—¿*—  ¿*cf¿*±¿*±B/// Whether this render object is excluded from the semantic tree.   ¿*ﬂÄä¿*„¿*„  ¿*Ì
¿*Û¿*Ú   ¿+mÄ§¿+~¿+~  ¿+ò¿+≠¿+¨  ¿+m¿+n¿,Äƒ¿,&¿,&  ¿,:&¿,W¿,V  ¿,¿, ¿,›Ñ∏¿,›¿.lÅà/// A render objects that annotates semantics with an index.
///
/// Certain widgets will automatically provide a child index for building
/// semantics. For example, the [ScrollView] uses the index of the first
/// visible child semantics node to determine the
/// [SemanticsConfiguration.scrollIndex].
///
/// See also:
///
///  * [CustomScrollView], for an explanation of scroll semantics. ¿.ûÄÆ¿.Ó ¿.Ó¿/ M/// Creates a render object that annotates the child semantics with an index.¿/¿/¿/  ¿/¿/&¿/%  ¿/6¿//¿/8¿/?¿/D¿/J¿/E¿/û
¿/¢¿/¢  ¿/PK¿/ã¿/ã0/// The index used to annotated child semantics.   ¿/¨|¿/∞¿/∞  ¿/∂	¿/ª¿/∫   ¿0,Ä®¿0=¿0=  ¿0\¿0t¿0s  ¿0,¿0-¿0ÿÄª¿0È¿0È  ¿0˝&¿1¿1  ¿0ÿ¿0Ÿ ¿1óá«¿1ó¿2fÄ»/// Provides an anchor for a [RenderFollowerLayer].
///
/// See also:
///
///  * [CompositedTransformTarget], the corresponding widget.
///  * [LeaderLayer], the layer that this render object creates. ¿2ìÄï¿2Ã ¿2Ã¿2› 6/// Creates a render object that uses a [LeaderLayer].¿2ﬂ¿2Û¿2Ú  ¿2¯¿3¿3  ¿3¿3¿3¿3¿3 ¿3&¿3!¿4(¿42¿42  ¿6C¿6I¿6I  ¿3,Ä˘¿4¿4Ä“/// The link object that connects this [RenderLeaderLayer] with one or more
/// [RenderFollowerLayer]s.
///
/// The object must not be associated with another [RenderLeaderLayer] that is
/// also being painted.   ¿5-4¿5B¿5B   ¿5-¿5.¿4;ÄÓ¿4?¿4?  ¿4D¿4O¿4N   ¿6a}¿6r¿6r   ¿6a¿6b¿6‚Å∑¿6Û¿6Û  ¿6˘¿7
¿7	  ¿7¿7¿7  ¿6‚¿6„¿8ùÄø¿8Æ¿8Æ  ¿8¬&¿8ﬂ¿8ﬁ  ¿8ù¿8û ¿9`úô¿9`¿;ÑÇ/// Transform the child so that its origin is [offset] from the origin of the
/// [RenderLeaderLayer] with the same [LayerLink].
///
/// The [RenderLeaderLayer] in question must be earlier in the paint order.
///
/// Hit testing on descendants of this render object will only work if the
/// target position is within the box that this render object's parent considers
/// to be hittable.
///
/// See also:
///
///  * [CompositedTransformFollower], the corresponding widget.
///  * [FollowerLayer], the layer that this render object creates. ¿;≥ÅÊ¿;Ó ¿;Ó¿< 8/// Creates a render object that uses a [FollowerLayer].¿<¿<¿<  ¿<%¿<+¿<*  ¿<G¿<O¿<N  ¿<h*¿<s¿<r  ¿<ò,¿<£¿<¢  ¿< ¿<÷¿<’  ¿<=¿<W¿<]¿<^¿<Å¿<ä¿<ã¿<≥¿<º¿<Ω¿<È¿<„¿<Î¿=
¿<¯¿=¿=-¿=%¿=/¿=L¿=>¿=N¿=s¿=c¿=u¿=å¿=ë¿=ó¿=í¿>8¿>B¿>B  ¿@Ï¿@Ò¿@Ò  ¿B6¿B=¿B=  ¿E∫¿Eƒ¿Eƒ  ¿Gï¿Gü¿Gü  ¿=ùÄò¿>'¿>'w/// The link object that connects this [RenderFollowerLayer] with a
/// [RenderLeaderLayer] earlier in the paint order.   ¿>≈Ç$¿@√¿@√Å‚/// Whether to show the render object's contents when there is no
/// corresponding [RenderLeaderLayer] with the same [link].
///
/// When the render object is linked, the child is positioned such that it has
/// the same global position as the linked [RenderLeaderLayer].
///
/// When the render object is not linked, then: if [showWhenUnlinked] is true,
/// the child is visible and not repositioned; if it is false, then child is
/// hidden, and its hit testing is also disabled.   ¿AüÄî¿B!¿B!r/// The offset to apply to the origin of the linked [RenderLeaderLayer] to
/// obtain this render object's origin.   ¿B≈ÇÚ¿Eô¿EôÇ©/// The anchor point on the linked [RenderLeaderLayer] that [followerAnchor]
/// will line up with.
///
/// {@template flutter.rendering.RenderFollowerLayer.leaderAnchor}
/// For example, when [leaderAnchor] and [followerAnchor] are both
/// [Alignment.topLeft], this [RenderFollowerLayer] will be top left aligned
/// with the linked [RenderLeaderLayer]. When [leaderAnchor] is
/// [Alignment.bottomLeft] and [followerAnchor] is [Alignment.topLeft], this
/// [RenderFollowerLayer] will be left aligned with the linked
/// [RenderLeaderLayer], and its top edge will line up with the
/// [RenderLeaderLayer]'s bottom edge.
/// {@endtemplate}
///
/// Defaults to [Alignment.topLeft].   ¿FgÅ+¿Gp¿GpÄÓ/// The anchor point on this [RenderFollowerLayer] that will line up with
/// [followerAnchor] on the linked [RenderLeaderLayer].
///
/// {@macro flutter.rendering.RenderFollowerLayer.leaderAnchor}
///
/// Defaults to [Alignment.topLeft].   ¿Hì4¿H®¿H®   ¿Hì¿Hî¿HÀ|¿I ¿I 3/// The layer we created when we were last painted.  ¿I¿I¿>Kv¿>O¿>O  ¿>T¿>_¿>^   ¿AÄï¿A
¿A
  ¿A
¿A!¿A    ¿BHy¿BL¿BL  ¿BS¿B[¿BZ   ¿E’Äé¿EŸ¿EŸ  ¿EÊ¿EÒ¿E   ¿G≤Äî¿G∂¿G∂  ¿G≈¿G–¿Gœ   ¿HJE¿H[¿H[   ¿HJ¿HK¿IKÅü¿Jì¿JìÅ3/// Return the transform that was used in the last composition phase, if any.
///
/// If the [FollowerLayer] has not yet been created, was never composited, or
/// was unable to determine the transform (see
/// [FollowerLayer.getLastTransform]), this returns the identity matrix (see
/// [Matrix4.identity].   ¿JÓÅÍ¿Jˇ¿Jˇ  ¿K¿K¿K  ¿K!¿K2¿K1  ¿JÓ¿JÔ¿L‹ÅT¿LÌ¿LÌ  ¿L˝¿M¿M  ¿M¿M(¿M'  ¿L‹¿L›¿N4Öç¿NE¿NE  ¿NK¿N\¿N[  ¿Nd¿Nl¿Nk  ¿N4¿N5¿S≈}¿S÷¿S÷  ¿SÍ¿Sı¿SÙ  ¿S˚¿T¿T  ¿S≈¿S∆¿TFÅ±¿TW¿TW  ¿Tk&¿Tà¿Tá  ¿TF¿TG ¿U˚áK¿U˚¿VÔÄÌ/// Render object which inserts an [AnnotatedRegionLayer] into the layer tree.
///
/// See also:
///
///  * [Layer.find], for an example of how this value is retrieved.
///  * [AnnotatedRegionLayer], the layer this render object creates.¿W¿W¿W¿W2Å‡¿XE ¿XE¿XZ Å/// Creates a new [RenderAnnotatedRegion] to insert [value] into the
/// layer tree.
///
/// If [sized] is true, the layer is provided with the size of this render
/// object to clip the results of [Layer.find].
///
/// Neither [value] nor [sized] can be null.¿X\¿Xh¿Xg  ¿Xn¿X}¿X|  ¿XÉ¿Xè¿Xé  ¿X£¿Xú¿X•¿Xπ¿X≤¿Xª¿X’¿X»¿X◊¿X‚¿X˙¿X„¿X˜¿X˘¿X¯¿X˚¿X¸¿Y¿Y
¿Y¿Y¿Yh¿Yj¿Yj  ¿Zb¿Zg¿Zg  ¿ZÈ7¿[¿[  ¿[%4¿[<¿[< ¿[%¿[&¿[U¿YO¿YU¿YU6/// A value which can be retrieved using [Layer.find].   ¿YÚm¿ZO¿ZOQ/// Whether the render object will pass its [size] to the [AnnotatedRegionLayer].   ¿Ytz¿Yx¿Yx  ¿Y~
¿YÅ¿YÄ   ¿Zqt¿Zu¿Zu  ¿Z{
¿ZÅ¿ZÄ   ¿[^Åé¿[o¿[o  ¿[u¿[Ü¿[Ö  ¿[é¿[ñ¿[ï  ¿[^¿[_¿\T¿]¿]   ¿\¿\Ò  ëˆÇ0ëˆí#/// How to behave during hit tests.  í3ÄñíΩíΩÄÖ/// Targets that defer to their children receive events within their bounds
/// only if one of their children is hit by the hit test. íŒÄΩìÖìÖÄ∞/// Opaque targets can be hit by hit tests, causing them to both receive
/// events within their bounds and prevent targets visually behind them from
/// also receiving events. ìêÄìîîÄÉ/// Translucent targets both receive events within their bounds and permit
/// targets visually behind them to also receive events.     ¿+Ä ¿+¿U$/// Where to paint a box decoration.  ¿l>¿†¿†1/// Paint the box decoration behind the children. ¿ØC¿Ë¿Ë6/// Paint the box decoration in front of the children.           	¿ í∞Äø¿ í∞¿ ìAÄà/// Signature for a function that creates a [Shader] for a given [Rect].
///
/// Used by [RenderShaderMask] and the [ShaderMask] widget.  ¿ ìb¿ ìh¿ ìg   ¿ÅäÄª¿Åä¿Çq/// Signature for listening to [PointerDownEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿Ç-¿Ç?¿Ç>   ¿ÇGÄª¿ÇG¿Ç¡q/// Signature for listening to [PointerMoveEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿ÇÍ¿Ç¸¿Ç˚   ¿ÉÄµ¿É¿É|o/// Signature for listening to [PointerUpEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿É£¿É≥¿É≤   ¿ÉªÄ¡¿Éª¿Ñ7s/// Signature for listening to [PointerCancelEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿Ñb¿Ñv¿Ñu   ¿Ñ~Ä”¿Ñ~¿Ö y/// Signature for listening to [PointerPanZoomStartEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿Ö1¿ÖK¿ÖJ   ¿ÖSÄ÷¿ÖS¿Ö÷z/// Signature for listening to [PointerPanZoomUpdateEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿Ü¿Ü#¿Ü"   ¿Ü+ÄÕ¿Ü+¿Ü´w/// Signature for listening to [PointerPanZoomEndEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿Ü⁄¿ÜÚ¿ÜÒ   ¿Ü˙Ä¡¿Ü˙¿ávs/// Signature for listening to [PointerSignalEvent] events.
///
/// Used by [Listener] and [RenderPointerListener].  ¿á°¿áµ¿á¥   áèäeáèâ*ÅÇ/// Implementation of [RenderProxyBox].
///
/// Use this mixin in situations where the proxying behavior
/// of [RenderProxyBox] is desired but inheriting from [RenderProxyBox] is
/// impractical (e.g. because you want to inherit from a different class).
///
/// If a class already inherits from [RenderProxyBox] and also uses this mixin,
/// you can safely delete the use of the mixin.â>â>â>    âÉÅâîâî  â§â≤â±  âÉâÑäàwäõäõ  ä¥äºäª  äàäâãwãã  ã/ã7ã6  ããã~wãëãë  ã´ã≥ã≤  ã~ãã˘wåå  å&å.å-  ã˘ã˙åtÄƒåàåà  å®å∂åµ  åtåuç<ÄØç]ç]  çp$çäçâ  çñç§ç£  ç<ç=çHçIçÔÄ≠éé  é$é8é7  çÔçç˚ç¸é†ÄÆé±é±   é†é°èRÄÍè‰è‰Äà/// Calculate the size the [RenderProxyBox] would have under the given
/// [BoxConstraints] for the case where it does not have a child. è˙ê
ê	   ê@ÄõêQêQ  êaêsêr  ê{êåêã  ê@êAêﬂNêê  ëëë  ëë!ë   êﬂê‡ë1Ä¡ëBëB  ëHëYëX  ëaëiëh  ë1ë2ââ¿ ÅMè¿ ÅM¿ ÇéÅ:/// Implementation of [RenderAnimatedOpacity] and [RenderSliverAnimatedOpacity].
///
/// This mixin allows the logic of animating opacity to be used with different
/// layout models, e.g. the way that [RenderAnimatedOpacity] uses it for [RenderBox]
/// and [RenderSliverAnimatedOpacity] uses it for [RenderSliver].¿ Ç©¿ Ç©¿ Ç© ¿ ÇÊ¿ ÇÎ¿ ÇÎ  ¿ ÉQ!¿ ÉW¿ ÉW  ¿ ÜF¿ ÜY¿ ÜY  ¿ â¿ â¿ â  ¿ ÇˆX¿ É¿ É   ¿ Çˆ¿ Ç˜¿ ÑWÅÏ¿ Ü.¿ Ü.Å¨/// The animation that drives this render object's opacity.
///
/// An opacity of 1.0 is fully opaque. An opacity of 0.0 is fully transparent
/// (i.e., invisible).
///
/// To change the opacity of a child in a static manner, not animated,
/// consider [RenderOpacity] instead.
///
/// This getter cannot be read until the value has been set. It should be set
/// by the constructor of the class in which this mixin is included.   ¿ áëÅÇ¿ à‡¿ à‡Å5/// Whether child semantics are included regardless of the opacity.
///
/// If false, semantics are excluded when [opacity] is 0.0.
///
/// Defaults to false.
///
/// This getter cannot be read until the value has been set. It should be set
/// by the constructor of the class in which this mixin is included.   ¿ ÜeÅ(¿ Üi¿ Üi  ¿ Üq¿ ÜÑ¿ ÜÉ   ¿ â7Ä±¿ â;¿ â;  ¿ âR
¿ âX¿ âW   ¿ ÉwÄ‹¿ Éè¿ Éè  ¿ ÉØ ¿ É»¿ É«  ¿ Éw¿ Éx¿ âÏÄª¿ â˝¿ â˝  ¿ ä¿ ä¿ ä  ¿ âÏ¿ âÌ¿ ä´_¿ äº¿ äº   ¿ ä´¿ ä¨¿ ãÇ¿ ã¿ ã    ¿ ç"v¿ ç3¿ ç3  ¿ ç?¿ çM¿ çL  ¿ ç"¿ ç#¿ çúÄë¿ ç≠¿ ç≠  ¿ ç≥¿ çƒ¿ ç√  ¿ çÃ¿ ç‘¿ ç”  ¿ çú¿ çù¿ é1ÄÆ¿ éB¿ éB  ¿ é\¿ éq¿ ép  ¿ é1¿ é2¿ é„Åx¿ éÙ¿ éÙ  ¿ è&¿ è%¿ è$  ¿ é„¿ é‰     ÄÆ  package:flutter/widgets.dart  Ä·  proxy_sliver.dart  Å  sliver.dart íâ <ÄÜÄ§Ä•Ä‘ÄÿÄ¸ÅÅ#Å$ÅeÅfÅèÅπÅ·Ç
Ç2Ç3ÇFÇ[ÇxÇéÇèÇ∂ÉÉÉVÉZÉ£ÉÒÑ@ÑÑÑàÑ◊Ö(ÖwÖãÖèÖùÖ°ÖÒÜÜ)ÜzÜúÜ¢ÜÍá7áIápáàáåáéáèá∑áªá¯àCàéàíà‚ââ$âÅâçâ∫ää)äTä{äÅäÖäÜäíä≈ä¸ã ããã@ãwã{ã|ãàãªãÚãˆã˜åå6åmåqårå~å¡å¸ç5ç9ç:çFçSçØçËçÏçÌç˘ééFéôéùéûé™é√éŒèè?èKèOèPèôè›êê9ê=ê>êJêòêÿê‹ê›êÈë.ë/ë;ërëõë¥ë¬ë»ëÔëÛëıëˆíí1ííªíÀíÃììfìÉìçìéì€îî%î'î(îgîÅîÀî˛ïïHïnï†ï∂ïÀïÃññ`ñfñòñûñÂóóóóTópóìóÎò-òbòjòpòÜòäòãòóò‚ò„òÔô4ô_ôºô¿ô¬ô√ôÙô¯öGöêö‡öÌöÒõAõäõßõ€úúúQú´úÂùù/ù0ùpù∂ùﬂûû;ûfûtûzûûûµûπû∫û∆û˘üSüÅüáü»ü‰††S†Y†k†o†p†|†Ø°	°7°=°~°ö°Œ¢	¢¢!¢%¢&¢2¢e¢¡¢¢ˆ£8£U£ä£«£Õ£‡£‰£Â£Ò§$§Ä§Ø§µ§˜••I•Ü•å•ü•£•§•∞¶¶e¶i¶j¶v¶è¶»¶·ß9ßSß`ßØßµßπß∫ß∆ß”®®b®¨®∞®±®Ω®˝©(©8©Q©É©Ω©Ù©¸™™™™™*™o™ö™Æ´	´´´´´P´ì´ó´‰¨/¨z¨…¨‚¨Ê≠1≠w≠á≠∑ÆÆ=ÆCÆäÆûÆ≥Æ…ÆØØ8ØYØvØïØ™Ø´∞ ∞$∞8∞W∞q∞è∞ù∞£∞∫∞—∞’∞÷±-±S±h±à±¢±¡±œ±’±Ì≤≤≤	≤J≤e≤ã≤∑≤ÿ≥
≥2≥`≥Ç≥∂≥Ω≥¡≥¬¥#¥<¥é¥Ω¥√µµµµµ!µaµ√µ«µ»µ‘µÌ∂L∂P∂Q∂]∂¢∂Õ∑&∑Å∑Ö∑á∑à∑√∑«∏∏b∏∞∏¥∏¸πLπÑπàπ’∫#∫r∫π∫Ωª	ªZª´ª˘ºGºïº„Ω1Ω~Ωƒææ5æræxæªø ø!øEøgø{ø|ø¶ø¨ø¸¿ @C¿ @m¿ @Ñ¿ @¶¿ @ø¿ @€¿ @¸¿ A
¿ A¿ A*¿ AA¿ AE¿ AF¿ AR¿ AÖ¿ A†¿ Aƒ¿ A ¿ B¿ B¿ B¿ B¿ BE¿ B`¿ BÑ¿ Bä¿ B¡¿ B≈¿ B∆¿ B“¿ C¿ C¿ CB¿ CH¿ C¿ CÉ¿ CÑ¿ Cê¿ C√¿ C›¿ D ¿ D¿ D=¿ DA¿ DB¿ Dy¿ Dß¿ D∑¿ E¿ E¿ ET¿ E´¿ E¸¿ FN¿ Fl¿ Fw¿ F¿ Fí¿ Fú¿ Fù¿ Fº¿ Fﬂ¿ FÂ¿ FÊ¿ G¿ G"¿ G#¿ Gp¿ Gº¿ G”¿ GÌ¿ H¿ H¿ HE¿ Hj¿ Hp¿ Hq¿ Hø¿ I	¿ IU¿ Il¿ Im¿ Iï¿ Iπ¿ Iﬁ¿ I‰¿ IÂ¿ J¿ J5¿ JZ¿ J`¿ Ja¿ Jâ¿ J≠¿ J“¿ Jÿ¿ JŸ¿ K¿ K)¿ KN¿ KT¿ KU¿ Kå¿ Kê¿ Kë¿ Kù¿ K™¿ KÍ¿ L¿ L¿ L¿ L&¿ Lx¿ Lÿ¿ L‹¿ L›¿ LÈ¿ M¿ M(¿ MW¿ M[¿ M\¿ Mh¿ M≠¿ Mÿ¿ N¿ N¿ N¿ N¿ N[¿ N_¿ N¨¿ N¸¿ O0¿ O4¿ OÄ¿ O–¿ P¿ Pf¿ P≥¿ P€¿ Pﬂ¿ Q/¿ Q{¿ Qπ¿ QΩ¿ R
¿ RX¿ Rß¿ Ræ¿ R¬¿ R–¿ R‘¿ S#¿ Sj¿ S∏¿ SÀ¿ T¿ TZ¿ Tß¿ T€¿ U¿ U_¿ Ue¿ Uµ¿ U÷¿ V(¿ V\¿ Ví¿ V∞¿ V–¿ V‰¿ VÂ¿ W0¿ W6¿ W^¿ WÖ¿ Wõ¿ Wº¿ WÊ¿ X¿ X¿ X¿ X1¿ XH¿ XL¿ XM¿ Xô¿ Xü¿ X«¿ X¿ Y¿ Y)¿ YS¿ Ys¿ YÅ¿ Yá¿ Y†¿ Y∑¿ Yª¿ Yº¿ Yı¿ Z¿ Z)¿ Z=¿ ZC¿ Zl¿ Zp¿ Zq¿ Z}¿ Z∞¿ ZŸ¿ Z›¿ Zﬁ¿ ZÍ¿ [¿ [6¿ [H¿ [N¿ [å¿ [∂¿ [∫¿ [ª¿ [«¿ [˙¿ \¿ \%¿ \+¿ \F¿ \{¿ \Å¿ \ù¿ \‹¿ ]¿ ]¿ ]¿ ]¿ ]L¿ ]e¿ ]w¿ ]}¿ ]ò¿ ]Õ¿ ]”¿ ]Ô¿ ^.¿ ^Z¿ ^^¿ ^_¿ ^±¿ ^—¿ ^¯¿ _	¿ _`¿ _Å¿ _í¿ _Í¿ _Ò¿ _ı¿ _ˆ¿ `W¿ `Ä¿ `ô¿ `∏¿ `˝¿ a¿ a¿ a¿ a¿ a[¿ aΩ¿ a¡¿ a¬¿ aŒ¿ b ¿ bI¿ bú¿ b†¿ b°¿ b≠¿ b∆¿ c%¿ c)¿ c*¿ c6¿ c{¿ c¶¿ c‚¿ d ¿ d$¿ d&¿ d'¿ d\¿ d`¿ dÆ¿ d˛¿ e3¿ e7¿ eÉ¿ e”¿ f!¿ fl¿ f∫¿ f„¿ fÁ¿ g4¿ gÇ¿ g—¿ gË¿ gÏ¿ g˙¿ g˛¿ hM¿ hï¿ h‰¿ h˜¿ iF¿ iä¿ iŸ¿ j¿ jC¿ jî¿ j–¿ j—¿ j›¿ k¿ k)¿ k;¿ kA¿ k]¿ kõ¿ k°¿ kæ¿ kÓ¿ kÚ¿ kÛ¿ kˇ¿ l2¿ lK¿ l]¿ lc¿ l¿ lΩ¿ l√¿ l‡¿ m¿ m¿ m¿ m!¿ mT¿ m}¿ mÅ¿ mÇ¿ m‘¿ m˙¿ n¿ nj¿ nn¿ no¿ n–¿ n˘¿ o¿ o1¿ ov¿ oz¿ o{¿ oá¿ oî¿ o‘¿ p6¿ p:¿ p;¿ pG¿ pô¿ p¬¿ q¿ q¿ q¿ q&¿ q?¿ qû¿ q¢¿ q§¿ q•¿ qÊ¿ r¿ r}¿ r∏¿ rπ¿ r≈¿ s¿ s¿ s¿ s¿ s'¿ sÄ¿ së¿ sï¿ só¿ sò¿ s√¿ s«¿ t¿ tL¿ tP¿ tõ¿ tÂ¿ u-¿ u}¿ u™¿ uﬂ¿ uÂ¿ v*¿ vâ¿ vπ¿ v”¿ w¿ wA¿ wU¿ wV¿ wb¿ w§¿ w•¿ w±¿ wÈ¿ wÍ¿ w¯¿ w˘¿ x.¿ x4¿ xÑ¿ xù¿ x£¿ xÁ¿ y.¿ y?¿ ya¿ yt¿ yí¿ yº¿ yŸ¿ yÁ¿ yÌ¿ z)¿ zR¿ zh¿ zù¿ z’¿ z˝¿ {¿ {)¿ {k¿ {ç¿ {ì¿ {ó¿ {ò¿ {ﬁ¿ {‰¿ |"¿ |(¿ |A¿ |¿ |ü¿ | ¿ |ˆ¿ }¿ }
¿ }/¿ }O¿ }S¿ }T¿ }`¿ }Ü¿ }®¿ }ø¿ }√¿ }ƒ¿ }–¿ ~#¿ ~^¿ ~x¿ ~ä¿ ~é¿ ~è¿ ~õ¿ ~“¿ ~˙¿ ¿ ¿ 0¿ 4¿ 5¿ A¿ Å¿ ≈¿ ‹¿ ‚¿ Ê¿ Á¿ Û¿ Ä8¿ Äc¿ Äõ¿ ÄØ¿ Ä√¿ ÄÂ¿ Å¿ Å6¿ Å?¿ ÅF¿ ÅJ¿ ÅL¿ ÅM¿ Åû¿ Å¢¿ ÅÒ¿ ÇF¿ Çà¿ Ç‰¿ ÇÛ¿ ÇÙ¿ É ¿ ÉO¿ Ét¿ Éu¿ ÉÅ¿ É‘¿ Ñ¿ Ñ7¿ ÑP¿ ÑT¿ ÑU¿ Ñì¿ Ñô¿ ÑÈ¿ Ö¿ Ö¿ ÖQ¿ Öy¿ Ö¿ Öœ¿ Ü¿ ÜD¿ Üc¿ Üå¿ Ü©¿ Ü∑¿ ÜΩ¿ ÜÂ¿ á¿ á¿ á/¿ áC¿ án¿ át¿ áä¿ áé¿ áè¿ á’¿ á€¿ à¿ à¿ à8¿ à>¿ àé¿ à’¿ â¿ â5¿ â`¿ âå¿ âö¿ â†¿ â≈¿ âÂ¿ âÈ¿ âÍ¿ âˆ¿ ä¿ ä4¿ ä]¿ ä§¿ ä®¿ ä©¿ äµ¿ ä«¿ äÛ¿ ã¿ ã¿ ã¿ ã&¿ ãH¿ ãÇ¿ ã†¿ ã‰¿ å¿ åe¿ åè¿ åó¿ åø¿ åÈ¿ ç¿ ç¿ ç¿ ç¿ ç ¿ ç,¿ çU¿ çw¿ çï¿ çô¿ çö¿ ç¶¿ ç›¿ çÙ¿ é¿ é¿ é*¿ é.¿ é/¿ é;¿ é{¿ éø¿ é÷¿ é‹¿ é‡¿ é·¿ éÌ¿ è2¿ è]¿ è≠¿ è¡¿ è’¿ è˜¿ ê¿ êH¿ êQ¿ êX¿ ê\¿ ê^¿ ê_¿ ê¶¿ ê™¿ ê˚¿ ë'¿ ëá¿ ëº¿ ë÷¿ ë˛¿ í'¿ í=¿ íS¿ ío¿ í©¿ í≠¿ íØ¿ í∞¿ í˘¿ í˝¿ ì9¿ ìp¿ ìq¿ ì™¿ ìÆ¿ ì˝¿ î2¿ îb¿ î∫¿ îœ¿ îÂ¿ ï¿ ï?¿ ïh¿ ïá¿ ïú¿ ïù¿ ï©¿ ïÍ¿ ïÎ¿ ñ)¿ ñ/¿ ñ~¿ ñ«¿ ñÕ¿ ó¿ ó'¿ óu¿ ó≠¿ óÂ¿ ò¿ ò4¿ òX¿ òf¿ òl¿ òâ¿ òü¿ ò£¿ ò§¿ òË¿ òÓ¿ ô=¿ ôà¿ ô±¿ ô…¿ ôÏ¿ ö¿ ö¿ ö¿ ö7¿ öM¿ öQ¿ öR¿ ö^¿ öí¿ öì¿ öü¿ ö÷¿ öÔ¿ õ¿ õ2¿ õ?¿ õv¿ õô¿ õª¿ õÒ¿ ú¿ ú/¿ úD¿ úP¿ ú]¿ úq¿ úw¿ ú{¿ ú}¿ ú~¿ úÃ¿ ú–¿ ù ¿ ù4¿ ùh¿ ùâ¿ ùé¿ ùŒ¿ ùÁ¿ ù˝¿ û!¿ ûN¿ ûg¿ ûÖ¿ ûû¿ ûπ¿ ûÿ¿ û˚¿ ü¿ ü¿ ü¿ üf¿ üg¿ ü∏¿ üÿ¿ üÈ¿ †¿ †!¿ †/¿ †5¿ †K¿ †a¿ †e¿ †f¿ †∂¿ †«¿ †Õ¿ °¿ °-¿ °U¿ °o¿ °î¿ °∞¿ °æ¿ °ƒ¿ °Ÿ¿ °Ô¿ °Û¿ °Ù¿ ¢M¿ ¢\¿ ¢b¿ ¢ö¿ ¢√¿ ¢€¿ ¢˛¿ £¿ £+¿ £1¿ £I¿ £_¿ £c¿ £d¿ £∞¿ £¡¿ £«¿ £ˇ¿ §/¿ §L¿ §t¿ §ï¿ §£¿ §©¿ §√¿ §Ÿ¿ §›¿ §ﬁ¿ §Í¿ •¿ •¿ •+¿ •b¿ •w¿ •õ¿ •©¿ •Ø¿ •∞¿ •…¿ •È¿ ¶¿ ¶/¿ ¶T¿ ¶}¿ ¶≥¿ ¶≈¿ ¶Ò¿ ß¿ ß¿ ß¿ ß3¿ ß9¿ ß=¿ ß?¿ ß@¿ ßm¿ ßq¿ ß∫¿ ßÀ¿ ßœ¿ ® ¿ ®$¿ ®m¿ ®π¿ ® ¿ ®Œ¿ ©¿ ©g¿ ©∏¿ ™¿ ™¿ ™¿ ™¿ ™g¿ ™≤¿ ™˚¿ ´D¿ ´ì¿ ´»¿ ´Ë¿ ´Ó¿ ¨?¿ ¨¿ ¨Ä¿ ¨ù¿ ¨û¿ ¨·¿ ¨Á¿ ≠6¿ ≠Ü¿ ≠ù¿ ≠©¿ ≠ˆ¿ ≠˜¿ ÆG¿ Æx¿ Æ~¿ ÆÕ¿ Ø¿ Ø4¿ Ø@¿ Øì¿ Øî¿ Øﬂ¿ ∞¿ ∞¿ ∞¿ ∞a¿ ∞§¿ ∞ÿ¿ ∞ﬁ¿ ±"¿ ±i¿ ±¨¿ ±Û¿ ≤3¿ ≤4¿ ≤Å¿ ≤“¿ ≥#¿ ≥t¿ ≥z¿ ≥¬¿ ¥¿ ¥¿ ¥$¿ ¥r¿ ¥~¿ ¥Ñ¿ ¥ ¿ µ¿ µJ¿ µÜ¿ µá¿ µì¿ µ‘¿ µ÷¿ µ◊¿ ∂¿ ∂U¿ ∂|¿ ∂Ç¿ ∂ ¿ ∑¿ ∑f¿ ∑©¿ ∑¿ ∑Ò¿ ∏0¿ ∏K¿ ∏L¿ ∏î¿ ∏ö¿ ∏Â¿ π¿ π2¿ π3¿ πh¿ πt¿ πê¿ π·¿ πÂ¿ πÊ¿ πÚ¿ ∫(¿ ∫`¿ ∫s¿ ∫y¿ ∫ ¿ ª'¿ ª+¿ ª-¿ ª.¿ ªk¿ ªÅ¿ ªó¿ ª∂¿ ªﬁ¿ ª˘¿ º¿ º3¿ º4¿ ºr¿ ºü¿ ºΩ¿ ºÎ¿ Ω¿ Ω¿ Ω!¿ ΩT¿ Ωo¿ Ω•¿ Ω√¿ Ω·¿ æ¿ æL¿ æd¿ æj¿ æ~¿ æ∞¿ æﬂ¿ æÂ¿ æÈ¿ æÍ¿ æˆ¿ ø¿ ø4¿ ø_¿ øc¿ ød¿ øp¿ øÇ¿ ø∞¿ øƒ¿ ø»¿ ø…¿ ø„¿ øı¿ ¿¿ ¿+¿ ¿/¿ ¿0¿ ¿F¿ ¿R¿ ¿S¿ ¿}¿ ¿û¿ ¿¿¿ ¿›¿ ¿ı¿ ¿˚¿ ¿ˇ¿ ¡ ¿ ¡¿ ¡¿ ¡#¿ ¡<¿ ¡m¿ ¡à¿ ¡£¿ ¡∑¿ ¡Ω¿ ¡¡¿ ¡¬¿ ¡Ÿ¿ ¬¿ ¬¿ ¬¿ ¬!¿ ¬\¿ ¬x¿ ¬é¿ ¬£¿ ¬Ω¿ ¬ÿ¿ √ ¿ √M¿ √S¿ √W¿ √X¿ √n¿ √â¿ √ï¿ √’¿ √Â¿ ƒ¿ ƒ*¿ ƒA¿ ƒe¿ ƒx¿ ƒù¿ ƒ¬¿ ƒÁ¿ ≈¿ ≈¿ ≈E¿ ≈b¿ ≈l¿ ≈à¿ ≈∞¿ ≈“¿ ≈¿ ∆¿ ∆K¿ ∆V¿ ∆¶¿ ∆π¿ ∆Ã¿ ∆÷¿ ∆⁄¿ ∆€¿ ∆Á¿ ∆˙¿ «¿ «,¿ «A¿ «E¿ «G¿ «H¿ «o¿ «s¿ «¡¿ »¿ »(¿ »_¿ »Å¿ »á¿ »◊¿ »Ë¿ »Ó¿ …3¿ …w¿ …x¿ …Ñ¿ …≥¿ …¥¿ …¿¿  ¿  "¿  7¿  T¿  |¿  í¿  ö¿  †¿  ÷¿  ⁄¿  €¿  Á¿ À¿ À7¿ À^¿ Àu¿ Àõ¿ À∑¿ À…¿ À€¿ ÀÚ¿ Ã¿ ÃE¿ ÃP¿ Ã_¿ Ãã¿ Ã°¿ Ã©¿ Ã∂¿ Ã ¿ Ã–¿ Ã‘¿ Ã’¿ Ã·¿ Õ!¿ Õ1¿ ÕL¿ Õ{¿ Õ§¿ ÕÎ¿ Œ¿ Œ$¿ ŒÄ¿ Œç¿ Œó¿ Œü¿ Œ≤¿ Œº¿ Œ¿¿ Œ¬¿ Œ√¿ ŒÚ¿ Œˆ¿ œF¿ œî¿ œ™¿ œ„¿ –¿ –¿ –c¿ –¿ –Ö¿ –≈¿ –À¿ —¿ —$¿ —5¿ —p¿ —É¿ —õ¿ —Ω¿ —‚¿ “	¿ “
¿ “:¿ “@¿ “ã¿ “¶¿ “¨¿ “‚¿ ”¿ ”B¿ ”s¿ ”ï¿ ”£¿ ”©¿ ”ƒ¿ ”⁄¿ ”ﬁ¿ ”ﬂ¿ ‘¿ ‘T¿ ‘u¿ ‘°¿ ‘ƒ¿ ‘“¿ ‘ÿ¿ ‘Ù¿ ’
¿ ’¿ ’¿ ’¿ ’y¿ ’z¿ ’Ü¿ ’Ã¿ ’Ë¿ ’˝¿ ÷¿ ÷B¿ ÷X¿ ÷`¿ ÷f¿ ÷ú¿ ÷†¿ ÷°¿ ÷≠¿ ÷‰¿ ÷˝¿ ◊$¿ ◊;¿ ◊b¿ ◊~¿ ◊ê¿ ◊¨¿ ◊æ¿ ◊’¿ ◊˚¿ ÿ)¿ ÿ4¿ ÿC¿ ÿo¿ ÿÖ¿ ÿç¿ ÿö¿ ÿÆ¿ ÿ¥¿ ÿ∏¿ ÿπ¿ ÿ≈¿ Ÿ¿ Ÿ¿ Ÿ0¿ Ÿ_¿ Ÿà¿ Ÿ–¿ ŸÌ¿ ⁄	¿ ⁄c¿ ⁄p¿ ⁄z¿ ⁄Ç¿ ⁄ï¿ ⁄ü¿ ⁄£¿ ⁄•¿ ⁄¶¿ ⁄ÿ¿ ⁄‹¿ €&¿ €o¿ €ò¿ €ú¿ €Ë¿ ‹1¿ ‹\¿ ‹b¿ ‹≤¿ ‹Œ¿ ‹‘¿ ›¿ ›5¿ ›F¿ ›Å¿ ›î¿ ›¨¿ ›Œ¿ ›Û¿ ﬁ¿ ﬁ¿ ﬁK¿ ﬁQ¿ ﬁú¿ ﬁ∑¿ ﬁΩ¿ ﬁÛ¿ ﬂ-¿ ﬂS¿ ﬂÑ¿ ﬂ¶¿ ﬂ¥¿ ﬂ∫¿ ﬂ’¿ ﬂÎ¿ ﬂÔ¿ ﬂ¿ ‡/¿ ‡e¿ ‡Ü¿ ‡≤¿ ‡’¿ ‡„¿ ‡È¿ ·¿ ·¿ ·¿ · ¿ ·,¿ ·P¿ ·†¿ ·°¿ ·≠¿ ·Û¿ ‚¿ ‚$¿ ‚A¿ ‚s¿ ‚â¿ ‚ë¿ ‚ó¿ ‚Õ¿ ‚—¿ ‚“¿ ‚ﬁ¿ „¿ „.¿ „U¿ „l¿ „õ¿ „∑¿ „…¿ „Â¿ „˜¿ ‰¿ ‰4¿ ‰j¿ ‰u¿ ‰Ñ¿ ‰∞¿ ‰∆¿ ‰Œ¿ ‰€¿ ‰Ô¿ ‰ı¿ ‰˘¿ ‰˙¿ Â¿ ÂF¿ ÂV¿ Âq¿ Â†¿ Â…¿ Ê¿ Ê6¿ ÊR¿ Ê¨¿ Êπ¿ Ê√¿ ÊÀ¿ Êﬁ¿ ÊË¿ ÊÏ¿ ÊÓ¿ ÊÔ¿ Á¿ Á¿ Ád¿ Á≠¿ Á˜¿ Ë.¿ ËQ¿ ËW¿ Ëß¿ Ëƒ¿ Ë ¿ È¿ ÈS¿ ÈT¿ Èi¿ ÈÇ¿ ÈÉ¿ È§¿ È√¿ È›¿ Í¿ Í¿ Í.¿ Í2¿ Í3¿ Í?¿ Ín¿ Ío¿ Í{¿ Í¡¿ Í‘¿ ÍÔ¿ Î¿ Îd¿ ÎÜ¿ Î∂¿ ÎÁ¿ ÎÓ¿ Ï#¿ ÏL¿ Ïe¿ Ïy¿ Ï¿ Ïµ¿ Ïπ¿ Ï∫¿ Ï∆¿ Ï˝¿ Ì¿ Ì=¿ ÌT¿ Ìz¿ Ìñ¿ Ì®¿ Ì∫¿ Ì⁄¿ ÌÒ¿ Ó¿ ÓD¿ ÓO¿ Ó^¿ Óä¿ Ó†¿ Ó®¿ Óµ¿ Ó…¿ Óœ¿ Ó”¿ Ó‘¿ Ó‡¿ Ô ¿ Ô0¿ ÔK¿ Ôz¿ Ô£¿ Ô¯¿ ¿ 1¿ F¿ ^¿ ö¿ ◊¿ Í¿ ˜¿ Ò¿ Ò	¿ Ò¿ Ò&¿ Ò*¿ Ò,¿ Ò-¿ ÒO¿ ÒS¿ Òò¿ ÒŸ¿ Ò›¿ Ú¿ Ú9¿ Ú=¿ Úw¿ Ú∑¿ Ú˙¿ Û1¿ ÛL¿ ÛR¿ Û£¿ Û¿ Ù@¿ ÙS¿ ÙY¿ Ùû¿ Ù‚¿ Ù„¿ ÙÔ¿ ı/¿ ı0¿ ı<¿ ıÇ¿ ıû¿ ı≥¿ ı–¿ ı¯¿ ˆ¿ ˆ¿ ˆ¿ ˆR¿ ˆV¿ ˆW¿ ˆc¿ ˆö¿ ˆ≥¿ ˆ⁄¿ ˆÒ¿ ˜¿ ˜3¿ ˜E¿ ˜c¿ ˜u¿ ˜å¿ ˜≤¿ ˜ﬂ¿ ˜Í¿ ˜˘¿ ¯%¿ ¯;¿ ¯C¿ ¯P¿ ¯d¿ ¯j¿ ¯n¿ ¯o¿ ¯{¿ ¯ª¿ ¯À¿ ¯Ê¿ ˘¿ ˘>¿ ˘Ö¿ ˘∫¿ ˘ƒ¿ ˘Ã¿ ˘ﬂ¿ ˘È¿ ˘Ì¿ ˘Ô¿ ˘¿ ˙4¿ ˙8¿ ˙â¿ ˙ø¿ ˚	¿ ˚?¿ ˚\¿ ˚v¿ ˚ï¿ ˚Ø¿ ˚œ¿ ˚Û¿ ¸¿ ¸'¿ ¸F¿ ¸]¿ ¸Ä¿ ¸Å¿ ¸–¿ ¸÷¿ ¸˜¿ ¸˝¿ ˝K¿ ˝y¿ ˝ü¿ ˝¥¿ ˝‘¿ ˝Ó¿ ˛¿ ˛¿ ˛ ¿ ˛\¿ ˛t¿ ˛¨¿ ˛‘¿ ˛⁄¿ ˛¿ ˛Ù¿ ˛ı¿ ˇ¿ ˇ6¿ ˇL¿ ˇm¿ ˇç¿ ˇõ¿ ˇ°¿ ˇª¿ ˇ—¿ ˇ’¿ ˇ÷¿ ˇÚ¿ ¿ ¿ :¿ T¿ b¿ h¿ |¿ í¿ ñ¿ ó¿ £¿ È¿¿R¿Ü¿¿¿ƒ¿∆¿«¿¿¿¿c¿ß¿—¿◊¿ˆ¿¸¿2¿J¿[¿Ñ¿ú¿º¿◊¿Ò¿"¿C¿Z¿¿Ä¿û¿§¿Û¿¿+¿>¿\¿v¿Ñ¿ä¿û¿¥¿∏¿π¿È¿Ô¿:¿U¿[¿¶¿¨¿Ê¿¿8¿b¿É¿ë¿ó¿≤¿»¿Ã¿Õ¿Ÿ¿Ù¿	¿3¿P¿ü¿Ò¿¯¿¸¿˝¿		¿	O¿	k¿	Ä¿	ù¿	≈¿	€¿	„¿	È¿
¿
#¿
$¿
0¿
g¿
Ä¿
î¿
¢¿
®¿
©¿
º¿
¿2¿P¿`¿Å¿†¿ƒ¿›¿Ò¿¿B¿q¿~¿à¿¶¿Æ¿¡¿À¿Ã¿ˆ¿"¿{¿Å¿Õ¿Á¿$¿*¿M¿e¿s¿ç¿õ¿Ã¿È¿%¿t¿√¿¿C¿M¿s¿|¿¶¿»¿œ¿–¿‡¿
¿¿'¿+¿,¿8¿~¿™¿Ó¿D¿H¿J¿K¿ê¿î¿ÿ¿‹¿Í¿Ó¿:¿J¿ç¿¥¿∫¿Û¿˘¿/¿G¿X¿à¿†¿ª¿’¿¿'¿(¿4¿t¿u¿Å¿«¿„¿¯¿¿=¿S¿[¿a¿ó¿õ¿ú¿®¿ﬂ¿¯¿¿¿ ¿!¿4¿f¿Ñ¿î¿µ¿‘¿˜¿¿#¿G¿t¿£¿∞¿∫¿ÿ¿‡¿Û¿˝¿˛¿(¿T¿¶¿¨¿¯¿¿M¿S¿u¿ç¿õ¿µ¿√¿Ù¿¿M¿ú¿Î¿/¿k¿u¿õ¿§¿Õ¿Ô¿ˆ¿˜¿¿1¿D¿N¿R¿S¿_¿•¿—¿$¿(¿*¿+¿P¿j¿û¿¨¿≠¿Ê¿Ù¿ˆ¿˜¿:¿l¿ã¿ë¿ﬂ¿ ¿ $¿ s¿ û¿ µ¿ Ÿ¿!¿![¿!q¿!í¿!Ø¿!÷¿!Î¿!Ï¿"¿"¿"%¿"+¿"M¿"y¿"ì¿"∏¿"ÿ¿"Ê¿"Ï¿#¿#¿#3¿#I¿#M¿#N¿#ô¿#…¿#È¿$¿$2¿$@¿$F¿$]¿$s¿$w¿$x¿$√¿%¿%!¿%'¿%j¿%∞¿%Í¿&¿&?¿&b¿&p¿&v¿&í¿&®¿&¨¿&≠¿&π¿&À¿&‰¿&˘¿'¿'R¿'õ¿'Á¿(3¿(n¿(Ñ¿(à¿(â¿(ï¿(®¿(¡¿(÷¿(⁄¿(€¿(Á¿)¿)i¿)m¿)n¿)z¿)±¿)¿*G¿*|¿*ó¿*©¿*·¿*ˆ¿+¿+F¿+X¿+ó¿+—¿+Î¿,G¿,V¿,t¿,–¿-0¿-ç¿-ú¿-…¿-Ì¿.¿.@¿.O¿.|¿.ù¿.µ¿.Ó¿.˝¿/¿/¿/*¿/6¿/X¿/|¿/Ñ¿/ä¿/¨¿/·¿0%¿0G¿0k¿0s¿0y¿0}¿0~¿0ä¿0œ¿0˙¿1A¿1û¿1¢¿1§¿1•¿1›¿2¿2E¿2Y¿2y¿2ç¿2Ø¿2—¿2Ù¿3¿3,¿3B¿3b¿3Ç¿3™¿3“¿3Ï¿3¿3Ò¿4A¿4y¿4¿4Œ¿5¿52¿5E¿5c¿5¿5ç¿5ì¿5®¿5æ¿5ﬁ¿5‚¿5„¿6'¿6-¿6y¿6√¿6…¿7¿7Y¿7©¿7¯¿87¿8à¿8∫¿8€¿9¿9&¿94¿9:¿9R¿9h¿9à¿9å¿9ç¿9…¿9œ¿:¿:V¿:å¿:≠¿:Ÿ¿:¸¿;
¿;¿;,¿;B¿;b¿;f¿;g¿;s¿;¡¿;¬¿<¿<X¿<{¿<Å¿<—¿="¿=<¿==¿=T¿=U¿=§¿=√¿=…¿>¿>d¿>â¿>¥¿>’¿>Ù¿?¿?¿?.¿?D¿?d¿?h¿?i¿?ª¿?¡¿@¿@7¿@X¿@Ñ¿@ß¿@µ¿@ª¿@˜¿A¿AK¿As¿Ay¿Aè¿Aì¿Aî¿A≈¿A‹¿A˚¿B¿B1¿B5¿B6¿By¿Bö¿Bº¿B“¿BÚ¿Bˆ¿B˜¿C:¿C[¿C}¿Cì¿C≥¿C∑¿C∏¿C˚¿D¿D>¿DT¿Dt¿Dx¿Dy¿Dª¿D˙¿E)¿E?¿E_¿Ec¿Ed¿Eì¿Eƒ¿E˘¿F¿F/¿F3¿F4¿FY¿F•¿F›¿Fˆ¿F¸¿G+¿GF¿GÜ¿Gå¿G•¿G ¿H¿HG¿HM¿Ho¿Hî¿H›¿H„¿H˛¿I@¿IF¿IY¿I]¿I^¿Ij¿I∞¿IÁ¿J$¿Jb¿J|¿J¥¿J∏¿Jπ¿J≈¿K¿KR¿K{¿Kº¿K÷¿L¿LT¿L]¿Ld¿Lh¿Li¿Lu¿L¨¿L≈¿L˚¿M¿Mk¿Mé¿M„¿N'¿N]¿Nà¿N¢¿N∂¿N¬¿NÎ¿O	¿O¿O4¿OM¿Oû¿O´¿Oº¿OÚ¿P
¿P¿P#¿PÉ¿P£¿P‡¿Q¿QC¿Ql¿Qw¿Q¥¿Q‡¿QÒ¿R*¿R4¿Rl¿RÄ¿RÆ¿R≈¿R”¿R€¿R·¿RÂ¿RÊ¿RÚ¿S3¿Sa¿Se¿Sf¿Sr¿S∑¿S‚¿T)¿Tl¿T¿¿U%¿U|¿UÄ¿UÇ¿UÉ¿U»¿U˜¿V+¿V?¿V`¿Vî¿V∂¿VÃ¿VÔ¿W¿W!¿WH¿Wm¿WÇ¿WÉ¿W÷¿W˜¿W¯¿X¿X6¿XL¿XP¿XQ¿Xx¿Xã¿X®¿XΩ¿Xÿ¿XÒ¿Y	¿Y&¿YB¿YZ¿Yp¿Yv¿Yz¿Y{¿Y√¿Y›¿YÏ¿Z¿Z¿Z-¿Z3¿ZT¿Zf¿Z®¿Z¡¿ZŒ¿ZÁ¿Zˇ¿[¿[	¿[
¿[C¿[I¿[ô¿[Í¿\¿\ ¿\_¿\á¿\∏¿\ÿ¿]¿]"¿]0¿]6¿]N¿]e¿]Ä¿]Ñ¿]Ö¿]¡¿]«¿^¿^N¿^Ñ¿^•¿^—¿^Ù¿_¿_¿_$¿_;¿_V¿_Z¿_[¿_ú¿_ù¿_©¿_∂¿_ˆ¿`¿`Y¿`Z¿`o¿`é¿`’¿a¿aV¿aë¿aÆ¿a…¿a„¿b¿b ¿b:¿bê¿bò¿b•¿b»¿bŒ¿b“¿b”¿bﬂ¿b¯¿c¿cT¿ci¿cà¿cœ¿d¿dR¿dç¿d™¿d≈¿dﬂ¿d˛¿e¿e6¿eé¿eñ¿eØ¿eº¿eﬂ¿eÂ¿eÈ¿eÍ¿f¿f¿f¿fT¿fZ¿fy¿f£¿f≈¿fÊ¿g¿g%¿g=¿g_¿ge¿gi¿gj¿gÖ¿g§¿gª¿gø¿g¿¿g‹¿g˙¿h¿h¿h¿h(¿hJ¿hq¿h~¿h¥¿hﬁ¿i"¿il¿i∏¿j¿jX¿js¿jè¿jò¿j≥¿k	¿k;¿kò¿k»¿l¿lY¿l_¿lc¿ld¿lπ¿m¿m#¿mG¿ma¿mq¿mÜ¿mõ¿mË¿mÒ¿m˛¿n0¿n6¿nG¿nK¿nL¿nX¿nè¿nœ¿n›¿n„¿n˚¿o¿oR¿ov¿oê¿o†¿oº¿oﬁ¿p)¿pM¿pV¿pc¿pú¿p¢¿p¶¿pß¿p≥¿q¿q;¿qO¿qU¿qm¿qñ¿q≥¿qÕ¿r	¿rK¿rT¿r[¿r_¿r`¿rl¿rí¿r¥¿rÂ¿rÈ¿rÍ¿rˆ¿s7¿sV¿sq¿s~¿sò¿sø¿s≈¿s…¿s ¿s÷¿t¿tF¿t|¿t–¿u5¿u9¿u;¿u<¿uÄ¿uÑ¿u‘¿v¿vT¿vX¿vï¿v‚¿vı¿w0¿wt¿wî¿wµ¿wÿ¿wÓ¿x¿x&¿x'¿xp¿xv¿x≈¿x˛¿y(¿y?¿ya¿yÇ¿yê¿yñ¿y∞¿y∆¿yÊ¿yÍ¿yÎ¿y˜¿z=¿zÄ¿zΩ¿z˚¿{¿{M¿{Q¿{R¿{ü¿{Ë¿|¿|¿|a¿|≤¿|Ã¿|Õ¿|Ÿ¿}'¿}F¿}l¿}å¿}⁄¿}Ï¿~¿~B¿~Ñ¿~ç¿~î¿~ò¿~ô¿~•¿~‹¿~˚¿¿'¿8¿õ¿§¿™¿Æ¿Ø¿ª¿¸¿Ä^¿Äb¿Äc¿Äo¿Ä¥¿Äﬂ¿Å,¿ÅÉ¿Åá¿Åâ¿Åä¿Åƒ¿Å»¿Å¸¿ÇF¿ÇG¿ÇÅ¿ÇÖ¿Çπ¿É¿É¿É<¿É@¿Ét¿É∫¿Éª¿É˜¿É˚¿Ñ/¿Ñ}¿Ñ~¿Ñ¿¿Ñƒ¿Ñ¯¿ÖR¿ÖS¿Öñ¿Öö¿ÖŒ¿Ü*¿Ü+¿Ük¿Üo¿Ü£¿Ü˘¿Ü˙¿á6¿á:¿án¿áº¿áΩ¿á˜¿á˚¿àC¿àè¿àì¿à„¿â)¿âT¿âX¿âò¿âú¿âÎ¿ä3¿ä|¿äÇ¿äÃ¿äÊ¿ä˛¿ã¿ã,¿ãE¿ã_¿ã¿ã†¿ãæ¿ãÿ¿ãÏ¿ã˝¿å¿å¿åN¿åü¿åØ¿å⁄¿å€¿ç+¿çV¿çW¿ç•¿çƒ¿çÎ¿çÏ¿é:¿ég¿éh¿é∏¿éË¿è¿è¿è]¿èò¿èô¿è¬¿èˇ¿ê ¿ê'¿ê^¿ê_¿êõ¿ê ¿êÀ¿ê◊¿ë¿ë2¿ë6¿ë7¿ëC¿ëÄ¿ë¨¿ë»¿í ¿í8¿íl¿í¶¿í‚¿ì*¿ìt¿ì∏¿ìÙ¿î¿î¿î¿î¿î¿îb¿îç¿î°¿î·¿ï ¿ï¿ï:¿ï[¿ï~¿ï≠¿ïﬁ¿ñ	¿ñ,¿ñI¿ñP¿ñT¿ñV¿ñW¿ñ•¿ñ©¿ñı¿óB¿ó`¿ód¿ó≥¿ò¿ò$¿ò(¿òk¿òo¿ò¡¿ò≈¿ò”¿ò◊¿ô¿ô5¿ôw¿ôü¿ôË¿ôÓ¿ö:¿öÖ¿öõ¿ö≠¿öø¿ö–¿ö¸¿õ"¿õ:¿õK¿õä¿õ£¿õÿ¿õÒ¿ú4¿ú5¿úA¿úá¿ú»¿úÃ¿úÕ¿úŸ¿ù¿ùB¿ùh¿ùÑ¿ùä¿ùé¿ùè¿ù‡¿û1¿ûL¿ûR¿ûõ¿û„¿ü+¿üf¿ül¿üΩ¿†¿†-¿†3¿†P¿†n¿†~¿†ô¿†µ¿†Ã¿°¿°1¿°7¿°;¿°<¿°d¿°j¿°£¿°◊¿¢¿¢M¿¢m¿¢à¿¢’¿¢Ì¿¢Û¿¢˜¿¢¯¿£¿£*¿£+¿£v¿£ç¿£ì¿£◊¿£˝¿£˛¿§
¿§.¿§/¿§;¿§`¿§w¿§ô¿§µ¿§Ã¿•¿•M¿•e¿•k¿•o¿•p¿•|¿•∂¿•‘¿•’¿•·¿¶¿¶¿¶A¿¶E¿¶F¿¶R¿¶d¿¶Ø¿ß
¿ß2¿ßU¿ßi¿ßm¿ßn¿ßz¿ßµ¿ß’¿ßŸ¿ß⁄¿ßÊ¿®+¿®V¿®j¿®™¿®ƒ¿®ﬁ¿®ˆ¿©¿©¿©.¿©â¿©ê¿©Â¿©˘¿™¿™-¿™R¿™n¿™õ¿™§¿™´¿™Ø¿™±¿™≤¿™Â¿™È¿´5¿´Å¿´Œ¿¨¿¨h¿¨π¿¨‘¿¨ÿ¿≠'¿≠u¿≠∆¿Æ¿Æ`¿Æ∞¿Æ˛¿ØA¿ØE¿Øã¿Øÿ¿∞$¿∞s¿∞∫¿±¿±<¿±m¿±©¿±™¿±∂¿±‹¿±›¿≤'¿≤7¿≤=¿≤ç¿≤…¿≤œ¿≥ ¿≥N¿≥T¿≥¢¿≥€¿¥*¿¥y¿¥õ¿¥°¿¥∑¿¥Ω¿µ¿µ&¿µ,¿µ:¿µg¿µã¿µë¿µ£¿µ‹¿µ‰¿µÍ¿∂¿∂H¿∂N¿∂y¿∂Ú¿∑-¿∑ä¿∑œ¿∑Í¿∑Ù¿∑˙¿∏¿∏9¿∏[¿∏w¿∏í¿∏≥¿∏€¿π/¿π@¿πO¿π\¿πf¿πn¿πx¿πä¿πê¿π†¿π¶¿πÎ¿∫;¿∫s¿∫ë¿∫Ã¿ª¿ª¿ª¿ªg¿ªÖ¿ªã¿ª€¿º¿º¿ºr¿º†¿º¶¿ºÙ¿Ω-¿Ω|¿ΩÀ¿ΩÌ¿ΩÛ¿æE¿æî¿æö¿æ∞¿æ∂¿æ˝¿ø)¿ø/¿ø=¿øs¿ø†¿ø¶¿ø∏¿¿¿¿¿¿¿¿V¿¿Å¿¿á¿¿¶¿¡¿¡X¿¡ù¿¡ß¿¡≠¿¡ø¿¡Ï¿¬¿¬*¿¬E¿¬f¿¬ê¿¬‰¿¬ı¿√¿√¿√¿√#¿√-¿√?¿√E¿√U¿√[¿√§¿√¯¿ƒ,¿ƒJ¿ƒÖ¿ƒ’¿ƒŸ¿ƒ⁄¿≈*¿≈y¿≈«¿∆¿∆¿∆e¿∆q¿∆w¿∆≈¿«¿«'¿«h¿«ç¿«é¿«›¿»+¿»w¿»ƒ¿…¿…B¿…H¿…ï¿…°¿…ß¿…¯¿ C¿ [¿ û¿ ƒ¿ ≈¿À¿À'¿À-¿Àx¿Àï¿À•¿À ¿À¿Ã¿Ã¿Ã¿Ã¿Ã¿ÃÉ¿Ãì¿Ã¿¿ÃË¿Ã˜¿Õ ¿Õ(¿Õ;¿ÕE¿ÕI¿ÕJ¿ÕV¿Õõ¿Õ∆¿ÕÂ¿Õı¿Œ¿Œf¿ŒÑ¿Œú¿Œ˜¿œ¿œ¿œZ¿œè¿œ≥¿–¿–f¿–±¿–ƒ¿—W¿—j¿— ¿—¸¿“V¿“∞¿“ª¿“º¿“‘¿“Ô¿”¿”¿”8¿”ë¿”û¿”©¿”Í¿”Ú¿‘¿‘¿‘(¿‘>¿‘ù¿‘¶¿‘¨¿‘∞¿‘≤¿‘≥¿‘Ì¿‘Ò¿’@¿’è¿’‡¿÷	¿÷¿÷¿÷"¿÷o¿÷~¿÷Ç¿÷∑¿÷ª¿÷¯¿÷¸¿◊
¿◊¿◊\¿◊ä¿◊Ω¿◊˝¿ÿ¿ÿ+¿ÿE¿ÿV¿ÿ¶¿ÿ‚¿ÿË¿Ÿ¿Ÿ"¿ŸQ¿Ÿf¿Ÿg¿Ÿß¿Ÿ≠¿Ÿ˛¿⁄K¿⁄Q¿⁄à¿⁄™¿⁄º¿⁄Ÿ¿⁄˜¿€¿€¿€"¿€G¿€i¿€o¿€s¿€t¿€‘¿€⁄¿‹¿‹¿‹n¿‹}¿‹À¿›¿›	¿›>¿›Z¿›Å¿›®¿›∂¿›º¿›‹¿›¸¿ﬁ ¿ﬁ¿ﬁ¿ﬁS¿ﬁñ¿ﬁö¿ﬁõ¿ﬁß¿ﬁÁ¿ﬂ¿ﬂ¿ﬂ"¿ﬂP¿ﬂT¿ﬂU¿ﬂa¿ﬂ®¿ﬂ⁄¿‡+¿‡H¿‡ñ¿‡ö¿‡õ¿‡ß¿‡Ï¿·¿·]¿·q¿·í¿·Ø¿·À¿‚&¿‚/¿‚6¿‚:¿‚<¿‚=¿‚ç¿‚‹¿‚Ù¿„"¿„K¿„¨¿„≠¿„Í¿„¿‰;¿‰å¿‰π¿‰ø¿‰¸¿Â¿Â0¿ÂM¿Âk¿Ây¿Â¿Âñ¿Â√¿Â«¿Â»¿Â‘¿Ê¿Ê¿Ê-¿Ê3¿Êf¿Êj¿Êk¿Êw¿Ê™¿Êæ¿Ê–¿Ê÷¿Á	¿Á¿Á¿Á¿ÁM¿Áa¿Ás¿Áy¿Á¨¿Á∞¿Á±¿ÁΩ¿Á¿Ë¿Ë¿Ë¿ËO¿ËS¿ËT¿Ë`¿Ë£¿Ë∑¿Ë ¿Ë–¿È¿È¿È¿È¿ÈC¿ÈD¿ÈP¿È¢¿È¿ÈÙ¿Èı¿Í¿Í¿ÍN¿Íb¿ÍÖ¿Íã¿Íª¿Íø¿Í¿¿ÍÃ¿ÍÂ¿Í˚¿Î¿Î¿Î¿Î'¿Î@¿ÎT¿Îv¿ÎÉ¿Î†¿Î¶¿Î™¿Î´¿Î∑¿Î˝¿Ï@¿ÏD¿ÏE¿ÏQ¿Ïw¿Ïô¿ÏØ¿Ï≥¿Ï¥¿Ï¿¿Ï˜¿Ì¿Ì¿Ì¿ÌA¿ÌE¿ÌF¿ÌR¿Ìí¿Ì¶¿Ì¥¿Ì∫¿ÌË¿ÌÏ¿ÌÌ¿Ì˘¿Ó>¿Ói¿ÓÆ¿Ó≤¿Ó≥¿Óø¿ÓÒ¿Ô
¿Ô,¿Ô2¿ÔP¿Ôp¿Ôá¿Ôﬁ¿ÔÁ¿ÔÓ¿ÔÚ¿ÔÙ¿Ôı¿3¿7¿Ç¿Œ¿Ò¿Òl¿Òî¿Òò¿Ò©¿Ò≠¿Ò˙¿Ú	¿Ú¿ÚB¿ÚF¿ÚÉ¿Úá¿Úï¿Úô¿Ú„¿Û-¿Û`¿Û®¿Û¿¿Û÷¿ÛÒ¿Ù¿ÙR¿Ùé¿Ùî¿Ù±¿Ù–¿Ùˇ¿ı¿ı¿ı[¿ıa¿ı¨¿ı˚¿ˆ¿ˆ¿ˆH¿ˆl¿ˆ¿ˆù¿ˆº¿ˆ ¿ˆ–¿ˆË¿˜¿˜/¿˜5¿˜9¿˜:¿˜ä¿˜†¿˜¶¿˜Â¿˜Î¿¯:¿¯I¿¯ó¿¯—¿¯’¿˘
¿˘&¿˘M¿˘t¿˘Ç¿˘à¿˘®¿˘»¿˘Ã¿˘Õ¿˘Ÿ¿˙¿˙{¿˙¿˙Ä¿˙å¿˙Ã¿˙Û¿˚¿˚¿˚5¿˚9¿˚:¿˚F¿˚ç¿˚ø¿¸¿¸-¿¸{¿¸¿¸Ä¿¸å¿¸—¿¸¸¿˝C¿˝W¿˝x¿˝ï¿˝∞¿˛	¿˛¿˛¿˛¿˛¿˛ ¿˛O¿˛S¿˛§¿˛ı¿ˇ@¿ˇe¿ˇ¶¿ˇ‡¿ˇÊ¿ 0¿ p¿ q¿ §¿ ∏¿ π¿ ≈¿
¿5¿}¿Å¿É¿Ñ¿À¿Á¿7¿Ç¿§¿µ¿‘¿ˇ¿6¿k¿à¿ú¿≥¿÷¿¿D¿E¿î¿æ¿ƒ¿¿_¿Ä¿Ü¿ ¿¿i¿≥¿˛¿¿W¿~¿∞¿Ï¿˙¿ ¿¿;¿?¿@¿v¿°¿ø¿Ë¿	¿	¿	¿	C¿	W¿	Ä¿	¢¿	®¿	¨¿	≠¿
 ¿
=¿
g¿
ú¿
Ω¿
À¿
—¿¿¿F¿h¿n¿r¿s¿≥¿¿=¿~¿™¿∏¿æ¿˚¿ ¿I¿k¿q¿u¿v¿•¿ı¿)¿h¿í¿†¿¶¿·¿¿-¿O¿U¿Y¿Z¿ù¿‰¿$¿c¿y¿ê¿ë¿ù¿‰¿¿¿W¿s¿y¿≈¿Ì¿Û¿¿V¿í¿ö¿“¿¿¿¿B¿x¿Æ¿∂¿Ó¿(¿0¿6¿:¿;¿k¿Æ¿≤¿≥¿Ÿ¿¿A¿`¿{¿ß¿Õ¿¿¿$¿*¿.¿/¿V¿Ä¿Ω¿‹¿˜¿#¿I¿å¿ó¿†¿¶¿™¿´¿œ¿˜¿6¿S¿n¿ö¿¿¿¿¿¿¿!¿"¿H¿p¿Æ¿À¿Ê¿¿8¿{¿Ü¿è¿ï¿ô¿ö¿¶¿Î¿¿B¿b¿è¿Œ¿	¿¿,¿J¿P¿î¿ò¿ö¿õ¿ÿ¿1¿t¿z¿Â¿¿¿G¿c¿à¿´¿Œ¿Ï¿¿$¿B¿`¿|¿™¿‘¿˛¿ (¿ L¿ S¿ W¿ Y¿ Z¿ ©¿ ≈¿ …¿!¿!L¿!Ä¿!œ¿!‹¿"¿"9¿"M¿"N¿"õ¿"Î¿#¿#¿#<¿#Z¿#h¿#n¿#Ö¿#•¿#©¿#™¿#∂¿#˝¿$/¿$r¿$v¿$w¿$É¿$»¿$Û¿%8¿%<¿%>¿%?¿%Ç¿%≈¿%Ÿ¿%›¿&$¿&k¿&ù¿&—¿'¿'Z¿'[¿'g¿'Æ¿'‡¿'Î¿(¿(=¿(A¿(C¿(D¿(v¿(z¿(…¿(Â¿(È¿)0¿)k¿)°¿)Í¿*.¿*L¿*`¿*a¿*¶¿* ¿*›¿*˚¿+¿+(¿+.¿+F¿+f¿+j¿+k¿+w¿+∑¿+Ã¿+⁄¿+‡¿,¿,¿,¿,¿,d¿,è¿,÷¿,⁄¿,‹¿,›¿-¿-¿-h¿-±¿-„¿.¿.¿.¿.#¿.f¿.ú¿.Ï¿/M¿/N¿/Å¿/ú¿/™¿/√¿/›¿/Î¿/Ò¿0¿0%¿0)¿0*¿06¿0}¿0Ø¿0—¿0’¿0÷¿0‚¿1'¿1R¿1ê¿1î¿1ñ¿1ó¿1À¿1œ¿1›¿1·¿2¿2`¿2ë¿2 ¿3)¿3*¿3x¿3ñ¿3ú¿3Ì¿4¿4&¿49¿4W¿4q¿4¿4Ö¿4¢¿4µ¿4‹¿5
¿5¿5&¿5*¿5+¿57¿5b¿5c¿5±¿5ˇ¿6A¿6^¿6_¿6k¿6Ñ¿6ü¿6ø¿6€¿6ﬂ¿6‡¿6Ï¿7#¿7<¿7s¿7Ä¿7Ω¿7œ¿7Â¿8 ¿8¿8?¿8O¿8y¿8å¿8ñ¿8ö¿8õ¿8ß¿8Ï¿9¿9Y¿9]¿9_¿9`¿9Æ¿9·¿9Â¿:1¿:5¿:Ä¿:—¿:Â¿:È¿:˜¿:˚¿;;¿;~¿;±¿;Ï¿<¿<!¿<C¿<d¿<î¿<∆¿<‹¿<Ò¿=¿=7¿=\¿=Ö¿=ö¿=õ¿=·¿>¿>6¿>I¿>g¿>Å¿>è¿>ï¿>®¿>æ¿>¬¿>√¿?¿?E¿?K¿?ú¿?ﬁ¿?‰¿@5¿@Ñ¿@∏¿@Í¿A¿A)¿AO¿A]¿Ac¿AÇ¿Aò¿Aú¿Aù¿AÍ¿B¿B4¿BF¿Bc¿B¿Bç¿Bì¿B®¿Bæ¿B¬¿B√¿C¿C+¿C1¿Cv¿Cª¿D
¿DL¿Dõ¿D‹¿E¿EG¿E\¿Eb¿Eâ¿E∏¿E”¿E˘¿F¿F)¿F/¿FJ¿F`¿Fd¿Fe¿F±¿FÎ¿FÒ¿G3¿G9¿G`¿Gì¿G∞¿Gÿ¿G¸¿H
¿H¿H-¿HC¿HG¿HH¿HT¿Hf¿Hx¿Hå¿Hê¿Hë¿Hù¿H»¿H…¿Hˇ¿I¿IH¿II¿Iô¿Iü¿IÔ¿J ¿Jo¿Jâ¿J´¿JÁ¿JÎ¿JÏ¿J¯¿K>¿K¿K≥¿K«¿KÕ¿L¿LE¿LÉ¿Lù¿L’¿LŸ¿L⁄¿LÊ¿M4¿M]¿MÖ¿Mü¿M€¿N¿N&¿N-¿N1¿N2¿N>¿Nu¿N£¿NØ¿O
¿O_¿O™¿O’¿O‹¿P¿P.¿Pã¿P§¿P¡¿P’¿Q¿Q.¿QN¿QW¿Qd¿Qp¿Qá¿Qµ¿Q‰¿R¿R¿R$¿R2¿RE¿RX¿RÖ¿R„¿S¿S%¿S>¿SW¿S`¿Sg¿Sw¿S°¿S¥¿Sæ¿S¬¿S√¿Sœ¿T¿T?¿TC¿TD¿TP¿Tï¿T¿¿U¿UW¿Uö¿UÙ¿U¯¿U˙¿U˚¿VJ¿VN¿V\¿V`¿V§¿VÈ¿W0¿Ww¿Wâ¿Wè¿W‹¿X¿X¿XC¿Xñ¿X¨¿X¬¿Xˇ¿Y¿Y¿YM¿Yf¿Yr¿Yå¿Y™¿Y∏¿Yæ¿Y’¿YÎ¿YÔ¿Y¿ZD¿Z`¿Zo¿Zâ¿Z§¿Z≤¿Z∏¿ZÃ¿Z‚¿ZÊ¿ZÁ¿["¿[#¿[/¿[[¿[\¿[h¿[ü¿[˘¿\<¿\I¿\j¿\è¿\ñ¿\∂¿\È¿\Ì¿\Ó¿\˙¿]¿],¿]A¿]E¿]G   /RenderProxyBoxRenderProxyBoxMixinHitTestBehavior!RenderProxyBoxWithHitTestBehaviorRenderConstrainedBoxRenderLimitedBoxRenderAspectRatioRenderIntrinsicWidthRenderIntrinsicHeightRenderIgnoreBaselineRenderOpacityRenderAnimatedOpacityMixinRenderAnimatedOpacityRenderShaderMaskRenderBackdropFilterCustomClipperShapeBorderClipper_RenderCustomClipRenderClipRectRenderClipRRectRenderClipRSuperellipseRenderClipOvalRenderClipPath_RenderPhysicalModelBaseRenderPhysicalModelRenderPhysicalShapeDecorationPositionRenderDecoratedBoxRenderTransformRenderFittedBoxRenderFractionalTranslationRenderPointerListenerRenderMouseRegionRenderRepaintBoundaryRenderIgnorePointerRenderOffstageRenderAbsorbPointerRenderMetaDataRenderSemanticsGestureHandlerRenderSemanticsAnnotationsRenderBlockSemanticsRenderMergeSemanticsRenderExcludeSemanticsRenderIndexedSemanticsRenderLeaderLayerRenderFollowerLayerRenderAnnotatedRegion2flutter.rendering.RenderFollowerLayer.leaderAnchorÅ¶For example, when [leaderAnchor] and [followerAnchor] are both
[Alignment.topLeft], this [RenderFollowerLayer] will be top left aligned
with the linked [RenderLeaderLayer]. When [leaderAnchor] is
[Alignment.bottomLeft] and [followerAnchor] is [Alignment.topLeft], this
[RenderFollowerLayer] will be left aligned with the linked
[RenderLeaderLayer], and its top edge will line up with the
[RenderLeaderLayer]'s bottom edge. …≤
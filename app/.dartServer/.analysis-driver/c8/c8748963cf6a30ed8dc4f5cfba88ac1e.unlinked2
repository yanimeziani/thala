Äùindex==hashCodeoffset_offsetspandetachtoStringsetupParentData_layoutChildlayoutInlineChildrenpositionInlineChildrendefaultApplyPaintTransformpaintInlineChildrenhitTestInlineChildrentextScaleFactorscale_placeholderCharacter_textPainter_textIntrinsicsCache_textIntrinsics_cachedAttributedLabels_cachedCombinedSemanticsInfostext
selections_lastSelectableFragments	registrar
_registrar%_updateSelectionRegistrarSubscription%_removeSelectionRegistrarSubscription_getSelectableFragmentsselectableBelongsToParagraph_disposeSelectableFragmentsalwaysNeedsCompositingmarkNeedsLayoutdispose	textAligntextDirectionsoftWrap	_softWrapoverflow	_overflow
textScalermaxLineslocale
strutStyletextWidthBasistextHeightBehaviorselectionColor_selectionColor_getOffsetForPositioncomputeMinIntrinsicWidthcomputeMaxIntrinsicWidthpreferredLineHeight_computeIntrinsicHeightcomputeMinIntrinsicHeightcomputeMaxIntrinsicHeighthitTestSelfhitTestChildren_needsClipping_overflowShaderdebugHasOverflowShadersystemFontsDidChange_placeholderDimensions_adjustMaxWidth_layoutTextWithConstraintscomputeDryLayoutcomputeDistanceToActualBaselinecomputeDryBaselineperformLayoutapplyPaintTransformpaintgetOffsetForCaretgetFullHeightForCaretgetBoxesForSelectiongetPositionForOffsetgetWordBoundary_getLineAtOffset_getTextPositionAbove_getTextPositionBelow_getTextPositionVerticaltextSizedidExceedMaxLines_semanticsInfodescribeSemanticsConfiguration%_childSemanticsConfigurationsDelegate!_createSemanticsConfigForTextInfo_cachedChildNodesassembleSemanticsNode_createShowOnScreenForclearSemanticsdebugDescribeChildrendebugFillPropertiesrange	paragraphfullText_textSelectionStart_textSelectionEnd%_selectableContainsOriginTextBoundary_startHandleLayerLink_endHandleLayerLinkvalue_selectionGeometry_updateSelectionGeometry_getSelectionGeometrydispatchSelectionEventgetSelectedContentgetSelection_didChangeSelection'_updateSelectionStartEdgeByTextBoundary%_updateSelectionEndEdgeByTextBoundary"_updateSelectionEdgeByTextBoundary_updateSelectionEdge6_updateSelectionStartEdgeByMultiSelectableTextBoundary4_updateSelectionEndEdgeByMultiSelectableTextBoundary_placeholderLengthC_updateSelectionStartEdgeAtPlaceholderByMultiSelectableTextBoundaryA_updateSelectionEndEdgeAtPlaceholderByMultiSelectableTextBoundary1_updateSelectionEdgeByMultiSelectableTextBoundary_closestTextBoundary_isPlaceholder_getOriginParagraph_getParagraphContainingPosition_boundingBoxesContains_clampTextPosition_setSelectionPosition_handleClearSelection_handleSelectAll_handleSelectTextBoundary
_intersect&_handleSelectMultiFragmentTextBoundary_adjustTextBoundaryAtPosition_handleSelectWord_getWordBoundaryAtPosition_handleSelectParagraph_getPositionInParagraph_getParagraphBoundaryAtPosition&_getClampedParagraphBoundaryAtPosition#_handleDirectionallyExtendSelection _handleGranularlyExtendSelection"_moveBeyondTextBoundaryAtDirection_moveToTextBoundaryAtDirection_handleVerticalMovement!_positionIsWithinCurrentSelection_compareTextPositionsgetTransformTopushHandleLayers_cachedBoundingBoxesboundingBoxes_cachedRect_rectdidChangeParagraphLayoutcontentLengthsizegetLineAtOffsetgetTextPositionAbovegetTextPositionBelow
_TextBoundaryRecord_TextBoundaryAtPosition_TextBoundaryAtPositionInText
_kEllipsis PlaceholderSpanIndexSemanticsTagTextParentData%RenderInlineChildrenContainerDefaults_UnspecifiedTextScalerRenderParagraph_SelectableFragmentÅ∫BoxHeightStyleBoxWidthStyleGradientLineMetricsPlaceholderAlignmentShaderTextBoxTextHeightBehaviorTextPositionStringRichText	immutableSemanticsTagintoverrideboolObjectindexhashRenderEditable
WidgetSpan
ParentDataContainerParentDataMixin	RenderBoxOffsetPlaceholderSpanParentDataWidgetvoiddetachContainerRenderObjectMixinlayoutInlineChildrenTextPainterpositionInlineChildrenapplyPaintTransformdefaultApplyPaintTransformpaintInlineChildrenpainthitTestInlineChildrenhitTestChildrenextractFromInlineSpan
InlineSpan
parentDataPlaceholderDimensionsBoxConstraintsChildLayouterChildBaselineGetterspanemptysize	alignmentbaselinebaselineOffsetaboveBaselinebelowBaselinebottommiddletopsetPlaceholderDimensions	protectedListdoublemaxWidth
firstChildchild
childAfter_layoutChild
childCountinlinePlaceholderBoxeslength_offsetboxleftoffsetMatrix4setZerotranslateByDoubledxdyPaintingContext
paintChildBoxHitTestResultaddWithPaintOffsetpositionhitTesttransformed
TextScalerNeverUnimplementedError"RelayoutWhenSystemFontsChangeMixin	TextAlignstartTextDirectionTextOverflowclip
DeprecatedLocale
StrutStyleTextWidthBasisparentColorSelectionRegistrardebugAssertIsValid	identicaltext	textAligntextDirection
textScalerlinearmaxLinesellipsislocale
strutStyletextWidthBasistextHeightBehavioraddAllchildren	registrarfromCharCodeplaceholderCodeUnitAttributedStringInlineSpanSemanticsInformation	compareToRenderComparisonmetadatamarkNeedsSemanticsUpdatemarkNeedsPaintlayoutvisibleForTestingTextSelectionfragment_textSelectionStart_textSelectionEndadd
baseOffsetextentOffsetforEach
isNotEmptymarkNeedsCompositingBitsUpdateremovetoPlainTextincludeSemanticsLabelsindexOf	paragraphrange	TextRangeendfullText
SelectablecontainsdisposeelementdidChangeParagraphLayoutmarkNeedsLayoutjustifyltrrtltextScaleFactoranyvaluehasSelectionRectzeroinfinitySizegetMinIntrinsicWidthChildLayoutHelpergetDryBaselineminIntrinsicWidthgetMaxIntrinsicWidthmaxIntrinsicWidthpreferredLineHeightdryLayoutChildminWidthheight	GlyphInfogetClosestGlyphForOffsetgraphemeClusterLayoutBoundsgetSpanForPositiongraphemeClusterCodeUnitRangeHitTestTargetHitTestEntrysystemFontsDidChange	constrainTextBaselinedebugNeedsLayoutconstraintscomputeDistanceToActualBaseline
alphabeticlayoutChildgetBaselinedidExceedMaxLineswidthvisiblefadeTextSpanstylefadeSizePainter	fadeStartfadeEnddebugRepaintTextRainbowEnabledPaintcolordebugCurrentRepaintColortoColorcanvasdrawRect	saveLayersaveclipRect	translate	blendMode	BlendModemodulateshaderrestoregetOffsetForCaretgetFullHeightForCaretboxHeightStyleboxWidthStyletightgetBoxesForSelectiongetPositionForOffsetgetWordBoundarygetLineBoundaryRenderObjectSemanticsConfigurationdescribeSemanticsConfigurationgetSemanticsInformationinfo
recognizersemanticsIdentifierisPlaceholderexplicitChildNodesisSemanticBoundarychildConfigurationsDelegateStringBufferStringAttributesemanticsLabelstringAttributesinfoAttributecopywritetoString
attributesattributedLabel"ChildSemanticsConfigurationsResult)ChildSemanticsConfigurationsResultBuildercombineSemanticsInfomarkAsMergeUptagsChildrenWithbuildrequiresOwnNodeMapKeySemanticsNodeIterable	elementAtisTaggedisEmptyfirsttoRect	directionskipexpandToIncludetextBoxfromLTWHmaxmin	maxHeightfromLTRBfloorToDoublerightceilToDoublesortKeyOrdinalSortKey
identifierTapGestureRecognizerVoidCallbackDoubleTapGestureRecognizerhandleronTapisLinkLongPressGestureRecognizerGestureLongPressCallbackonLongPressruntimeTypeparentPaintClipRect	intersectisHiddenkeys	UniqueKeykeyshowOnScreen
updateWithconfigrectchildrenInInversePaintOrder
descendantclearSemanticsDiagnosticsNodetoDiagnosticsNodenameDiagnosticsTreeStyle
transitionDiagnosticPropertiesBuilderdebugFillPropertiesEnumPropertyFlagPropertyifTrueifFalseshowNameDiagnosticsPropertydefaultValue	noScalingIntPropertyifNullDiagnosticableChangeNotifierTextLayoutMetricsisValidisCollapsedisNormalized kFlutterMemoryAllocationsEnabledmaybeDispatchObjectCreation	LayerLinkSelectionGeometrynotifyListenersstatusSelectionStatusnone
hasContent_getOffsetForPositionTextSelectionHandleType	collapsedstartSelectionPointSelectionPointlocalPosition
lineHeight_textPainter
handleTypestartSelectionHandleTypeendSelectionPointendSelectionHandleTypeselectionRectsuncollapsedSelectionResultSelectionEventtypeSelectionEventTypestartEdgeUpdateendEdgeUpdateSelectionEdgeUpdateEventTextGranularitygranularity	character
edgeUpdateglobalPositionisEndwordgetTextBoundarygetClampedTextBoundarydocumentlineclear	selectAll
selectWordSelectWordSelectionEventselectParagraphSelectParagraphSelectionEventabsorbnextgranularlyExtendSelectionGranularlyExtendSelectionEventforwarddirectionallyExtendSelection!DirectionallyExtendSelectionEventSelectedContent	plainText	substringSelectedContentRangestartOffset	endOffsetboundaryStartboundaryEndgetTransformToinvertMatrixUtilstransformPointSelectionUtilsgetResultBasedOnRectadjustDragOffsetpreviousaffinity
textInsidepaintBoundsabs_lastSelectableFragments%_selectableContainsOriginTextBoundaryTextAffinity
downstreamupstreamglobalToLocal
centerLeftParagraphBoundarygetLeadingTextBoundaryAtgetTrailingTextBoundaryAtSelectionExtendDirectionpreviousLinebackwardnextLineisNaNMapEntrytargetedEdge(horizontalBaselineInParagraphCoordinatesbelow
moveResult edgeOffsetInParagraphCoordinates$baselineOffsetInParagraphCoordinatesCharacterBoundaryTextBoundarywordBoundariesmoveByWordBoundarytextBoundaryLineBoundaryDocumentBoundarycharacterBoundarycomputeLineMetricslineMetrics
lineNumberattached
fromPointsselectionColorPaintingStylefillshift	pushLayerLeaderLayerlink_getLineAtOffsetclamp_getTextPositionAbove_getTextPositionBelowSemanticsTag
ParentDataContainerParentDataMixin	RenderBoxContainerRenderObjectMixin
TextScaler%RenderInlineChildrenContainerDefaults"RelayoutWhenSystemFontsChangeMixin
SelectableDiagnosticableChangeNotifierTextLayoutMetrics«[ïâ¥€éä·∆r7/    Å   ÅÅmathÅ	dart:mathÅ=ÅÒBoxHeightStyleBoxWidthStyleGradientLineMetricsPlaceholderAlignmentShaderTextBoxTextHeightBehavior Å   Å3Å6uiÅ6dart:ui  Åı   package:flutter/foundation.dart  Ç   package:flutter/gestures.dart  ÇG   package:flutter/semantics.dart  Çp   package:flutter/services.dart  Çô   box.dart  Ç¨   
debug.dart  Ç¡   
layer.dart  Ç÷   layout_helper.dart  ÇÛ   object.dart  É	   selection.dart¿ xÍ ¿8Eé <ÄÜÄ§Ä•Ä‘ÄÿÄ¯ÅÅÅÅ/Å9ÅBÅZÅqÅÉÅòÅ∂Å∆Å◊ÅÛÅÙÇÇFÇoÇóÇòÇ´Ç¿Ç’ÇÚÉÉ!É"ÉWÉØÉ∞ÑÑÑoÑpÑƒÑÖÖ^Ö_ÖÉÖÑÖÕÖÖÙÜCÜbÜmÜ´Ü·ÜÁá5áNáÉáºáΩá⁄áÌáÓá˙ààkàoàpà|à»à àÀââHâõâÎâÒäBäêäßä»ä€ä‹ãã!ãoãöã≥ã¥ã¿ã“ã„ã˜ååååå|å~åå…ççVçZç©ç˘éIécégéïéôéÍè9èäè€êêêdê{êê¡êÊêÍë>ëBëïë¨ë∞ëæë¬íí>íjí¥í¿íÍììDìJìNìOì|ìëì∂ì’ì˙î îKî~îòî∞î÷î˜ï/ïVï{ï±ïËññOññ≤ñÒóó*óJó[ójówó{ó|óŒó‘ò%òmòsò¬ôôZôôÖô–öö$ö4ö:öâöƒö—õõõ9õcõiõ¥õÿú,úuú|úÄúÅú–ú‰úÍù9ùÜù◊ûû û0û6ûÑû§û±ûÈüü6üQüaürü’ü‡üü¯†I†É†§†™†∆°°<°]°c°g°h°∏°”°Ÿ¢#¢o¢|¢ƒ££G£a£|£â£»£Œ£“£”£Û£˘§H§[§h§≠§–§Ï•>•x•ô•©•±•Ë¶	¶¶¶¶D¶J¶ô¶¨¶πßß%ßAßìßÕßÓ®®®@®]®y®ª®ˆ®ˇ©©'©/©P©V©h©l©n©o©°©√©œ™
™™™U™W™X™è™∑™¿™ˇ´.´[´Ñ´ä´⁄¨¨!¨8¨c¨ç¨ß¨÷¨Á≠≠w≠≥≠π≠€ÆÆ*Æ>ÆZÆïÆƒÆ„Æ˛Ø!ØKØ|ØãØÂ∞E∞O∞l∞â∞≤∞’∞Í±	±0±r±§±ø±‹≤&≤?≤`≤â≤∫≤≈≤€≤˚≤ˇ≥ ≥C≥l≥q≥r≥î≥ï≥·¥3¥v¥{¥¬¥„µµ,µ`µÅµ¨µﬂ∂∂5∂^∂É∂∞∂Â∑#∑'∑(∑[∑\∑£∑§∑ø∑Ï∏∏>∏e∏u∏õ∏æ∏Ïππ3πVπ~π¨π∆πÍ∫∫1∫Q∫y∫ß∫¬∫ÛªªKªQªUªVªÜªåª⁄ªÈª˛º%ºQºwº}º∏ΩΩ\ΩqΩäΩ»ææææ&æ,æ@æDæEæíæ‚æ˛ø5ø6øÉø∂øÿ¿ @¿ @$¿ @2¿ @8¿ @e¿ @à¿ @†¿ @Õ¿ @—¿ @“¿ A¿ A!¿ A/¿ A5¿ Aq¿ A©¿ AŸ¿ B¿ B¿ B¿ B¿ B=¿ B¿ Bç¿ Bì¿ BŒ¿ B“¿ B”¿ C¿ CY¿ Cü¿ C≤¿ CŸ¿ D¿ D4¿ DM¿ Do¿ Dy¿ Dç¿ D¨¿ D…¿ Dˇ¿ E ¿ E-¿ E8¿ EM¿ EU¿ Eg¿ Em¿ EÄ¿ EÑ¿ EÖ¿ E…¿ E‚¿ EË¿ F1¿ Fi¿ F¶¿ F“¿ FÊ¿ FÏ¿ G'¿ G+¿ G,¿ GS¿ G¿ Gç¿ Gì¿ Gﬂ¿ G˘¿ Gˇ¿ H$¿ H(¿ H)¿ H5¿ Hâ¿ Hä¿ Hñ¿ H±¿ Hÿ¿ I#¿ I*¿ IG¿ IK¿ IL¿ IX¿ Ik¿ Iò¿ Iª¿ I◊¿ I¸¿ J¿ J¿ J¿ JI¿ J~¿ J°¿ JÃ¿ J⁄¿ J‡¿ K¿ K¿ K¿ K¿ KE¿ KK¿ Ké¿ Kœ¿ K’¿ L#¿ Lr¿ L¿¿ M	¿ MY¿ Mi¿ M´¿ M÷¿ N¿ N¿ N¿ NA¿ NX¿ N\¿ N]¿ Nñ¿ Nú¿ NÊ¿ O¿ O¿ O[¿ Oj¿ Oå¿ Oû¿ Oª¿ OŸ¿ OÁ¿ OÌ¿ P¿ P¿ P¿ P ¿ PM¿ Pw¿ Pë¿ P∂¿ P‘¿ P‚¿ PË¿ Pˇ¿ QO¿ Qf¿ Qj¿ Qk¿ Q±¿ QÕ¿ Q”¿ R¿ R¿ Rb¿ RÅ¿ Rê¿ RØ¿ S¿ SV¿ SZ¿ Sò¿ Sß¿ S∆¿ T3¿ Tm¿ Tq¿ Tó¿ T¬¿ T∆¿ T«¿ T˛¿ U6¿ U[¿ Uá¿ Uï¿ Uõ¿ U¿¿ U‹¿ UÛ¿ U˜¿ U¯¿ VD¿ Vè¿ V«¿ Vı¿ Vˆ¿ WC¿ WO¿ Wl¿ Wî¿ Wæ¿ WÃ¿ W“¿ Wı¿ X¿ X(¿ X,¿ X-¿ Xo¿ Xã¿ Xë¿ X›¿ Y'¿ Yr¿ YØ¿ Y‹¿ Y›¿ Y˙¿ Z¿ Z@¿ ZN¿ ZT¿ Zu¿ Zë¿ Z®¿ Z¨¿ Z≠¿ Z‰¿ [¿ [¿ [;¿ [a¿ [ç¿ [õ¿ [°¿ [∆¿ [‚¿ [˘¿ [˝¿ [˛¿ \9¿ \}¿ \™¿ \⁄¿ \Ë¿ \Ó¿ ]¿ ]3¿ ]J¿ ]N¿ ]O¿ ]y¿ ]Õ¿ ^¿ ^:¿ ^H¿ ^N¿ ^{¿ ^ó¿ ^Æ¿ ^≤¿ ^≥¿ ^Á¿ ^Ì¿ _8¿ _h¿ _Ç¿ _ß¿ _À¿ _Ÿ¿ _ﬂ¿ _¸¿ `#¿ `l¿ `y¿ `ä¿ `¢¿ `®¿ `¨¿ `≠¿ `Â¿ aE¿ aI¿ aJ¿ aV¿ aâ¿ a›¿ aÙ¿ b+¿ bm¿ bï¿ bú¿ b∏¿ bÙ¿ c
¿ c&¿ c*¿ c+¿ c7¿ cj¿ cæ¿ c’¿ d¿ dh¿ dü¿ d·¿ e	¿ e¿ e,¿ eh¿ e~¿ eö¿ eû¿ eü¿ e˝¿ f¿ f9¿ fN¿ fî¿ fï¿ f∆¿ f‚¿ g¿ g*¿ g?¿ go¿ gü¿ gÆ¿ g∫¿ h¿ h¿ h¿ h¿ h#¿ hV¿ hÅ¿ hÖ¿ hÜ¿ hí¿ h≈¿ h¿ hÙ¿ hı¿ i¿ i.¿ i/¿ i;¿ iH¿ iñ¿ i‰¿ j0¿ jÅ¿ j–¿ k¿ k>¿ k^¿ k¨¿ k›¿ l)¿ l5¿ lE¿ l\¿ lÅ¿ l©¿ læ¿ lÃ¿ m¿ m
¿ m¿ m¿ m.¿ mL¿ mM¿ mú¿ m™¿ m∞¿ mÎ¿ n ¿ n>¿ n?¿ nK¿ nk¿ nç¿ n±¿ nµ¿ n∂¿ o¿ o¿ oV¿ o¶¿ oÌ¿ p$¿ p%¿ pQ¿ p®¿ p¨¿ p≠¿ pÌ¿ p˛¿ q7¿ qò¿ qú¿ qù¿ q©¿ q∂¿ qˆ¿ r¿ r%¿ rO¿ ru¿ rù¿ r—¿ s¿ s¿ s(¿ s@¿ sp¿ s±¿ s¬¿ s’¿ s˝¿ t¿ t¿ t¿ tP¿ to¿ tù¿ t ¿ u¿ u]¿ u™¿ u˜¿ v=¿ vw¿ v…¿ vÕ¿ vŒ¿ v⁄¿ w5¿ wc¿ ww¿ wô¿ w∑¿ w◊¿ x¿ x/¿ x:¿ xB¿ x£¿ x¯¿ x¸¿ x˝¿ y	¿ y"¿ yI¿ yî¿ yõ¿ y‘¿ z¿ z#¿ zH¿ zm¿ zt¿ z°¿ z„¿ z‰¿ {¿ {=¿ {>¿ {¢¿ {·¿ |0¿ |¿ |Œ¿ }¿ }^¿ }®¿ }≈¿ }‡¿ ~¿ ~%¿ ~G¿ ~g¿ ~ã¿ ~¨¿ ~Œ¿ ~Ó¿ ¿ J¿ ó¿ ¡¿ Â¿ Ä¿ Ä¿ Ä:¿ Ää¿ ÄÀ¿ Å ¿ Å/¿ Åa¿ Åá¿ Å´¿ ÅÙ¿ Ç¿ Ç¿ ÇF¿ Çì¿ Ç≈¿ ÇÎ¿ É¿ ÉX¿ Ég¿ És¿ Éò¿ É†¿ É≠¿ ÉÀ¿ ÉÈ¿ ÉÔ¿ ÉÛ¿ ÉÙ¿ Ñ ¿ ÑA¿ Ñs¿ Ñw¿ Ñx¿ ÑÑ¿ Ñª¿ Ö¿ Ö]¿ Öà¿ Öµ¿ Ö≈¿ ÖÒ¿ ÜB¿ Üy¿ ÜÅ¿ Üî¿ Üû¿ Üü¿ Üπ¿ Ü‚¿ á¿ áU¿ áí¿ á≈¿ á‘¿ áÛ¿ á˚¿ à"¿ à(¿ à)¿ àU¿ à£¿ àÃ¿ à‘¿ à⁄¿ à€¿ â¿ â¿ â6¿ â7¿ âQ¿ âv¿ âÆ¿ â“¿ â˝¿ ä#¿ ä_¿ äg¿ äá¿ äç¿ äë¿ äí¿ ä»¿ äŒ¿ äÔ¿ ã8¿ ãW¿ ãÑ¿ ã…¿ ãÕ¿ ãŒ¿ å¿ å¿ å7¿ åo¿ åé¿ åª¿ åˇ¿ ç¿ ç¿ çB¿ çH¿ çó¿ ç◊¿ é"¿ é(¿ éw¿ é∆¿ é˛¿ è¿ è%¿ è+¿ è;¿ èA¿ èè¿ èÆ¿ è◊¿ èˆ¿ ê6¿ ês¿ êz¿ êô¿ ê∆¿ êÙ¿ ë¿ ë+¿ ëO¿ ëV¿ ëZ¿ ë[¿ ë¢¿ ë®¿ ë…¿ ë˛¿ í¿ íJ¿ íÄ¿ íÑ¿ íÖ¿ í“¿ ì#¿ ìq¿ ìô¿ ìü¿ ìÓ¿ î,¿ î2¿ îS¿ îà¿ îß¿ î‘¿ ï¿ ï¿ ï¿ ïk¿ ïl¿ ï™¿ ïı¿ ñ>¿ ñ|¿ ñª¿ ñø¿ ñ¿¿ ñ˛¿ óH¿ óë¿ óŒ¿ ò¿ ò¿ ò¿ òj¿ òæ¿ ô¿ ôX¿ ô\¿ ô]¿ ôç¿ ôì¿ ô‰¿ ö4¿ öZ¿ ö`¿ ö´¿ ö±¿ ö“¿ öË¿ õ¿ õ%¿ õ)¿ õ*¿ õj¿ õp¿ õ»¿ õŒ¿ õÔ¿ ú¿ ú-¿ úX¿ ú\¿ ú]¿ úû¿ úΩ¿ úı¿ úˆ¿ ù¿ ùI¿ ù{¿ ù∞¿ ù›¿ û¿ ûY¿ û¢¿ ûÕ¿ û‹¿ û‰¿ üE¿ üK¿ üL¿ ür¿ üö¿ ü¬¿ üı¿ †G¿ †T¿ †Å¿ †µ¿ †Õ¿ °¿ °`¿ °°¿ °¿ ¢1¿ ¢M¿ ¢o¿ ¢ë¿ ¢»¿ ¢˚¿ £¿ £¿ £.¿ £:¿ £Y¿ £{¿ £Ö¿ £ª¿ §¿ §¿ §¿ §Q¿ §}¿ §É¿ §á¿ §à¿ §‘¿ •¿ •	¿ •G¿ •|¿ •ö¿ •π¿ •‡¿ ¶¿ ¶_¿ ¶∑¿ ¶◊¿ ¶˚¿ ß¿ ßt¿ ßÅ¿ ß´¿ ßµ¿ ®¿ ®@¿ ®~¿ ®¿¿ ®—¿ ©¿ ©5¿ ©?¿ ©^¿ ©m¿ ©ä¿ ©í¿ ©ò¿ ©ô¿ ©√¿ ©„¿ ™ ¿ ™T¿ ™]¿ ™c¿ ™¿ ™É¿ ™Ñ¿ ™¿¿ ™Ì¿ ´¿ ´¿ ´.¿ ´ë¿ ´¡¿ ´˛¿ ´ˇ¿ ¨*¿ ¨>¿ ¨q¿ ¨~¿ ¨∞¿ ¨⁄¿ ≠¿ ≠;¿ ≠D¿ ≠n¿ ≠t¿ ≠ò¿ ≠æ¿ ≠È¿ ≠Ì¿ ≠Ó¿ Æ:¿ Æâ¿ Æ»¿ ÆÚ¿ Ø ¿ Ø!¿ Ø-¿ ØK¿ Øc¿ ØÜ¿ Ø¨¿ Ø≤¿ ØÙ¿ ∞3¿ ∞g¿ ∞}¿ ∞ó¿ ∞™¿ ∞»¿ ∞‡¿ ±¿ ±M¿ ±ö¿ ±Ú¿ ≤'¿ ≤B¿ ≤r¿ ≤{¿ ≤ú¿ ≤ù¿ ≤Ω¿ ≥¿ ≥R¿ ≥Å¿ ≥ñ¿ ≥Ω¿ ¥¿ ¥X¿ ¥™¿ ¥˜¿ µ"¿ µJ¿ µV¿ µq¿ µ{¿ µü¿ µæ¿ µÕ¿ ∂¿ ∂V¿ ∂s¿ ∂á¿ ∂ë¿ ∂ª¿ ∂Ì¿ ∑'¿ ∑`¿ ∑ê¿ ∑ö¿ ∑›¿ ∏!¿ ∏?¿ ∏c¿ ∏Ü¿ ∏º¿ ∏Ù¿ ∏ˇ¿ πM¿ πû¿ π√¿ πÓ¿ ∫¿ ∫C¿ ∫o¿ ∫z¿ ∫»¿ ∫¯¿ ª%¿ ª]¿ ªç¿ ªª¿ ªÍ¿ ª˜¿ º¿ ºc¿ º∏¿ º€¿ Ω¿ Ω3¿ ΩA¿ Ω¶¿ ΩÕ¿ æ¿ æ¿ æ'¿ æ:¿ æM¿ æú¿ æ¶¿ æ÷¿ ø)¿ øw¿ øÅ¿ øß¿ ø›¿ ¿-¿ ¿>¿ ¿k¿ ¿ƒ¿ ¿Œ¿ ¿ﬂ¿ ¡¿ ¡-¿ ¡^¿ ¡Å¿ ¡â¿ ¡è¿ ¡Õ¿ ¡¯¿ ¬¿ ¬¿ ¬;¿ ¬ä¿ ¬é¿ ¬è¿ ¬¡¿ ¬—¿ √¿ √C¿ √J¿ √N¿ √O¿ √[¿ √u¿ √ë¿ √Ø¿ √≥¿ √¥¿ √¿¿ √Ú¿ ƒ¿ ƒd¿ ƒk¿ ƒo¿ ƒp¿ ƒ|¿ ƒ¡¿ ƒÏ¿ ≈1¿ ≈Ç¿ ≈ñ¿ ≈™¿ ≈æ¿ ≈◊¿ ∆ ¿ ∆@¿ ∆X¿ ∆a¿ ∆h¿ ∆Æ¿ ∆¬¿ «'¿ «.¿ «Ö¿ «—¿ «’¿ «◊¿ «ÿ¿ »	¿ »¿ »\¿ »¢¿ »Ú¿ …=¿ …M¿ …g¿ …õ¿ …æ¿  ¿  f¿  í¿   ¿  –¿ À¿ À¿ À¿ À ¿ ÀC¿ À\¿ À]¿ ÀÇ¿ À•¿ À¶¿ À‹¿ À›¿ Ã¿ Ã#¿ Ã$¿ Ã0¿ Ãe¿ Ãí¿ Ã∂¿ Ãˆ¿ Ã˜¿ Õ!¿ Õ/¿ Õ5¿ ÕX¿ Õo¿ Õs¿ Õt¿ Õ¢¿ ÕÊ¿ Œ<¿ ŒB¿ ŒC¿ Œ¿ Œ∑¿ ŒÚ¿ œH¿ œt¿ œ{¿ œÕ¿ œ˘¿ –H¿ –£¿ –÷¿ –¯¿ —¿ —!¿ —Q¿ —†¿ —Ã¿ —“¿ “¿ “"¿ “Z¿ “ê¿ “≈¿ ”
¿ ”e¿ ”ª¿ ‘¿ ‘¿ ‘7¿ ‘b¿ ‘ú¿ ‘‹¿ ’
¿ ’¿ ’<¿ ’t¿ ’¥¿ ’‡¿ ’È¿ ÷¿ ÷k¿ ÷É¿ ÷ä¿ ÷é¿ ÷è¿ ÷õ¿ ÷‹¿ ◊¿ ◊I¿ ◊ã¿ ◊•¿ ◊‘¿ ÿ¿ ÿX¿ ÿó¿ ÿò¿ ÿ∑¿ ÿ·¿ Ÿ¿ Ÿ5¿ Ÿ¿ Ÿé¿ Ÿ≥¿ ŸÏ¿ ⁄¿ ⁄_¿ ⁄ö¿ ⁄©¿ ⁄”¿ €¿ €D¿ €é¿ €Œ¿ ‹¿ ‹+¿ ‹T¿ ‹y¿ ‹◊¿ ‹·¿ ›¿ ›0¿ ›Y¿ ›~¿ ›®¿ ›ˇ¿ ﬁ>¿ ﬁm¿ ﬁ´¿ ﬁﬂ¿ ﬂ¿ ﬂ#¿ ﬂL¿ ﬂÑ¿ ﬂï¿ ﬂ‡¿ ﬂÍ¿ ‡#¿ ‡l¿ ‡°¿ ‡‘¿ ·¿ ·,¿ ·]¿ ·h¿ ·§¿ ·Û¿ ‚+¿ ‚a¿ ‚å¿ ‚∫¿ ‚Ï¿ ‚˜¿ ‚˝¿ ‚˛¿ „7¿ „l¿ „â¿ „è¿ „¢¿ „¶¿ „ß¿ „≥¿ „›¿ ‰!¿ ‰4¿ ‰:¿ ‰í¿ ‰Ë¿ Â/¿ Â3¿ Â4¿ Â@¿ Âi¿ Â≠¿ Â¿¿ Â∆¿ ÂÁ¿ Ê¿ ÊC¿ ÊJ¿ ÊN¿ ÊO¿ Ên¿ Êé¿ ÊÆ¿ Ê≤¿ Ê≥¿ ÊÎ¿ Á¿ Á?¿ ÁZ¿ ÁÑ¿ Á¨¿ Á≤¿ Á‘¿ ÁÙ¿ Ë¿ Ë>¿ Ëx¿ ËÅ¿ Ë¥¿ Ë‡¿ È
¿ È^¿ Èá¿ È–¿ Èı¿ Í¿ Íj¿ Íâ¿ Í»¿ Î¿ Î¿ ÎK¿ ÎW¿ Î™¿ Î¸¿ ÏA¿ Ï†¿ Ï≤¿ Ï˜¿ Ì:¿ ÌG¿ Ìh¿ Ì∫¿ ÌÍ¿ Ó¿ Ó6¿ ÓC¿ ÓT¿ Óì¿ ÓÃ¿ Ô¿ ÔI¿ Ô\¿ Ô∏¿ ÔÌ¿ Ô˘¿ ¿ ¿ >¿ é¿ Í¿ Ò)¿ Òb¿ Òu¿ Ò¨¿ Ò∏¿ Ò…¿ Ú¿ ÚQ¿ Ú[¿ Úc¿ Úp¿ Ú√¿ Û.¿ Ûk¿ Ûû¿ Û ¿ ÛÙ¿ ÙE¿ Ùï¿ Ùÿ¿ ı,¿ ıU¿ ıû¿ ı√¿ ı‚¿ ˆ8¿ ˆ9¿ ˆX¿ ˆ∑¿ ˆ…¿ ˜¿ ˜Q¿ ˜^¿ ˜¿ ˜‚¿ ˜˚¿ ¯¿ ¯¿ ¯¿ ¯ ¿ ¯G¿ ¯K¿ ¯L¿ ¯Ç¿ ¯©¿ ¯÷¿ ¯Ò¿ ˘¿ ˘C¿ ˘I¿ ˘k¿ ˘ã¿ ˘ô¿ ˘’¿ ˙¿ ˙¿ ˙K¿ ˙w¿ ˙°¿ ˙˜¿ ˚ ¿ ˚i¿ ˚é¿ ˚≠¿ ¸¿ ¸$¿ ¸e¿ ¸û¿ ¸±¿ ¸Ë¿ ¸Ù¿ ˝G¿ ˝ô¿ ˝ﬁ¿ ˛?¿ ˛Q¿ ˛ñ¿ ˛Ÿ¿ ˛Ê¿ ˇ¿ ˇ[¿ ˇã¿ ˇæ¿ ˇÿ¿ ˇÂ¿ ˇˆ¿ 7¿ p¿ ∏¿ Ô¿¿^¿ë¿ù¿ß¿∂¿‰¿4¿é¿œ¿¿¿R¿^¿o¿¨¿ı¿ˇ¿¿¿g¿“¿¿B¿n¿ò¿È¿9¿|¿“¿˚¿D¿i¿¡¿›¿¸¿]¿o¿¥¿˜¿	¿	%¿	à¿	¢¿	Ø¿	π¿	¡¿	«¿	Ó¿	Ú¿	Û¿
)¿
F¿
_¿
ï¿
ú¿
Ó¿F¿¶¿Ï¿.¿/¿^¿ú¿¥¿¿%¿m¿s¿∂¿√¿ÿ¿¿	¿
¿\¿Æ¿ˇ¿Q¿u¿ª¿ﬂ¿Ô¿¿K¿ç¿À¿¿j¿…¿#¿K¿f¿l¿®¿¥¿Á¿¿"¿:¿`¿Ñ¿í¿«¿„¿¿¿@¿d¿s¿z¿{¿¥¿‚¿¿¿¿<¿c¿i¿π¿	¿[¿u¿ª¿ø¿¿¿¿F¿Ñ¿ú¿Ù¿¿U¿[¿û¿´¿¿¿Í¿Ò¿Ú¿(¿^¿e¿ò¿¿¿„¿È¿¿:¿@¿ê¿‡¿2¿L¿í¿ñ¿ó¿‰¿*¿z¿é¿ì¿„¿-¿}¿Ç¿—¿˙¿E¿x¿ú¿∑¿·¿	¿¿-¿^¿à¿∞¿  ¿ ¿ v¿ ù¿ Ô¿! ¿!|¿! ¿"¿"g¿"∑¿"Ë¿#0¿#K¿#i¿#§¿#ﬂ¿#Ò¿$¿$+¿$6¿$a¿$í¿$∆¿$˝¿%X¿%Ö¿%¬¿%ˆ¿&1¿&B¿&ú¿&˘¿'¿'"¿'C¿'c¿'«¿'÷¿'Ô¿'¸¿(¿(W¿(Ñ¿( ¿)¿)N¿)u¿)¿)ƒ¿*¿*2¿*<¿*c¿*«¿*Ô¿*˚¿+^¿+ã¿+ó¿+®¿,¿,0¿,<¿,õ¿,ƒ¿,–¿,⁄¿,È¿-7¿-w¿-¬¿.¿.^¿.≠¿.˝¿/.¿/v¿/ë¿/Ø¿/Í¿0%¿07¿0]¿0q¿0|¿0≈¿1¿10¿1:¿1Ç¿1¬¿1È¿1Û¿2:¿2û¿2ﬁ¿3¿3¿3Y¿3ª¿3˚¿4&¿40¿48¿4E¿4î¿4ﬁ¿52¿5i¿5í¿5Ô¿60¿6E¿6M¿6w¿6”¿6˙¿7V¿7î¿7“¿8 ¿8M¿8í¿8’¿9'¿9R¿9\¿9ü¿9‡¿:0¿:W¿:a¿:Ç¿:∆¿;+¿;S¿;_¿;¢¿;Ù¿<¿<)¿<:¿<ü¿<Ê¿=¿=¿=g¿=è¿=õ¿=•¿=≠¿=≥¿=ƒ¿=»¿=…¿>¿>Z¿>™¿>æ¿>√¿?¿?[¿?´¿?∞¿@¿@*¿@s¿@¶¿@ ¿@Â¿A¿A7¿A=¿AZ¿Aã¿Aµ¿A›¿B-¿BA¿B£¿B ¿C¿CM¿C©¿C˜¿DI¿Dõ¿DÎ¿E¿Ed¿E¿E¶¿Eƒ¿F¿F>¿FQ¿Fe¿Fp¿Fõ¿FÃ¿G¿G7¿Gí¿Gø¿G¸¿H0¿Hk¿H|¿H÷¿I3¿I=¿I\¿I}¿Iù¿J¿J¿J*¿J7¿JA¿Jí¿Jø¿K¿KH¿Kâ¿K∞¿K∫¿Kˇ¿LB¿Lm¿Lw¿Lû¿L˛¿M&¿M2¿Më¿M∫¿M∆¿M◊¿N;¿Nc¿No¿N“¿Nˇ¿O¿O¿O$¿Or¿O≤¿O˝¿PK¿Pù¿PÔ¿Q?¿Qp¿Q∏¿Q”¿Q˙¿R¿RU¿Rí¿R•¿Rπ¿Rƒ¿S¿Sp¿S∞¿S€¿SÂ¿T-¿Tí¿T“¿T˘¿U¿UJ¿Uä¿U±¿Uª¿V¿VE¿Vp¿Vz¿VÇ¿Vè¿Vﬁ¿W(¿W|¿W≥¿W‹¿X9¿Xz¿Xè¿Xó¿X√¿Y¿YF¿Y†¿Yﬁ¿Z¿ZH¿Zï¿Z⁄¿[¿[o¿[ö¿[§¿[Á¿\(¿\x¿\ü¿\©¿\ ¿]/¿]v¿]£¿]Ø¿]˜¿^¿^+¿^<¿^Ä¿^Â¿_¿_¿_\¿_Æ¿_◊¿_„¿_Ì¿_ı¿_˚¿`¿`¿`¿`K¿`é¿`∑¿`º¿a¿aO¿aï¿aÂ¿a˘¿a˛¿bQ¿bû¿b¿c$¿c)¿cÖ¿cÆ¿d¿d9¿dT¿dx¿dì¿dΩ¿dÂ¿dÎ¿e	¿e:¿ed¿eå¿e‹¿e¿fR¿fó¿fÈ¿g¿g^¿gy¿gû¿g≤¿g‘¿gÙ¿gˇ¿h¿hS¿hs¿h¡¿h⁄¿hÚ¿h˚¿iR¿ix¿iÅ¿i‰¿j
¿j¿j>¿jè¿jﬂ¿k"¿kÖ¿kÕ¿k˙¿l¿l¿lc¿ló¿l≠¿l∏¿l„¿m¿mH¿m¿m§¿mˇ¿nE¿nÇ¿nœ¿o
¿o¿ou¿o®¿o≤¿o—¿p¿p!¿pr¿pü¿pÂ¿qB¿q]¿qh¿q≠¿qÌ¿r@¿rK¿r®¿s¿s*¿s4¿sì¿s¿t¿t%¿tL¿t¨¿t‘¿t‡¿u?¿uh¿ut¿uÖ¿uÈ¿v¿v¿vÄ¿v≠¿vπ¿v√¿v“¿w"¿wb¿wm¿w¿¿x¿x@¿xá¿xÆ¿x÷¿y¿y¿yf¿yô¿yˆ¿z¿z¿za¿z°¿zÙ¿zˇ¿{¿{_¿{ò¿{Í¿|¿|¿|@¿|Ä¿|∑¿}¿}.¿}8¿}X¿}ò¿}œ¿~¿~e¿~å¿~ñ¿~∑¿~˜¿0¿v¿»¿Û¿˝¿Ä¿Ä¿Äg¿Äπ¿Äﬁ¿Å¿ÅL¿Åg¿Åå¿Å†¿Å¬¿Å‚¿ÅÌ¿Åı¿Ç¿Çr¿ÇØ¿Ç‘¿ÇÎ¿Çı¿É>¿É£¿É ¿É’¿Ñ8¿Ñc¿Ñ¿Ñ√¿ÑÓ¿Ö¿Ö6¿ÖM¿ÖW¿Ö~¿Ö⁄¿Ü¿ÜV¿ÜÑ¿Ü—¿á2¿á_¿áu¿áÄ¿á›¿á¯¿à¿àH¿àà¿à€¿àÊ¿â5¿ân¿âª¿âÙ¿äF¿äq¿ä{¿ä ¿ã¿ãN¿ãÖ¿ã’¿ã¸¿å¿å'¿åw¿å¨¿å˛¿ç&¿ç2¿çÅ¿ç∂¿é¿é1¿é=¿éN¿é†¿é◊¿è+¿èS¿è_¿è∞¿èÁ¿ê;¿êh¿êt¿ê~¿êÜ¿êå¿êù¿ê°¿ê¢¿êÌ¿ë3¿ëÉ¿ëó¿ëú¿ëÌ¿í?¿íå¿í¿¿í≈¿ì¿ìN¿ì§¿ì◊¿ìÚ¿î¿î1¿î[¿îÉ¿îâ¿î¶¿î◊¿ï¿ï)¿ïy¿ïç¿ïÔ¿ñ4¿ñÜ¿ñ¥¿ñ˘¿ó¿ó9¿óM¿óo¿óè¿óö¿ó¢¿óÓ¿ò¿ò\¿òu¿òç¿òñ¿òÌ¿ô¿ô¿ô¿ô•¿ôÆ¿ôŸ¿ö*¿öz¿öΩ¿õ ¿õh¿õï¿õ´¿õ∂¿õ˛¿ú2¿úH¿úS¿ú~¿úØ¿úÂ¿ù¿ù?¿ùö¿ù‡¿û¿ûj¿û•¿û∂¿ü¿üA¿üK¿üj¿üØ¿üπ¿†
¿†7¿†}¿†⁄¿†ı¿° ¿°E¿°Ö¿°ÿ¿°„¿¢@¿¢õ¿¢¬¿¢Ã¿£+¿£à¿£≥¿£Ω¿£‰¿§D¿§l¿§x¿§◊¿• ¿•¿•¿•Å¿•©¿•µ¿¶¿¶E¿¶Q¿¶[¿¶j¿¶∫¿¶˙¿ß¿ßX¿ß©¿ßÿ¿®¿®F¿®n¿®ú¿®ß¿®˛¿©1¿©é¿©©¿©¥¿©˘¿™9¿™å¿™ó¿™∑¿™˜¿´0¿´u¿´«¿´Ú¿´¸¿¨¿¨]¿¨î¿¨Ÿ¿≠)¿≠P¿≠Z¿≠z¿≠∫¿≠Ò¿ÆA¿Æh¿Ær¿Æì¿Æ”¿Ø¿Ø^¿Øâ¿Øì¿Øõ¿Ø®¿Ø˝¿∞O¿∞t¿∞õ¿∞‡¿∞˚¿± ¿±4¿±V¿±v¿±Å¿±â¿±µ¿≤¿≤E¿≤j¿≤Å¿≤ã¿≤‘¿≥9¿≥`¿≥k¿≥Œ¿≥˘¿¥¿¥Y¿¥Ñ¿¥ß¿¥Ã¿¥„¿¥Ì¿µ¿µn¿µ¨¿µÍ¿∂¿∂c¿∂ƒ¿∂Ò¿∑¿∑¿∑o¿∑ä¿∑ï¿∑⁄¿∏¿∏m¿∏x¿∏«¿π ¿πM¿πÜ¿πÿ¿∫¿∫¿∫\¿∫ì¿∫‡¿ª¿ªg¿ªé¿ªò¿ªπ¿º¿ºB¿ºñ¿ºæ¿º ¿Ω¿ΩR¿Ω¶¿Ω”¿Ωﬂ¿Ω¿æ@¿æu¿æ«¿æÔ¿æ˚¿øJ¿ø¿ø—¿ø˙¿¿¿¿¿¿¿¿¿¿/¿¿3¿¿4¿¿y¿¿ñ¿¿Ø¿¿Î¿¡(¿¡/¿¡Å¿¡Ÿ¿¬9¿¬¿¬¡¿¬¬¿¬Ò¿√/¿√G¿√ü¿√∏¿ƒ ¿ƒ¿ƒI¿ƒV¿ƒk¿ƒï¿ƒú¿ƒÚ¿≈¿≈$¿≈N¿≈U¿≈V¿≈®¿≈Ù¿∆¿∆$¿∆%¿∆H¿∆d¿∆y¿∆»¿∆Á¿«¿«B¿«d¿«ä¿«Æ¿«º¿»¿»,¿»J¿»á¿»©¿»œ¿»Û¿…¿…¿…$¿…f¿…Ö¿…¬¿…‰¿ 
¿ .¿ <¿ Ä¿ ü¿ ‹¿ ˛¿À$¿ÀH¿ÀW¿À]¿Àw¿Àå¿Àí¿Àì¿ÀÂ¿Ã6¿Ãà¿Ã¨¿Ã˙¿Õ%¿Õ5¿ÕU¿Õë¿Õ”¿Œ¿ŒQ¿Œ∞¿œ¿œi¿œë¿œ¨¿œ≤¿œÓ¿œ˙¿–-¿–I¿–o¿–á¿–≠¿–—¿–ﬂ¿—¿—0¿—V¿—n¿—î¿—∏¿—«¿—Œ¿—œ¿“¿“6¿“Y¿“_¿“`¿“ê¿“∑¿“Ω¿”¿”]¿”Ø¿”…¿‘¿‘¿‘¿‘s¿‘Ã¿’#¿’Å¿’Ö¿’Ü¿’†¿’‰¿÷¿÷0¿÷X¿÷m¿÷u¿÷ï¿÷õ¿÷≠¿÷±¿÷≤¿÷‹¿◊#¿◊n¿◊µ¿◊Ë¿ÿ5¿ÿs¿ÿ°¿ÿ«¿ÿÂ¿Ÿ¿ŸE¿ŸÅ¿Ÿ€¿⁄¿⁄W¿⁄Ä¿⁄ï¿⁄£¿⁄Ø¿⁄Â¿€¿€"¿€,¿€4¿€T¿€Z¿€É¿€á¿€à¿€‡¿€˚¿‹¿‹I¿‹ì¿‹ﬂ¿›-¿›T¿›r¿›ö¿›·¿ﬁ¿ﬁU¿ﬁq¿ﬁã¿ﬁñ¿ﬁË¿ﬂ¿ﬂ¿ﬂJ¿ﬂü¿ﬂ©¿ﬂ±¿ﬂ—¿ﬂ◊¿ﬂË¿ﬂÏ¿ﬂÌ¿‡¿‡K¿‡p¿‡Ö¿‡ç¿‡ì¿‡•¿‡©¿‡™¿‡Â¿·¿·6¿·ê¿·ﬂ¿·Â¿‚¿‚>¿‚D¿‚Y¿‚]¿‚^¿‚¨¿‚Ω¿‚·¿‚Ó¿„¿„¿„¿„¿„K¿„k¿„â¿„º¿„›¿„·¿„‚¿‰	¿‰F¿‰†¿‰¡¿‰≈¿‰∆¿Â¿Âj¿Â∏¿Ê¿Ê-¿Êh¿Ê¢¿Ê…¿Á
¿ÁA¿Ád¿Áj¿Á∫¿Á⁄¿ÁÊ¿Ë ¿ËX¿Ë_¿Ëï¿Ë«¿Ë˘¿È¿È¿È¿ÈR¿Èn¿Èä¿Èø¿ÈÓ¿Í¿Í#¿ÍY¿Í_¿Íp¿Ít¿Íu¿Í“¿Î&¿Ît¿Îƒ¿ÎÈ¿Ï$¿Ï^¿ÏÖ¿Ï∆¿Ï˝¿Ì ¿Ì&¿ÌW¿Ìá¿Ì≥¿Ì∫¿Ó¿Ó&¿Ón¿Ó≤¿ÓÊ¿Ô¿ÔD¿ÔL¿Ôn¿Ôt¿Ôï¿Ôô¿Ôö¿Ôˇ¿"¿C¿q¿¨¿π¿Ò¿ÒF¿ÒL¿ÒÅ¿ÒÖ¿ÒÜ¿Ò√¿Ú¿Ú4¿Ú;¿Úû¿Ú¿¿Ú∆¿Û¿ÛM¿ÛQ¿ÛR¿Ûú¿Û‹¿Û˚¿Ù5¿Ù9¿Ù:¿Ù|¿Ù∆¿ı¿ıj¿ız¿ıä¿ıë¿ı◊¿ı€¿ı‹¿ˆ&¿ˆo¿ˆ∞¿˜ ¿˜R¿˜g¿˜k¿˜l¿˜»¿¯¿¯l¿¯ö¿¯π¿¯Ì¿˘D¿˘h¿˘â¿˘ñ¿˘°¿˘æ¿˙¿˙m¿˙ñ¿˙⁄¿˙ﬁ¿˙ﬂ¿˚5¿˚Ç¿˚›¿¸¿¸$¿¸X¿¸≥¿¸◊¿¸¯¿˝¿˝¿˝'¿˝Ä¿˝≤¿˝»¿˝Ì¿˛¿˛¿˛G¿˛[¿˛Ä¿˛ñ¿˛Æ¿ˇ¿ˇ1¿ˇu¿ˇy¿ˇz¿ˇ±¿ˇ–¿ˇ„¿ 
¿ ¿ N¿ s¿ ç¿ ¡¿ Ò¿¿L¿{¿¢¿™¿∞¿˛¿¿4¿>¿q¿ï¿∑¿œ¿¿/¿y¿Ÿ¿5¿M¿°¿·¿Ï¿¿5¿b¿ê¿€¿¿[¿é¿Ó¿G¿_¿j¿Æ¿ÿ¿!¿Å¿å¿Ë¿	¿	¿	(¿	O¿	\¿	Ö¿	ã¿	û¿	¢¿	£¿	◊¿	È¿	¸¿
¿
#¿
E¿
q¿
Ω¿
Ï¿H¿Å¿§¿™¿Ê¿¿¿5¿Y¿t¿ö¿“¿¿$¿7¿Z¿e¿ã¿¨¿¿o¿ï¿ª¿Û¿-¿E¿X¿{¿Ü¿¨¿Õ¿.¿T¿y¿±¿Î¿¿¿8¿C¿}¿¶¿Í¿¿(¿P¿Z¿`¿a¿u¿ú¿©¿“¿ÿ¿Î¿Ô¿¿A¿å¿›¿˜¿*¿@¿R¿q¿w¿ô¿„¿3¿_¿c¿d¿≥¿¿2¿a¿w¿â¿®¿Æ¿À¿Ê¿¿$¿N¿q¿°¿´¿¸¿¿(¿9¿ú¿¨¿ª¿ﬂ¿¿¿&¿q¿æ¿Á¿Î¿Ï¿/¿L¿ä¿£¿™¿˛¿J¿r¿®¿÷¿¿¿¿!¿E¿y¿œ¿¸¿3¿@¿Ö¿≠¿’¿*¿5¿>¿D¿f¿ì¿º¿Ó¿¿ ¿D¿J¿¿π¿ ¿ ¿ ¿ O¿ \¿ b¿ ö¿ ‹¿! ¿!4¿!:¿!^¿!Ç¿!§¿!Û¿"¿"E¿"R¿"{¿"§¿"™¿"Î¿#%¿#)¿#*¿#M¿#S¿#®¿#∆¿$¿$P¿$`¿$ô¿$™¿$Ë¿$¯¿%¿%G¿%M¿%Q¿%R¿%^¿%ë¿%¿¿%ƒ¿%≈¿%—¿&¿&8¿&ê¿&û¿&§¿&‘¿&ˇ¿'!¿''¿'S¿'z¿'ú¿'¢¿'¶¿'ß¿'À¿'◊¿'¯¿( ¿(b¿(´¿(⁄¿(„¿)¿)*¿)Y¿)ê¿)ö¿)©¿*¿*6¿*H¿*î¿*ü¿*Ã¿*‘¿*⁄¿*¸¿+ ¿+¿+¿+)¿+H¿+ä¿+”¿+‹¿+˙¿,&¿,f¿,®¿,≤¿,–¿,ﬂ¿-A¿-h¿-z¿-∆¿-—¿-Ÿ¿-ﬂ¿-¯¿-¸¿-˝¿.!¿.9¿.Z¿.^¿._¿.k¿.ü¿.†¿.¨¿.æ¿.’¿.Ÿ¿.⁄¿/¿/U¿/c¿/i¿/ï¿/ ¿/˚¿0,¿05¿0`¿0Ö¿0≤¿1¿1T¿1\¿1b¿1∞¿1…¿1ﬁ¿2¿2K¿2V¿2ã¿2†¿2©¿2Ø¿2˘¿3¿3'¿3M¿3ê¿3õ¿3–¿3Â¿3Ó¿3Ù¿3¯¿3˘¿4¿4>¿4¿4ø¿4˚¿5;¿5?¿5@¿5L¿5â¿5”¿5◊¿5ÿ¿5‰¿6!¿6k¿6o¿6p¿6|¿6◊¿6ÿ¿6‰¿7)¿7T¿7¥¿7¯¿8?¿8C¿8E   R/// @docImport 'package:flutter/widgets.dart';
///
/// @docImport 'editable.dart';ÅÅÅ ÅÅ7Å6Å=ÅÒÅÙ   Ç   ÇF   Ço   Çò   Ç´   Ç¿   Ç’   ÇÚ   É     ÖÑÉEÖÑÜsÄ›/// Used by the [RenderParagraph] to map its rendering children to their
/// corresponding semantics nodes.
///
/// The [RichText] uses this to tag the relation between its placeholder spans
/// and their semantics nodes. Ü≠ÅáV áVáv Äö/// Creates a semantics tag with the input `index`.
///
/// Different [PlaceholderSpanIndexSemanticsTag]s with the same `index` are
/// consider the same.áw
á}á|  áâáéáπáèá±á≤á∑áø,áÊáÊ/// The index of this tag. àrUàÜàÜ   àràs á~à
à
  ààà  ááÒÜbÜcàÀÉ≤àÀâN|/// Parent data used by [RenderParagraph] and [RenderEditable] to annotate
/// inline contents (such as [WidgetSpan]s) with.  ä ä“ä“  äﬁÄ”ã≠ã≠Äµ/// The [PlaceholderSpan] associated with this render child.
///
/// This field is usually set by a [ParentDataWidget], and is typically not
/// null when `performLayout` is called. âùÅ*äµäµÅ/// The offset at which to paint the child in the parent's coordinate system.
///
/// A `null` value indicates this inline widget is not laid out. For instance,
/// when the inline widget has never been laid out, or the inline widget is
/// ellipsized away.    ã∂Xã«ã«   ã∂ã∑åiå%å%   åå ©oÄÁ©o©u  ©£©© ©©©ø     ©≈D©€©€   ©≈©∆ ™G™™  ™%™-™,  ™™ ™X¿ ù~™X™ï6/// A render object that displays a paragraph of text. ´]á°¨ ¨¨ Ä™/// Creates a paragraph render object.
///
/// The [maxLines] property may be null (and indeed defaults to null), but if
/// it is not null, it must be greater than zero.¨%¨1¨0  ¨<%¨G¨F  ¨g$¨¨~  ¨ë¨ó¨ñ  ¨´)¨π¨∏  ¨⁄Äˇ≠≈≠ƒ  ≠ﬂ6≠Î≠Í  ÆÆ!Æ   Æ.Æ7Æ6  ÆBÆOÆN  Æ^5ÆnÆm  Æô)Æ±Æ∞  Æ»Æ⁄ÆŸ  ÆÁÆÔÆÓ  ØØØ  {¨R¨[¨\¨°¨√¨œ¨–¨⁄¨€¨Â≠∑¨Ì≠≠}≠÷≠˜≠˝ÆÆÆ~ÆåÆçØ(Ø.ØHØ/Ø3Ø4ØFØGØRØXØyØjØbØYØeØvØmØxØÉØâØ„∞LØ ØîØùØ»ØûØ™Ø∞Ø∆Ø«Ø›ØÕØ‡ØÓ∞`∞V∞b∞}∞s∞∞†∞ê∞¢∞∆∞π∞»∞”≤¡∞‚∞ﬁ∞‰∞¸∞Û∞˛±±±!±C±9±±±±P±E±S±Y±o±p±Å±ã±å±í±¢±ì±≥±–±»±“±Ì±Â≤≤±¯±Ô±˚≤≤≤≤ ≤5≤/≤7≤R≤H≤T≤w≤i≤y≤§≤í≤¶≥m≥≥ ≥.≥4≥5≥A≥n≥G≥V≥W≥t≥Ü≥Ü  ¥Â!¥Ú¥Ú  ∑*/∑B∑B  ∑^C∑Ñ∑Ñ  ø 3øø  ø∏øÃøÃ  ¿ Oé¿ Oì¿ Oì  ¿ Py¿ PÜ¿ PÜ  ¿ _j¿ _q¿ _q  ¿ m¿ m¿ m ¿ m'¿ m0¿ m;¿ m;  ¿ oÔ3¿ p¿ p  ¿ ú_Äî¿ úÂ¿ úÂ[/// Collected during [describeSemanticsConfiguration], used by
/// [assembleSemanticsNode]. ¿ ÆÙ*¿ Ø¿ Ø  µ
Çµµ    ∑¶E∑–∑–/// The text to display.   ªXÇÎººÄä/// The ongoing selections in this paragraph.
///
/// The selection does not include selections in [PlaceholderSpan] if there
/// are any.  ªÎªÏø8}øùøùJ/// The [SelectionRegistrar] this paragraph will be, or is, registered to.   ¿ H+]¿ H@¿ H@   ¿ H+¿ H,¿ Je¿ JY¿ JY0/// How the text should be aligned horizontally.   ¿ K!Çâ¿ M}¿ M}Ç3/// The directionality of the text.
///
/// This decides how the [TextAlign.start], [TextAlign.end], and
/// [TextAlign.justify] values of [textAlign] are interpreted.
///
/// This is also used to disambiguate how to render bidirectional text. For
/// example, if the [text] is an English phrase followed by a Hebrew phrase,
/// in a [TextDirection.ltr] context the English phrase will be on the left
/// and the Hebrew phrase to its right, while in a [TextDirection.rtl]
/// context, the English phrase will be on the right and the Hebrew phrase on
/// its left.   ¿ N_Å,¿ Ou¿ OuÄ˛/// Whether the text should break at soft line breaks.
///
/// If false, the glyphs in the text will be positioned as if there was
/// unlimited horizontal space.
///
/// If [softWrap] is false, [overflow] and [textAlign] may have unexpected
/// effects.   ¿ P"T¿ P`¿ P`*/// How visual overflow should be handled.   ¿ QmÇ*¿ Sg¿ SgÅ/// Deprecated. Will be removed in a future version of Flutter. Use
/// [textScaler] instead.
///
/// The number of font pixels for each logical pixel.
///
/// For example, if the text scale factor is 1.5, text will be 50% larger than
/// the specified font size.  ¿ RÉ¿ RÑ¿ Ré¿ SX¿ Rî¿ R≥¿ S ¿ T…l¿ U¿ U4/// {@macro flutter.painting.textPainter.textScaler}   ¿ U˙Ä˙¿ V“¿ V“Ä»/// An optional maximum number of lines for the text to span, wrapping if
/// necessary. If the text exceeds the given number of lines, it will be
/// truncated according to [overflow] and [softWrap].   ¿ X/Å¨¿ YΩ¿ YΩÅu/// Used by this paragraph's internal [TextPainter] to select a
/// locale-specific font.
///
/// In some cases, the same Unicode character may be rendered differently
/// depending on the locale. For example, the 'È™®' character is rendered
/// differently in the Chinese and Japanese locales. In these cases, the
/// [locale] may be used to select a locale-specific font.   ¿ ZØm¿ Zˆ¿ Zˆ4/// {@macro flutter.painting.textPainter.strutStyle}   ¿ \ |¿ \N¿ \N8/// {@macro flutter.painting.textPainter.textWidthBasis}   ¿ ]Q{¿ ]ñ¿ ]ñ'/// {@macro dart.ui.textHeightBehavior}   ¿ ^µÄ≤¿ _E¿ _E~/// The color to use when painting the selection.
///
/// Ignored if the text is not selectable (e.g. if [registrar] is null).   ¿ e°ÄÚ¿ f[¿ f[Äì/// An estimate of the height of a line in the text. See [TextPainter.preferredLineHeight].
///
/// This does not require the layout to be updated.  ¿ f;¿ f<¿ mOÄÓ¿ n¿ nÄï/// Whether this paragraph currently has a [dart:ui.Shader] for its overflow
/// effect.
///
/// Used to test this object. Not for use in production.  ¿ mÌ¿ mÓ¿ ô_Å…¿ ö›¿ ö›Åb/// Returns the size of the text as laid out.
///
/// This can differ from [size] if the text overflowed or if the [constraints]
/// provided by the parent [RenderObject] forced the layout to be bigger than
/// necessary for the given [text].
///
/// This returns the [TextPainter.size] of the underlying [TextPainter].
///
/// Valid only after [layout].   ¿ õ,Å/¿ õ˙¿ õ˙Ä∫/// Whether the text was truncated or ellipsized as laid out.
///
/// This returns the [TextPainter.didExceedMaxLines] of the underlying [TextPainter].
///
/// Valid only after [layout].   ∑ÓÉf∑Ú∑Ú  ∑˜∏∏   ø⁄Äˆøﬁøﬁ  øËø˝ø¸   ¿ JÄÄù¿ JÑ¿ JÑ  ¿ Jé¿ Jô¿ Jò   ¿ M≠ÄÆ¿ M±¿ M±  ¿ Mø¿ MŒ¿ MÕ   ¿ O†~¿ O§¿ O§  ¿ O≠
¿ O≥¿ O≤   ¿ PìÄ÷¿ Pó¿ Pó  ¿ P†¿ PÆ¿ P≠   ¿ SöÅ+¿ Tw¿ Tw  ¿ Tá¿ Tè¿ Té  ¿ Sö¿ Sõ¿ S•¿ To¿ S´¿ S ¿ T7¿ U8Äæ¿ U<¿ U<  ¿ UG¿ US¿ UR   ¿ V¯Å3¿ WU¿ WUT/// The value may be null. If it is not null, then it must be greater than
/// zero. ¿ W^
¿ Wd¿ Wc   ¿ YﬂÄÃ¿ Z ¿ Z /// The value may be null. ¿ Z¿ Z¿ Z   ¿ [ Ä‹¿ [A¿ [A/// The value may be null. ¿ [L¿ [Y¿ [X   ¿ \ÄŒ¿ \É¿ \É  ¿ \í¿ \¢¿ \°   ¿ ]œÄ‚¿ ]”¿ ]”  ¿ ]Ê¿ ]˛¿ ]˝   ¿ _ÑÅ'¿ _à¿ _à  ¿ _ó¿ _ü¿ _û   )¿ @‘Å6¿ @Ÿ¿ @Ÿ    ¿ BÄ√¿ B¿ B    ¿ B’ÇÆ¿ BÔ¿ BÔ    ¿ EáÅ£¿ Fp¿ FpÄŸ/// Determines whether the given [Selectable] was created by this
/// [RenderParagraph].
///
/// The [RenderParagraph] splits its text into multiple [Selectable]s,
/// delimited by [PlaceholderSpan]s or [WidgetSpan]s. ¿ Fç¿ Fô¿ Fò   ¿ G.Ä˘¿ G3¿ G3    ¿ HåÄæ¿ Hù¿ Hù   ¿ Hå¿ Hç¿ INÄ∆¿ I_¿ I_   ¿ IN¿ IO¿ `ØÄô¿ `∂¿ `∂  ¿ `Ã¿ `⁄¿ `Ÿ   ¿ aLÅ›¿ a_¿ a_  ¿ ax¿ aÄ¿ a  ¿ aL¿ aM¿ c-Çp¿ c@¿ c@  ¿ cY¿ ca¿ c`  ¿ c-¿ c.¿ fóÅ~¿ fû¿ fû  ¿ f∂¿ fæ¿ fΩ   ¿ hk¿ h,¿ h,  ¿ hF¿ hN¿ hM  ¿ h¿ h¿ hàk¿ hõ¿ hõ  ¿ hµ¿ hΩ¿ hº  ¿ hà¿ hâ¿ h˜6¿ i¿ i  ¿ i¿ i¿ i  ¿ h˜¿ h¯¿ i1É‹¿ iO¿ iO  ¿ i_¿ iq¿ ip  ¿ iy¿ iä¿ iâ  ¿ i1¿ i2¿ i=¿ i>¿ nAs¿ nR¿ nR   ¿ nA¿ nB¿ p'ÄÑ¿ p.¿ p.  ¿ p>¿ pF¿ pE   ¿ pØÄÏ¿ p¥¿ p¥  ¿ pœ¿ pﬂ¿ pﬁ   ¿ qüÇa¿ qΩ¿ qΩ  ¿ qŒ$¿ qË¿ qÁ  ¿ qü¿ q†¿ q´¿ q¨¿ tÇ»¿ t¿ t  ¿ t7¿ tE¿ tD  ¿ t¿ t¿ v–Ç+¿ v„¿ v„  ¿ vˆ$¿ w¿ w  ¿ w¿ w*¿ w)  ¿ v–¿ v—¿ xˇäÛ¿ y¿ y   ¿ xˇ¿ y ¿ ÉˆÄÄ¿ Ñ¿ Ñ  ¿ Ñ¿ Ñ&¿ Ñ%  ¿ Ñ,¿ Ñ5¿ Ñ4  ¿ Éˆ¿ É˜¿ ÑzÜ¿ Ñã¿ Ñã  ¿ Ñë¿ Ñ¢¿ Ñ°  ¿ Ñ™¿ Ñ≤¿ Ñ±  ¿ Ñz¿ Ñ{¿ äîÅ8¿ ä¯¿ ä¯V/// Returns the offset at which to paint the caret.
///
/// Valid only after [layout]. ¿ ã
¿ ã¿ ã  ¿ ã!¿ ã'¿ ã&   ¿ ã–Å2¿ å@¿ å@b/// {@macro flutter.painting.textPainter.getFullHeightForCaret}
///
/// Valid only after [layout]. ¿ åV¿ åd¿ åc   ¿ çÑS¿ è¡¿ è¡Çâ/// Returns a list of rects that bound the given selection.
///
/// The [boxHeightStyle] and [boxWidthStyle] arguments may be used to select
/// the shape of the [TextBox]es. These properties default to
/// [ui.BoxHeightStyle.tight] and [ui.BoxWidthStyle.tight] respectively.
///
/// A given selection might have more than one rect if the [RenderParagraph]
/// contains multiple [InlineSpan]s or bidirectional text, because logically
/// contiguous text might not be visually contiguous.
///
/// Valid only after [layout].
///
/// See also:
///
///  * [TextPainter.getBoxesForSelection], the method in TextPainter to get
///    the equivalent boxes. ¿ è€¿ èÍ¿ èÈ  ¿ è˙:¿ ê¿ ê  ¿ ê:7¿ êL¿ êK  
¿ ê¿ ê¿ ê ¿ ê.¿ ê/¿ ê[¿ ê]¿ ê^¿ êk¿ êl¿ ë]Å&¿ ëÿ¿ ëÿg/// Returns the position within the text for the given pixel offset.
///
/// Valid only after [layout]. ¿ ëÌ¿ ëı¿ ëÙ   ¿ íáÇÉ¿ î_¿ î_Åª/// Returns the text range of the word at the given offset. Characters not
/// part of a word, such as spaces, symbols, and punctuation, have word breaks
/// on both sides. In such cases, this method will return a text range that
/// contains the given text position.
///
/// Word boundaries are defined more precisely in Unicode Standard Annex #29
/// <http://www.unicode.org/reports/tr29/#Word_Boundaries>.
///
/// Valid only after [layout]. ¿ îo¿ î}¿ î|   ¿ ï\¿ ï¿ ï  ¿ ï)¿ ï7¿ ï6   ¿ ïnÅP¿ ï{¿ ï{  ¿ ïë¿ ïü¿ ïû   ¿ ñ¬ÅN¿ ñœ¿ ñœ  ¿ ñÂ¿ ñÛ¿ ñÚ   ¿ òÅG¿ ò!¿ ò!  ¿ ò:¿ òH¿ òG  ¿ òQ¿ òY¿ òX   ¿ ú¯áé¿ ù	¿ ù	  ¿ ù(¿ ù@¿ ù?  ¿ ú¯¿ ú˘¿ §äÖ¯¿ §≠¿ §≠  ¿ §ÿ)¿ §ˆ¿ §ı   ¿ ™ÜÉf¿ ™ù¿ ™ù  ¿ ™ƒ'¿ ™‰¿ ™„  ¿ ™Ò¿ ™ˆ¿ ™ı   ¿ Ø#ìj¿ Ø4¿ Ø4  ¿ ØO¿ Ø^¿ Ø]  ¿ Øg¿ Ø¿ Ø~  ¿ Øä ¿ Ø£¿ Ø¢  ¿ Ø#¿ Ø$¿ ¬ëÄº¿ ¬ü¿ ¬ü  ¿ ¬∂¿ ¬ª¿ ¬∫   ¿ √Qa¿ √b¿ √b   ¿ √Q¿ √R¿ √∂Ä∏¿ √ÿ¿ √ÿ   ¿ √∂¿ √∑¿ ƒrÉb¿ ƒÉ¿ ƒÉ  ¿ ƒó&¿ ƒ¥¿ ƒ≥  ¿ ƒr¿ ƒs ¿ «ÿ¿pl¿ «ÿ¿ …SÅt/// A continuous, selectable piece of paragraph.
///
/// Since the selections in [PlaceholderSpan] are handled independently in its
/// subtree, a selection in [RenderParagraph] can't continue across a
/// [PlaceholderSpan]. The [RenderParagraph] splits itself on [PlaceholderSpan]
/// to create multiple `_SelectableFragment`s so that they can be selected
/// separately. ¿ …¿ÅE¿ …¿ ¿ …¿¿ …”  ¿ …’¿ …‰¿ …„  ¿ …Ó¿ …˝¿ …¸  ¿  ¿  ¿    ¿  "¿  (¿  b¿  M¿  7¿  )¿  .¿  /¿  :¿  ;¿  @¿  A¿  P¿  U¿  V¿ À	¿ À¿ À  ¿ À"¿ À8¿ À8  ¿ ÀE¿ ÀR¿ ÀR  ¿ À_!¿ Àm¿ Àm  ¿ ÀÑ¿ Àí¿ Àí  ¿ À®2¿ À≠¿ À≠ ¿ À’¿ Àﬂ ¿ ÀÍ¿ ÀÍ  ¿ Ã¿ Ã¿ Ã  ¿ Ãg)¿ Ã~¿ Ã~  ¿`Mm¿`a¿`a ¿`y¿`¿`Ä¿`å¿`π¿`í¿`°¿`¢¿`æB¿`œ¿`œ ¿`‰¿`˘¿`˙¿'© ¿'µ¿'µ  ¿+¿+	¿+	  ¿ Ã&>¿ ÃH¿ ÃH   ¿ Ã&¿ Ã'¿'ÕÉ2¿'Ë¿'Ë   ¿'Õ¿'Œ¿+Ç„¿+!¿+!    ¿.a=¿.u¿.u   ¿.a¿.b¿.¢6¿.∑¿.∑   ¿.¢¿.£ 2¿ ÃîÄﬁ¿ Ãô¿ Ãô    ¿ Õvâ¿ Õà¿ Õà    ¿ ÷ëç¿ ÷≠¿ ÷≠  ¿ ÷ƒ¿ ÷‘¿ ÷”  ¿ ÷ë¿ ÷í¿ „©Åâ¿ „∆¿ „∆   ¿ „©¿ „™¿ Â6Å¿ ÂX¿ ÂX   ¿ Â6¿ Â7¿ ÊQ`¿ ÊV¿ ÊV    ¿ Êµëï¿ Ê¬¿ Ê¬  ¿ ÊÔ!¿ Á¿ Á  ¿ Á'¿ Á/¿ Á.  ¿ ÁC¿ ÁQ¿ ÁP  ¿ Á^$¿ Ám¿ Ál  ¿ Áà"¿ Áó¿ Áñ   ¿ ¯Në£¿ ¯[¿ ¯[  ¿ ¯Ü!¿ ¯ú¿ ¯õ  ¿ ¯≠'¿ ¯∆¿ ¯≈  ¿ ¯⁄¿ ¯Ë¿ ¯Á  ¿ ¯ı$¿ ˘¿ ˘  ¿ ˘"¿ ˘.¿ ˘-   ¿	ıå…¿
¿
  ¿
-¿
5¿
4  ¿
J¿
Y¿
X  ¿
c0¿
Ö¿
Ñ   ¿¬Ñ”¿“¿“  ¿Á¿Ô¿Ó  ¿ˇ¿¿   ¿¸üÀ¿¿  ¿I-¿h¿g  ¿|¿Ç¿Å  ¿†¿Æ¿≠  ¿ª$¿ ¿…  ¿Â"¿Ù¿Û   ¿@,ü„¿@=¿@=  ¿@w-¿@ñ¿@ï  ¿@™¿@∞¿@Ø  ¿@Œ¿@‹¿@€  ¿@È$¿@¯¿@˜  ¿A"¿A"¿A!   ¿c∞¨¿c¡¿c¡  ¿d
-¿d)¿d(  ¿d=¿dE¿dD  ¿dX¿d^¿d]  ¿d|¿dä¿dâ  ¿dó$¿d¶¿d•  ¿d¡"¿d–¿dœ   ¿ìP¨‚¿ìa¿ìa  ¿ì®-¿ì«¿ì∆  ¿ì€¿ì„¿ì‚  ¿ìˆ¿ì¸¿ì˚  ¿î¿î(¿î'  ¿î5$¿îD¿îC  ¿î_"¿în¿îm   ¿¿6ì‹¿¿F¿¿F  ¿¿}¿¿Ö¿¿Ñ  ¿¿ö¿¿©¿¿®  ¿¿≥6¿¿€¿¿⁄  ¿¿Ô7¿¡¿¡   ¿‘Ån¿‘#¿‘#  ¿‘8 ¿‘M¿‘L  ¿‘Z¿‘h¿‘g   ¿’àÅ(¿’ç¿’ç    ¿÷¥Ñ“¿÷ƒ¿÷ƒ    ¿€äÑa¿€ø¿€ø  ¿€‰¿€Ï¿€Î   ¿ﬂÔÄπ¿ﬂÙ¿ﬂÙ  ¿‡¿‡¿‡   ¿‡¨Å∞¿‡π¿‡π  ¿‡Ã¿‡⁄¿‡Ÿ   ¿‚`ÄΩ¿‚e¿‚e  ¿‚{¿‚ä¿‚â  ¿‚î¿‚£¿‚¢   ¿„!Äø¿„1¿„1    ¿„‰Ä‡¿„Ù¿„Ù    ¿‰»ÑT¿‰ÿ¿‰ÿ  ¿‰Ú ¿Â¿Â   ¿È ÅS¿È+¿È+  ¿È6¿ÈA¿È@  ¿ÈC¿ÈN¿ÈM   ¿ÍwÖ!¿Íá¿Íá  ¿ÍÆ ¿Í√¿Í¬   ¿ÔúÅË¿Ô∞¿Ô∞  ¿ÔŒ¿ÔŸ¿Ôÿ  ¿ÔÊ¿ÔÙ¿ÔÛ   ¿ÒàÅ»¿Òò¿Òò  ¿Ò™¿Ò≤¿Ò±   ¿ÛTÄ‰¿Ûh¿Ûh  ¿ÛÉ¿Ûë¿Ûê   ¿Ù<Åû¿ÙL¿ÙL  ¿Ùc¿Ùk¿Ùj   ¿ıﬁÅå¿ıÎ¿ıÎ  ¿ˆ¿ˆ¿ˆ   ¿˜nÉo¿˜Ç¿˜Ç  ¿˜¢¿˜∞¿˜Ø  ¿˜π¿˜¡¿˜¿   ¿˙·Ñó¿˙ı¿˙ı  ¿˚¿˚*¿˚)   ¿ˇ|ä%¿ˇå¿ˇå  ¿ˇµ¿ˇΩ¿ˇº  ¿ˇ‘¿ˇ⁄¿ˇŸ  ¿ˇÁ!¿ ¿     ¿	•âI¿	µ¿	µ  ¿	€¿	·¿	‡  ¿	Ì¿	Û¿	Ú  ¿
 ¿
¿
   ¿˘Åi¿¿  ¿.¿<¿;  ¿D¿J¿I  ¿V¿d¿c   ¿4É∂¿A¿A  ¿e¿s¿r  ¿{¿Å¿Ä  ¿ç¿õ¿ö   ¿ÓÜ¿¿  ¿3¿A¿@  ¿P8¿a¿`  ¿é¿ù¿ú   ¿ 	É¿ °¿ °Ää/// Whether the given text position is contained in current selection
/// range.
///
/// The parameter `start` must be smaller than `end`. ¿ √¿ —¿ –   ¿#,Ç$¿#”¿#”Äì/// Compares two text positions.
///
/// Returns 1 if `position` < `otherPosition`, -1 if `position` > `otherPosition`,
/// or 0 if they are equal. ¿#È¿#˜¿#ˆ  ¿$ ¿$¿$   ¿%To¿%h¿%h  ¿%w¿%Ü¿%Ö  ¿%T¿%U¿%«Åﬁ¿%ÿ¿%ÿ  ¿%È¿%ı¿%Ù  ¿&¿&¿&  ¿%«¿%»¿-ˇ^¿.¿.    ¿.‹Ö¿.·¿.·  ¿.Á¿.¯¿.˜  ¿/ ¿/¿/   ¿3˚ÅC¿4¿4  ¿4%¿43¿42  ¿3˚¿3¸¿5BÄî¿5[¿5[  ¿5p¿5~¿5}  ¿5B¿5C¿5⁄Äî¿5Û¿5Û  ¿6¿6¿6  ¿5⁄¿5€¿6rd¿6à¿6à  ¿6ò¿6¶¿6•  ¿6r¿6s¿6⁄Åh¿6Î¿6Î  ¿6ˇ&¿7¿7  ¿6⁄¿6€         É"ÄåÉ"É_4/// The start and end positions for a text boundary.    É∞ÄæÉ∞Ñ g/// Signature for a function that determines the [_TextBoundaryRecord] at the given
/// [TextPosition].  ÑWÑeÑd   ÑpÄÌÑpÑ¯/// Signature for a function that determines the [_TextBoundaryRecord] at the given
/// [TextPosition], for the given [String].  Ö9ÖGÖF  ÖPÖXÖW   åúÓåíDÖæ/// A mixin that provides useful default behaviors for text [RenderBox]es
/// ([RenderParagraph] and [RenderEditable] for example) with inline content
/// children managed by the [ContainerRenderObjectMixin] mixin.
///
/// This mixin assumes every child managed by the [ContainerRenderObjectMixin]
/// mixin corresponds to a [PlaceholderSpan], and they are organized in logical
/// order of the text (the order each [PlaceholderSpan] is encountered when the
/// user reads the text).
///
/// To use this mixin in a [RenderBox] class:
///
///  * Call [layoutInlineChildren] in the `performLayout` and `computeDryLayout`
///    implementation, and during intrinsic size calculations, to get the size
///    information of the inline widgets as a `List` of `PlaceholderDimensions`.
///    Determine the positioning of the inline widgets (which is usually done by
///    a [TextPainter] using its line break algorithm).
///
///  * Call [positionInlineChildren] with the positioning information of the
///    inline widgets.
///
///  * Implement [RenderBox.applyPaintTransform], optionally with
///    [defaultApplyPaintTransform].
///
///  * Call [paintInlineChildren] in [RenderBox.paint] to paint the inline widgets.
///
///  * Call [hitTestInlineChildren] in [RenderBox.hitTestChildren] to hit test the
///    inline widgets.
///
/// See also:
///
///  * [WidgetSpan.extractFromInlineSpan], a helper function for extracting
///    [WidgetSpan]s from an [InlineSpan] tree.     í∂Äóí«í«  í◊í‚í·  í∂í∑ìQÑ)ìnìn  ìÄìãìä  ìïì•ì§  ì∫ì…ì»  ìŸìÓìÌ   ó~ÖöÔöÔÉ%/// Computes the layout for every inline child using the `maxWidth` constraint.
///
/// Returns a list of [PlaceholderDimensions], representing the layout results
/// for each child managed by the [ContainerRenderObjectMixin] mixin.
///
/// The `getChildBaseline` parameter and the `layoutChild` parameter must be
/// consistent: if `layoutChild` computes the size of the child without
/// modifying the actual layout of that child, then `getChildBaseline` must
/// also be "dry", and vice versa.
///
/// Since this method does not impose a maximum height constraint on the
/// inline children, some children may become taller than this [RenderBox].
///
/// See also:
///
///  * [TextPainter.setPlaceholderDimensions], the method that usually takes
///    the layout results from this method as the input. õ	õõ  õõ-õ,  õ=$õRõQ  ö∆ö«úÉÑ„û∏û∏Ç
/// Positions each inline child according to the coordinates provided in the
/// `boxes` list.
///
/// The `boxes` list must be in logical order, which is the order each child
/// is encountered when the user reads the text. Usually the length of the
/// list equals [childCount], but it can be less than that, when some children
/// are omitted due to ellipsing. It never exceeds [childCount].
///
/// See also:
///
///  * [TextPainter.inlinePlaceholderBoxes], the method that can be used to
///    get the input `boxes`. ûœû·û‡  û¶ûß°jÇg¢É¢ÉÄ¸/// Applies the transform that would be applied when painting the given child
/// to the given matrix.
///
/// Render children whose [TextParentData.offset] is null zeros out the
/// `transform` to indicate they're invisible thus should not be painted. ¢û¢©¢®  ¢Ø¢∏¢∑  ¢q¢r£’Ç=§o§o/// Paints each inline child.
///
/// Render children whose [TextParentData.offset] is null will be skipped by
/// this method. §É§î§ì  §ú§§§£  §]§^¶ÉU¶¿¶¿Äè/// Performs a hit test on each inline child.
///
/// Render children whose [TextParentData.offset] is null will be skipped by
/// this method. ¶÷¶Ë¶Á  ¶Ô¶˜¶ˆ  ¶Æ¶Ø Ö_"ÖlÖl Öy   ÄÆ  package:flutter/widgets.dart  Ä·  editable.dart é <ÄÜÄ§Ä•Ä‘ÄÿÄ¯ÅÅÅÅ/Å9ÅBÅZÅqÅÉÅòÅ∂Å∆Å◊ÅÛÅÙÇÇFÇoÇóÇòÇ´Ç¿Ç’ÇÚÉÉ!É"ÉWÉØÉ∞ÑÑÑoÑpÑƒÑÖÖ^Ö_ÖÉÖÑÖÕÖÖÙÜCÜbÜmÜ´Ü·ÜÁá5áNáÉáºáΩá⁄áÌáÓá˙ààkàoàpà|à»à àÀââHâõâÎâÒäBäêäßä»ä€ä‹ãã!ãoãöã≥ã¥ã¿ã“ã„ã˜ååååå|å~åå…ççVçZç©ç˘éIécégéïéôéÍè9èäè€êêêdê{êê¡êÊêÍë>ëBëïë¨ë∞ëæë¬íí>íjí¥í¿íÍììDìJìNìOì|ìëì∂ì’ì˙î îKî~îòî∞î÷î˜ï/ïVï{ï±ïËññOññ≤ñÒóó*óJó[ójówó{ó|óŒó‘ò%òmòsò¬ôôZôôÖô–öö$ö4ö:öâöƒö—õõõ9õcõiõ¥õÿú,úuú|úÄúÅú–ú‰úÍù9ùÜù◊ûû û0û6ûÑû§û±ûÈüü6üQüaürü’ü‡üü¯†I†É†§†™†∆°°<°]°c°g°h°∏°”°Ÿ¢#¢o¢|¢ƒ££G£a£|£â£»£Œ£“£”£Û£˘§H§[§h§≠§–§Ï•>•x•ô•©•±•Ë¶	¶¶¶¶D¶J¶ô¶¨¶πßß%ßAßìßÕßÓ®®®@®]®y®ª®ˆ®ˇ©©'©/©P©V©h©l©n©o©°©√©œ™
™™™U™W™X™è™∑™¿™ˇ´.´[´Ñ´ä´⁄¨¨!¨8¨c¨ç¨ß¨÷¨Á≠≠w≠≥≠π≠€ÆÆ*Æ>ÆZÆïÆƒÆ„Æ˛Ø!ØKØ|ØãØÂ∞E∞O∞l∞â∞≤∞’∞Í±	±0±r±§±ø±‹≤&≤?≤`≤â≤∫≤≈≤€≤˚≤ˇ≥ ≥C≥l≥q≥r≥î≥ï≥·¥3¥v¥{¥¬¥„µµ,µ`µÅµ¨µﬂ∂∂5∂^∂É∂∞∂Â∑#∑'∑(∑[∑\∑£∑§∑ø∑Ï∏∏>∏e∏u∏õ∏æ∏Ïππ3πVπ~π¨π∆πÍ∫∫1∫Q∫y∫ß∫¬∫ÛªªKªQªUªVªÜªåª⁄ªÈª˛º%ºQºwº}º∏ΩΩ\ΩqΩäΩ»ææææ&æ,æ@æDæEæíæ‚æ˛ø5ø6øÉø∂øÿ¿ @¿ @$¿ @2¿ @8¿ @e¿ @à¿ @†¿ @Õ¿ @—¿ @“¿ A¿ A!¿ A/¿ A5¿ Aq¿ A©¿ AŸ¿ B¿ B¿ B¿ B¿ B=¿ B¿ Bç¿ Bì¿ BŒ¿ B“¿ B”¿ C¿ CY¿ Cü¿ C≤¿ CŸ¿ D¿ D4¿ DM¿ Do¿ Dy¿ Dç¿ D¨¿ D…¿ Dˇ¿ E ¿ E-¿ E8¿ EM¿ EU¿ Eg¿ Em¿ EÄ¿ EÑ¿ EÖ¿ E…¿ E‚¿ EË¿ F1¿ Fi¿ F¶¿ F“¿ FÊ¿ FÏ¿ G'¿ G+¿ G,¿ GS¿ G¿ Gç¿ Gì¿ Gﬂ¿ G˘¿ Gˇ¿ H$¿ H(¿ H)¿ H5¿ Hâ¿ Hä¿ Hñ¿ H±¿ Hÿ¿ I#¿ I*¿ IG¿ IK¿ IL¿ IX¿ Ik¿ Iò¿ Iª¿ I◊¿ I¸¿ J¿ J¿ J¿ JI¿ J~¿ J°¿ JÃ¿ J⁄¿ J‡¿ K¿ K¿ K¿ K¿ KE¿ KK¿ Ké¿ Kœ¿ K’¿ L#¿ Lr¿ L¿¿ M	¿ MY¿ Mi¿ M´¿ M÷¿ N¿ N¿ N¿ NA¿ NX¿ N\¿ N]¿ Nñ¿ Nú¿ NÊ¿ O¿ O¿ O[¿ Oj¿ Oå¿ Oû¿ Oª¿ OŸ¿ OÁ¿ OÌ¿ P¿ P¿ P¿ P ¿ PM¿ Pw¿ Pë¿ P∂¿ P‘¿ P‚¿ PË¿ Pˇ¿ QO¿ Qf¿ Qj¿ Qk¿ Q±¿ QÕ¿ Q”¿ R¿ R¿ Rb¿ RÅ¿ Rê¿ RØ¿ S¿ SV¿ SZ¿ Sò¿ Sß¿ S∆¿ T3¿ Tm¿ Tq¿ Tó¿ T¬¿ T∆¿ T«¿ T˛¿ U6¿ U[¿ Uá¿ Uï¿ Uõ¿ U¿¿ U‹¿ UÛ¿ U˜¿ U¯¿ VD¿ Vè¿ V«¿ Vı¿ Vˆ¿ WC¿ WO¿ Wl¿ Wî¿ Wæ¿ WÃ¿ W“¿ Wı¿ X¿ X(¿ X,¿ X-¿ Xo¿ Xã¿ Xë¿ X›¿ Y'¿ Yr¿ YØ¿ Y‹¿ Y›¿ Y˙¿ Z¿ Z@¿ ZN¿ ZT¿ Zu¿ Zë¿ Z®¿ Z¨¿ Z≠¿ Z‰¿ [¿ [¿ [;¿ [a¿ [ç¿ [õ¿ [°¿ [∆¿ [‚¿ [˘¿ [˝¿ [˛¿ \9¿ \}¿ \™¿ \⁄¿ \Ë¿ \Ó¿ ]¿ ]3¿ ]J¿ ]N¿ ]O¿ ]y¿ ]Õ¿ ^¿ ^:¿ ^H¿ ^N¿ ^{¿ ^ó¿ ^Æ¿ ^≤¿ ^≥¿ ^Á¿ ^Ì¿ _8¿ _h¿ _Ç¿ _ß¿ _À¿ _Ÿ¿ _ﬂ¿ _¸¿ `#¿ `l¿ `y¿ `ä¿ `¢¿ `®¿ `¨¿ `≠¿ `Â¿ aE¿ aI¿ aJ¿ aV¿ aâ¿ a›¿ aÙ¿ b+¿ bm¿ bï¿ bú¿ b∏¿ bÙ¿ c
¿ c&¿ c*¿ c+¿ c7¿ cj¿ cæ¿ c’¿ d¿ dh¿ dü¿ d·¿ e	¿ e¿ e,¿ eh¿ e~¿ eö¿ eû¿ eü¿ e˝¿ f¿ f9¿ fN¿ fî¿ fï¿ f∆¿ f‚¿ g¿ g*¿ g?¿ go¿ gü¿ gÆ¿ g∫¿ h¿ h¿ h¿ h¿ h#¿ hV¿ hÅ¿ hÖ¿ hÜ¿ hí¿ h≈¿ h¿ hÙ¿ hı¿ i¿ i.¿ i/¿ i;¿ iH¿ iñ¿ i‰¿ j0¿ jÅ¿ j–¿ k¿ k>¿ k^¿ k¨¿ k›¿ l)¿ l5¿ lE¿ l\¿ lÅ¿ l©¿ læ¿ lÃ¿ m¿ m
¿ m¿ m¿ m.¿ mL¿ mM¿ mú¿ m™¿ m∞¿ mÎ¿ n ¿ n>¿ n?¿ nK¿ nk¿ nç¿ n±¿ nµ¿ n∂¿ o¿ o¿ oV¿ o¶¿ oÌ¿ p$¿ p%¿ pQ¿ p®¿ p¨¿ p≠¿ pÌ¿ p˛¿ q7¿ qò¿ qú¿ qù¿ q©¿ q∂¿ qˆ¿ r¿ r%¿ rO¿ ru¿ rù¿ r—¿ s¿ s¿ s(¿ s@¿ sp¿ s±¿ s¬¿ s’¿ s˝¿ t¿ t¿ t¿ tP¿ to¿ tù¿ t ¿ u¿ u]¿ u™¿ u˜¿ v=¿ vw¿ v…¿ vÕ¿ vŒ¿ v⁄¿ w5¿ wc¿ ww¿ wô¿ w∑¿ w◊¿ x¿ x/¿ x:¿ xB¿ x£¿ x¯¿ x¸¿ x˝¿ y	¿ y"¿ yI¿ yî¿ yõ¿ y‘¿ z¿ z#¿ zH¿ zm¿ zt¿ z°¿ z„¿ z‰¿ {¿ {=¿ {>¿ {¢¿ {·¿ |0¿ |¿ |Œ¿ }¿ }^¿ }®¿ }≈¿ }‡¿ ~¿ ~%¿ ~G¿ ~g¿ ~ã¿ ~¨¿ ~Œ¿ ~Ó¿ ¿ J¿ ó¿ ¡¿ Â¿ Ä¿ Ä¿ Ä:¿ Ää¿ ÄÀ¿ Å ¿ Å/¿ Åa¿ Åá¿ Å´¿ ÅÙ¿ Ç¿ Ç¿ ÇF¿ Çì¿ Ç≈¿ ÇÎ¿ É¿ ÉX¿ Ég¿ És¿ Éò¿ É†¿ É≠¿ ÉÀ¿ ÉÈ¿ ÉÔ¿ ÉÛ¿ ÉÙ¿ Ñ ¿ ÑA¿ Ñs¿ Ñw¿ Ñx¿ ÑÑ¿ Ñª¿ Ö¿ Ö]¿ Öà¿ Öµ¿ Ö≈¿ ÖÒ¿ ÜB¿ Üy¿ ÜÅ¿ Üî¿ Üû¿ Üü¿ Üπ¿ Ü‚¿ á¿ áU¿ áí¿ á≈¿ á‘¿ áÛ¿ á˚¿ à"¿ à(¿ à)¿ àU¿ à£¿ àÃ¿ à‘¿ à⁄¿ à€¿ â¿ â¿ â6¿ â7¿ âQ¿ âv¿ âÆ¿ â“¿ â˝¿ ä#¿ ä_¿ äg¿ äá¿ äç¿ äë¿ äí¿ ä»¿ äŒ¿ äÔ¿ ã8¿ ãW¿ ãÑ¿ ã…¿ ãÕ¿ ãŒ¿ å¿ å¿ å7¿ åo¿ åé¿ åª¿ åˇ¿ ç¿ ç¿ çB¿ çH¿ çó¿ ç◊¿ é"¿ é(¿ éw¿ é∆¿ é˛¿ è¿ è%¿ è+¿ è;¿ èA¿ èè¿ èÆ¿ è◊¿ èˆ¿ ê6¿ ês¿ êz¿ êô¿ ê∆¿ êÙ¿ ë¿ ë+¿ ëO¿ ëV¿ ëZ¿ ë[¿ ë¢¿ ë®¿ ë…¿ ë˛¿ í¿ íJ¿ íÄ¿ íÑ¿ íÖ¿ í“¿ ì#¿ ìq¿ ìô¿ ìü¿ ìÓ¿ î,¿ î2¿ îS¿ îà¿ îß¿ î‘¿ ï¿ ï¿ ï¿ ïk¿ ïl¿ ï™¿ ïı¿ ñ>¿ ñ|¿ ñª¿ ñø¿ ñ¿¿ ñ˛¿ óH¿ óë¿ óŒ¿ ò¿ ò¿ ò¿ òj¿ òæ¿ ô¿ ôX¿ ô\¿ ô]¿ ôç¿ ôì¿ ô‰¿ ö4¿ öZ¿ ö`¿ ö´¿ ö±¿ ö“¿ öË¿ õ¿ õ%¿ õ)¿ õ*¿ õj¿ õp¿ õ»¿ õŒ¿ õÔ¿ ú¿ ú-¿ úX¿ ú\¿ ú]¿ úû¿ úΩ¿ úı¿ úˆ¿ ù¿ ùI¿ ù{¿ ù∞¿ ù›¿ û¿ ûY¿ û¢¿ ûÕ¿ û‹¿ û‰¿ üE¿ üK¿ üL¿ ür¿ üö¿ ü¬¿ üı¿ †G¿ †T¿ †Å¿ †µ¿ †Õ¿ °¿ °`¿ °°¿ °¿ ¢1¿ ¢M¿ ¢o¿ ¢ë¿ ¢»¿ ¢˚¿ £¿ £¿ £.¿ £:¿ £Y¿ £{¿ £Ö¿ £ª¿ §¿ §¿ §¿ §Q¿ §}¿ §É¿ §á¿ §à¿ §‘¿ •¿ •	¿ •G¿ •|¿ •ö¿ •π¿ •‡¿ ¶¿ ¶_¿ ¶∑¿ ¶◊¿ ¶˚¿ ß¿ ßt¿ ßÅ¿ ß´¿ ßµ¿ ®¿ ®@¿ ®~¿ ®¿¿ ®—¿ ©¿ ©5¿ ©?¿ ©^¿ ©m¿ ©ä¿ ©í¿ ©ò¿ ©ô¿ ©√¿ ©„¿ ™ ¿ ™T¿ ™]¿ ™c¿ ™¿ ™É¿ ™Ñ¿ ™¿¿ ™Ì¿ ´¿ ´¿ ´.¿ ´ë¿ ´¡¿ ´˛¿ ´ˇ¿ ¨*¿ ¨>¿ ¨q¿ ¨~¿ ¨∞¿ ¨⁄¿ ≠¿ ≠;¿ ≠D¿ ≠n¿ ≠t¿ ≠ò¿ ≠æ¿ ≠È¿ ≠Ì¿ ≠Ó¿ Æ:¿ Æâ¿ Æ»¿ ÆÚ¿ Ø ¿ Ø!¿ Ø-¿ ØK¿ Øc¿ ØÜ¿ Ø¨¿ Ø≤¿ ØÙ¿ ∞3¿ ∞g¿ ∞}¿ ∞ó¿ ∞™¿ ∞»¿ ∞‡¿ ±¿ ±M¿ ±ö¿ ±Ú¿ ≤'¿ ≤B¿ ≤r¿ ≤{¿ ≤ú¿ ≤ù¿ ≤Ω¿ ≥¿ ≥R¿ ≥Å¿ ≥ñ¿ ≥Ω¿ ¥¿ ¥X¿ ¥™¿ ¥˜¿ µ"¿ µJ¿ µV¿ µq¿ µ{¿ µü¿ µæ¿ µÕ¿ ∂¿ ∂V¿ ∂s¿ ∂á¿ ∂ë¿ ∂ª¿ ∂Ì¿ ∑'¿ ∑`¿ ∑ê¿ ∑ö¿ ∑›¿ ∏!¿ ∏?¿ ∏c¿ ∏Ü¿ ∏º¿ ∏Ù¿ ∏ˇ¿ πM¿ πû¿ π√¿ πÓ¿ ∫¿ ∫C¿ ∫o¿ ∫z¿ ∫»¿ ∫¯¿ ª%¿ ª]¿ ªç¿ ªª¿ ªÍ¿ ª˜¿ º¿ ºc¿ º∏¿ º€¿ Ω¿ Ω3¿ ΩA¿ Ω¶¿ ΩÕ¿ æ¿ æ¿ æ'¿ æ:¿ æM¿ æú¿ æ¶¿ æ÷¿ ø)¿ øw¿ øÅ¿ øß¿ ø›¿ ¿-¿ ¿>¿ ¿k¿ ¿ƒ¿ ¿Œ¿ ¿ﬂ¿ ¡¿ ¡-¿ ¡^¿ ¡Å¿ ¡â¿ ¡è¿ ¡Õ¿ ¡¯¿ ¬¿ ¬¿ ¬;¿ ¬ä¿ ¬é¿ ¬è¿ ¬¡¿ ¬—¿ √¿ √C¿ √J¿ √N¿ √O¿ √[¿ √u¿ √ë¿ √Ø¿ √≥¿ √¥¿ √¿¿ √Ú¿ ƒ¿ ƒd¿ ƒk¿ ƒo¿ ƒp¿ ƒ|¿ ƒ¡¿ ƒÏ¿ ≈1¿ ≈Ç¿ ≈ñ¿ ≈™¿ ≈æ¿ ≈◊¿ ∆ ¿ ∆@¿ ∆X¿ ∆a¿ ∆h¿ ∆Æ¿ ∆¬¿ «'¿ «.¿ «Ö¿ «—¿ «’¿ «◊¿ «ÿ¿ »	¿ »¿ »\¿ »¢¿ »Ú¿ …=¿ …M¿ …g¿ …õ¿ …æ¿  ¿  f¿  í¿   ¿  –¿ À¿ À¿ À¿ À ¿ ÀC¿ À\¿ À]¿ ÀÇ¿ À•¿ À¶¿ À‹¿ À›¿ Ã¿ Ã#¿ Ã$¿ Ã0¿ Ãe¿ Ãí¿ Ã∂¿ Ãˆ¿ Ã˜¿ Õ!¿ Õ/¿ Õ5¿ ÕX¿ Õo¿ Õs¿ Õt¿ Õ¢¿ ÕÊ¿ Œ<¿ ŒB¿ ŒC¿ Œ¿ Œ∑¿ ŒÚ¿ œH¿ œt¿ œ{¿ œÕ¿ œ˘¿ –H¿ –£¿ –÷¿ –¯¿ —¿ —!¿ —Q¿ —†¿ —Ã¿ —“¿ “¿ “"¿ “Z¿ “ê¿ “≈¿ ”
¿ ”e¿ ”ª¿ ‘¿ ‘¿ ‘7¿ ‘b¿ ‘ú¿ ‘‹¿ ’
¿ ’¿ ’<¿ ’t¿ ’¥¿ ’‡¿ ’È¿ ÷¿ ÷k¿ ÷É¿ ÷ä¿ ÷é¿ ÷è¿ ÷õ¿ ÷‹¿ ◊¿ ◊I¿ ◊ã¿ ◊•¿ ◊‘¿ ÿ¿ ÿX¿ ÿó¿ ÿò¿ ÿ∑¿ ÿ·¿ Ÿ¿ Ÿ5¿ Ÿ¿ Ÿé¿ Ÿ≥¿ ŸÏ¿ ⁄¿ ⁄_¿ ⁄ö¿ ⁄©¿ ⁄”¿ €¿ €D¿ €é¿ €Œ¿ ‹¿ ‹+¿ ‹T¿ ‹y¿ ‹◊¿ ‹·¿ ›¿ ›0¿ ›Y¿ ›~¿ ›®¿ ›ˇ¿ ﬁ>¿ ﬁm¿ ﬁ´¿ ﬁﬂ¿ ﬂ¿ ﬂ#¿ ﬂL¿ ﬂÑ¿ ﬂï¿ ﬂ‡¿ ﬂÍ¿ ‡#¿ ‡l¿ ‡°¿ ‡‘¿ ·¿ ·,¿ ·]¿ ·h¿ ·§¿ ·Û¿ ‚+¿ ‚a¿ ‚å¿ ‚∫¿ ‚Ï¿ ‚˜¿ ‚˝¿ ‚˛¿ „7¿ „l¿ „â¿ „è¿ „¢¿ „¶¿ „ß¿ „≥¿ „›¿ ‰!¿ ‰4¿ ‰:¿ ‰í¿ ‰Ë¿ Â/¿ Â3¿ Â4¿ Â@¿ Âi¿ Â≠¿ Â¿¿ Â∆¿ ÂÁ¿ Ê¿ ÊC¿ ÊJ¿ ÊN¿ ÊO¿ Ên¿ Êé¿ ÊÆ¿ Ê≤¿ Ê≥¿ ÊÎ¿ Á¿ Á?¿ ÁZ¿ ÁÑ¿ Á¨¿ Á≤¿ Á‘¿ ÁÙ¿ Ë¿ Ë>¿ Ëx¿ ËÅ¿ Ë¥¿ Ë‡¿ È
¿ È^¿ Èá¿ È–¿ Èı¿ Í¿ Íj¿ Íâ¿ Í»¿ Î¿ Î¿ ÎK¿ ÎW¿ Î™¿ Î¸¿ ÏA¿ Ï†¿ Ï≤¿ Ï˜¿ Ì:¿ ÌG¿ Ìh¿ Ì∫¿ ÌÍ¿ Ó¿ Ó6¿ ÓC¿ ÓT¿ Óì¿ ÓÃ¿ Ô¿ ÔI¿ Ô\¿ Ô∏¿ ÔÌ¿ Ô˘¿ ¿ ¿ >¿ é¿ Í¿ Ò)¿ Òb¿ Òu¿ Ò¨¿ Ò∏¿ Ò…¿ Ú¿ ÚQ¿ Ú[¿ Úc¿ Úp¿ Ú√¿ Û.¿ Ûk¿ Ûû¿ Û ¿ ÛÙ¿ ÙE¿ Ùï¿ Ùÿ¿ ı,¿ ıU¿ ıû¿ ı√¿ ı‚¿ ˆ8¿ ˆ9¿ ˆX¿ ˆ∑¿ ˆ…¿ ˜¿ ˜Q¿ ˜^¿ ˜¿ ˜‚¿ ˜˚¿ ¯¿ ¯¿ ¯¿ ¯ ¿ ¯G¿ ¯K¿ ¯L¿ ¯Ç¿ ¯©¿ ¯÷¿ ¯Ò¿ ˘¿ ˘C¿ ˘I¿ ˘k¿ ˘ã¿ ˘ô¿ ˘’¿ ˙¿ ˙¿ ˙K¿ ˙w¿ ˙°¿ ˙˜¿ ˚ ¿ ˚i¿ ˚é¿ ˚≠¿ ¸¿ ¸$¿ ¸e¿ ¸û¿ ¸±¿ ¸Ë¿ ¸Ù¿ ˝G¿ ˝ô¿ ˝ﬁ¿ ˛?¿ ˛Q¿ ˛ñ¿ ˛Ÿ¿ ˛Ê¿ ˇ¿ ˇ[¿ ˇã¿ ˇæ¿ ˇÿ¿ ˇÂ¿ ˇˆ¿ 7¿ p¿ ∏¿ Ô¿¿^¿ë¿ù¿ß¿∂¿‰¿4¿é¿œ¿¿¿R¿^¿o¿¨¿ı¿ˇ¿¿¿g¿“¿¿B¿n¿ò¿È¿9¿|¿“¿˚¿D¿i¿¡¿›¿¸¿]¿o¿¥¿˜¿	¿	%¿	à¿	¢¿	Ø¿	π¿	¡¿	«¿	Ó¿	Ú¿	Û¿
)¿
F¿
_¿
ï¿
ú¿
Ó¿F¿¶¿Ï¿.¿/¿^¿ú¿¥¿¿%¿m¿s¿∂¿√¿ÿ¿¿	¿
¿\¿Æ¿ˇ¿Q¿u¿ª¿ﬂ¿Ô¿¿K¿ç¿À¿¿j¿…¿#¿K¿f¿l¿®¿¥¿Á¿¿"¿:¿`¿Ñ¿í¿«¿„¿¿¿@¿d¿s¿z¿{¿¥¿‚¿¿¿¿<¿c¿i¿π¿	¿[¿u¿ª¿ø¿¿¿¿F¿Ñ¿ú¿Ù¿¿U¿[¿û¿´¿¿¿Í¿Ò¿Ú¿(¿^¿e¿ò¿¿¿„¿È¿¿:¿@¿ê¿‡¿2¿L¿í¿ñ¿ó¿‰¿*¿z¿é¿ì¿„¿-¿}¿Ç¿—¿˙¿E¿x¿ú¿∑¿·¿	¿¿-¿^¿à¿∞¿  ¿ ¿ v¿ ù¿ Ô¿! ¿!|¿! ¿"¿"g¿"∑¿"Ë¿#0¿#K¿#i¿#§¿#ﬂ¿#Ò¿$¿$+¿$6¿$a¿$í¿$∆¿$˝¿%X¿%Ö¿%¬¿%ˆ¿&1¿&B¿&ú¿&˘¿'¿'"¿'C¿'c¿'«¿'÷¿'Ô¿'¸¿(¿(W¿(Ñ¿( ¿)¿)N¿)u¿)¿)ƒ¿*¿*2¿*<¿*c¿*«¿*Ô¿*˚¿+^¿+ã¿+ó¿+®¿,¿,0¿,<¿,õ¿,ƒ¿,–¿,⁄¿,È¿-7¿-w¿-¬¿.¿.^¿.≠¿.˝¿/.¿/v¿/ë¿/Ø¿/Í¿0%¿07¿0]¿0q¿0|¿0≈¿1¿10¿1:¿1Ç¿1¬¿1È¿1Û¿2:¿2û¿2ﬁ¿3¿3¿3Y¿3ª¿3˚¿4&¿40¿48¿4E¿4î¿4ﬁ¿52¿5i¿5í¿5Ô¿60¿6E¿6M¿6w¿6”¿6˙¿7V¿7î¿7“¿8 ¿8M¿8í¿8’¿9'¿9R¿9\¿9ü¿9‡¿:0¿:W¿:a¿:Ç¿:∆¿;+¿;S¿;_¿;¢¿;Ù¿<¿<)¿<:¿<ü¿<Ê¿=¿=¿=g¿=è¿=õ¿=•¿=≠¿=≥¿=ƒ¿=»¿=…¿>¿>Z¿>™¿>æ¿>√¿?¿?[¿?´¿?∞¿@¿@*¿@s¿@¶¿@ ¿@Â¿A¿A7¿A=¿AZ¿Aã¿Aµ¿A›¿B-¿BA¿B£¿B ¿C¿CM¿C©¿C˜¿DI¿Dõ¿DÎ¿E¿Ed¿E¿E¶¿Eƒ¿F¿F>¿FQ¿Fe¿Fp¿Fõ¿FÃ¿G¿G7¿Gí¿Gø¿G¸¿H0¿Hk¿H|¿H÷¿I3¿I=¿I\¿I}¿Iù¿J¿J¿J*¿J7¿JA¿Jí¿Jø¿K¿KH¿Kâ¿K∞¿K∫¿Kˇ¿LB¿Lm¿Lw¿Lû¿L˛¿M&¿M2¿Më¿M∫¿M∆¿M◊¿N;¿Nc¿No¿N“¿Nˇ¿O¿O¿O$¿Or¿O≤¿O˝¿PK¿Pù¿PÔ¿Q?¿Qp¿Q∏¿Q”¿Q˙¿R¿RU¿Rí¿R•¿Rπ¿Rƒ¿S¿Sp¿S∞¿S€¿SÂ¿T-¿Tí¿T“¿T˘¿U¿UJ¿Uä¿U±¿Uª¿V¿VE¿Vp¿Vz¿VÇ¿Vè¿Vﬁ¿W(¿W|¿W≥¿W‹¿X9¿Xz¿Xè¿Xó¿X√¿Y¿YF¿Y†¿Yﬁ¿Z¿ZH¿Zï¿Z⁄¿[¿[o¿[ö¿[§¿[Á¿\(¿\x¿\ü¿\©¿\ ¿]/¿]v¿]£¿]Ø¿]˜¿^¿^+¿^<¿^Ä¿^Â¿_¿_¿_\¿_Æ¿_◊¿_„¿_Ì¿_ı¿_˚¿`¿`¿`¿`K¿`é¿`∑¿`º¿a¿aO¿aï¿aÂ¿a˘¿a˛¿bQ¿bû¿b¿c$¿c)¿cÖ¿cÆ¿d¿d9¿dT¿dx¿dì¿dΩ¿dÂ¿dÎ¿e	¿e:¿ed¿eå¿e‹¿e¿fR¿fó¿fÈ¿g¿g^¿gy¿gû¿g≤¿g‘¿gÙ¿gˇ¿h¿hS¿hs¿h¡¿h⁄¿hÚ¿h˚¿iR¿ix¿iÅ¿i‰¿j
¿j¿j>¿jè¿jﬂ¿k"¿kÖ¿kÕ¿k˙¿l¿l¿lc¿ló¿l≠¿l∏¿l„¿m¿mH¿m¿m§¿mˇ¿nE¿nÇ¿nœ¿o
¿o¿ou¿o®¿o≤¿o—¿p¿p!¿pr¿pü¿pÂ¿qB¿q]¿qh¿q≠¿qÌ¿r@¿rK¿r®¿s¿s*¿s4¿sì¿s¿t¿t%¿tL¿t¨¿t‘¿t‡¿u?¿uh¿ut¿uÖ¿uÈ¿v¿v¿vÄ¿v≠¿vπ¿v√¿v“¿w"¿wb¿wm¿w¿¿x¿x@¿xá¿xÆ¿x÷¿y¿y¿yf¿yô¿yˆ¿z¿z¿za¿z°¿zÙ¿zˇ¿{¿{_¿{ò¿{Í¿|¿|¿|@¿|Ä¿|∑¿}¿}.¿}8¿}X¿}ò¿}œ¿~¿~e¿~å¿~ñ¿~∑¿~˜¿0¿v¿»¿Û¿˝¿Ä¿Ä¿Äg¿Äπ¿Äﬁ¿Å¿ÅL¿Åg¿Åå¿Å†¿Å¬¿Å‚¿ÅÌ¿Åı¿Ç¿Çr¿ÇØ¿Ç‘¿ÇÎ¿Çı¿É>¿É£¿É ¿É’¿Ñ8¿Ñc¿Ñ¿Ñ√¿ÑÓ¿Ö¿Ö6¿ÖM¿ÖW¿Ö~¿Ö⁄¿Ü¿ÜV¿ÜÑ¿Ü—¿á2¿á_¿áu¿áÄ¿á›¿á¯¿à¿àH¿àà¿à€¿àÊ¿â5¿ân¿âª¿âÙ¿äF¿äq¿ä{¿ä ¿ã¿ãN¿ãÖ¿ã’¿ã¸¿å¿å'¿åw¿å¨¿å˛¿ç&¿ç2¿çÅ¿ç∂¿é¿é1¿é=¿éN¿é†¿é◊¿è+¿èS¿è_¿è∞¿èÁ¿ê;¿êh¿êt¿ê~¿êÜ¿êå¿êù¿ê°¿ê¢¿êÌ¿ë3¿ëÉ¿ëó¿ëú¿ëÌ¿í?¿íå¿í¿¿í≈¿ì¿ìN¿ì§¿ì◊¿ìÚ¿î¿î1¿î[¿îÉ¿îâ¿î¶¿î◊¿ï¿ï)¿ïy¿ïç¿ïÔ¿ñ4¿ñÜ¿ñ¥¿ñ˘¿ó¿ó9¿óM¿óo¿óè¿óö¿ó¢¿óÓ¿ò¿ò\¿òu¿òç¿òñ¿òÌ¿ô¿ô¿ô¿ô•¿ôÆ¿ôŸ¿ö*¿öz¿öΩ¿õ ¿õh¿õï¿õ´¿õ∂¿õ˛¿ú2¿úH¿úS¿ú~¿úØ¿úÂ¿ù¿ù?¿ùö¿ù‡¿û¿ûj¿û•¿û∂¿ü¿üA¿üK¿üj¿üØ¿üπ¿†
¿†7¿†}¿†⁄¿†ı¿° ¿°E¿°Ö¿°ÿ¿°„¿¢@¿¢õ¿¢¬¿¢Ã¿£+¿£à¿£≥¿£Ω¿£‰¿§D¿§l¿§x¿§◊¿• ¿•¿•¿•Å¿•©¿•µ¿¶¿¶E¿¶Q¿¶[¿¶j¿¶∫¿¶˙¿ß¿ßX¿ß©¿ßÿ¿®¿®F¿®n¿®ú¿®ß¿®˛¿©1¿©é¿©©¿©¥¿©˘¿™9¿™å¿™ó¿™∑¿™˜¿´0¿´u¿´«¿´Ú¿´¸¿¨¿¨]¿¨î¿¨Ÿ¿≠)¿≠P¿≠Z¿≠z¿≠∫¿≠Ò¿ÆA¿Æh¿Ær¿Æì¿Æ”¿Ø¿Ø^¿Øâ¿Øì¿Øõ¿Ø®¿Ø˝¿∞O¿∞t¿∞õ¿∞‡¿∞˚¿± ¿±4¿±V¿±v¿±Å¿±â¿±µ¿≤¿≤E¿≤j¿≤Å¿≤ã¿≤‘¿≥9¿≥`¿≥k¿≥Œ¿≥˘¿¥¿¥Y¿¥Ñ¿¥ß¿¥Ã¿¥„¿¥Ì¿µ¿µn¿µ¨¿µÍ¿∂¿∂c¿∂ƒ¿∂Ò¿∑¿∑¿∑o¿∑ä¿∑ï¿∑⁄¿∏¿∏m¿∏x¿∏«¿π ¿πM¿πÜ¿πÿ¿∫¿∫¿∫\¿∫ì¿∫‡¿ª¿ªg¿ªé¿ªò¿ªπ¿º¿ºB¿ºñ¿ºæ¿º ¿Ω¿ΩR¿Ω¶¿Ω”¿Ωﬂ¿Ω¿æ@¿æu¿æ«¿æÔ¿æ˚¿øJ¿ø¿ø—¿ø˙¿¿¿¿¿¿¿¿¿¿/¿¿3¿¿4¿¿y¿¿ñ¿¿Ø¿¿Î¿¡(¿¡/¿¡Å¿¡Ÿ¿¬9¿¬¿¬¡¿¬¬¿¬Ò¿√/¿√G¿√ü¿√∏¿ƒ ¿ƒ¿ƒI¿ƒV¿ƒk¿ƒï¿ƒú¿ƒÚ¿≈¿≈$¿≈N¿≈U¿≈V¿≈®¿≈Ù¿∆¿∆$¿∆%¿∆H¿∆d¿∆y¿∆»¿∆Á¿«¿«B¿«d¿«ä¿«Æ¿«º¿»¿»,¿»J¿»á¿»©¿»œ¿»Û¿…¿…¿…$¿…f¿…Ö¿…¬¿…‰¿ 
¿ .¿ <¿ Ä¿ ü¿ ‹¿ ˛¿À$¿ÀH¿ÀW¿À]¿Àw¿Àå¿Àí¿Àì¿ÀÂ¿Ã6¿Ãà¿Ã¨¿Ã˙¿Õ%¿Õ5¿ÕU¿Õë¿Õ”¿Œ¿ŒQ¿Œ∞¿œ¿œi¿œë¿œ¨¿œ≤¿œÓ¿œ˙¿–-¿–I¿–o¿–á¿–≠¿–—¿–ﬂ¿—¿—0¿—V¿—n¿—î¿—∏¿—«¿—Œ¿—œ¿“¿“6¿“Y¿“_¿“`¿“ê¿“∑¿“Ω¿”¿”]¿”Ø¿”…¿‘¿‘¿‘¿‘s¿‘Ã¿’#¿’Å¿’Ö¿’Ü¿’†¿’‰¿÷¿÷0¿÷X¿÷m¿÷u¿÷ï¿÷õ¿÷≠¿÷±¿÷≤¿÷‹¿◊#¿◊n¿◊µ¿◊Ë¿ÿ5¿ÿs¿ÿ°¿ÿ«¿ÿÂ¿Ÿ¿ŸE¿ŸÅ¿Ÿ€¿⁄¿⁄W¿⁄Ä¿⁄ï¿⁄£¿⁄Ø¿⁄Â¿€¿€"¿€,¿€4¿€T¿€Z¿€É¿€á¿€à¿€‡¿€˚¿‹¿‹I¿‹ì¿‹ﬂ¿›-¿›T¿›r¿›ö¿›·¿ﬁ¿ﬁU¿ﬁq¿ﬁã¿ﬁñ¿ﬁË¿ﬂ¿ﬂ¿ﬂJ¿ﬂü¿ﬂ©¿ﬂ±¿ﬂ—¿ﬂ◊¿ﬂË¿ﬂÏ¿ﬂÌ¿‡¿‡K¿‡p¿‡Ö¿‡ç¿‡ì¿‡•¿‡©¿‡™¿‡Â¿·¿·6¿·ê¿·ﬂ¿·Â¿‚¿‚>¿‚D¿‚Y¿‚]¿‚^¿‚¨¿‚Ω¿‚·¿‚Ó¿„¿„¿„¿„¿„K¿„k¿„â¿„º¿„›¿„·¿„‚¿‰	¿‰F¿‰†¿‰¡¿‰≈¿‰∆¿Â¿Âj¿Â∏¿Ê¿Ê-¿Êh¿Ê¢¿Ê…¿Á
¿ÁA¿Ád¿Áj¿Á∫¿Á⁄¿ÁÊ¿Ë ¿ËX¿Ë_¿Ëï¿Ë«¿Ë˘¿È¿È¿È¿ÈR¿Èn¿Èä¿Èø¿ÈÓ¿Í¿Í#¿ÍY¿Í_¿Íp¿Ít¿Íu¿Í“¿Î&¿Ît¿Îƒ¿ÎÈ¿Ï$¿Ï^¿ÏÖ¿Ï∆¿Ï˝¿Ì ¿Ì&¿ÌW¿Ìá¿Ì≥¿Ì∫¿Ó¿Ó&¿Ón¿Ó≤¿ÓÊ¿Ô¿ÔD¿ÔL¿Ôn¿Ôt¿Ôï¿Ôô¿Ôö¿Ôˇ¿"¿C¿q¿¨¿π¿Ò¿ÒF¿ÒL¿ÒÅ¿ÒÖ¿ÒÜ¿Ò√¿Ú¿Ú4¿Ú;¿Úû¿Ú¿¿Ú∆¿Û¿ÛM¿ÛQ¿ÛR¿Ûú¿Û‹¿Û˚¿Ù5¿Ù9¿Ù:¿Ù|¿Ù∆¿ı¿ıj¿ız¿ıä¿ıë¿ı◊¿ı€¿ı‹¿ˆ&¿ˆo¿ˆ∞¿˜ ¿˜R¿˜g¿˜k¿˜l¿˜»¿¯¿¯l¿¯ö¿¯π¿¯Ì¿˘D¿˘h¿˘â¿˘ñ¿˘°¿˘æ¿˙¿˙m¿˙ñ¿˙⁄¿˙ﬁ¿˙ﬂ¿˚5¿˚Ç¿˚›¿¸¿¸$¿¸X¿¸≥¿¸◊¿¸¯¿˝¿˝¿˝'¿˝Ä¿˝≤¿˝»¿˝Ì¿˛¿˛¿˛G¿˛[¿˛Ä¿˛ñ¿˛Æ¿ˇ¿ˇ1¿ˇu¿ˇy¿ˇz¿ˇ±¿ˇ–¿ˇ„¿ 
¿ ¿ N¿ s¿ ç¿ ¡¿ Ò¿¿L¿{¿¢¿™¿∞¿˛¿¿4¿>¿q¿ï¿∑¿œ¿¿/¿y¿Ÿ¿5¿M¿°¿·¿Ï¿¿5¿b¿ê¿€¿¿[¿é¿Ó¿G¿_¿j¿Æ¿ÿ¿!¿Å¿å¿Ë¿	¿	¿	(¿	O¿	\¿	Ö¿	ã¿	û¿	¢¿	£¿	◊¿	È¿	¸¿
¿
#¿
E¿
q¿
Ω¿
Ï¿H¿Å¿§¿™¿Ê¿¿¿5¿Y¿t¿ö¿“¿¿$¿7¿Z¿e¿ã¿¨¿¿o¿ï¿ª¿Û¿-¿E¿X¿{¿Ü¿¨¿Õ¿.¿T¿y¿±¿Î¿¿¿8¿C¿}¿¶¿Í¿¿(¿P¿Z¿`¿a¿u¿ú¿©¿“¿ÿ¿Î¿Ô¿¿A¿å¿›¿˜¿*¿@¿R¿q¿w¿ô¿„¿3¿_¿c¿d¿≥¿¿2¿a¿w¿â¿®¿Æ¿À¿Ê¿¿$¿N¿q¿°¿´¿¸¿¿(¿9¿ú¿¨¿ª¿ﬂ¿¿¿&¿q¿æ¿Á¿Î¿Ï¿/¿L¿ä¿£¿™¿˛¿J¿r¿®¿÷¿¿¿¿!¿E¿y¿œ¿¸¿3¿@¿Ö¿≠¿’¿*¿5¿>¿D¿f¿ì¿º¿Ó¿¿ ¿D¿J¿¿π¿ ¿ ¿ ¿ O¿ \¿ b¿ ö¿ ‹¿! ¿!4¿!:¿!^¿!Ç¿!§¿!Û¿"¿"E¿"R¿"{¿"§¿"™¿"Î¿#%¿#)¿#*¿#M¿#S¿#®¿#∆¿$¿$P¿$`¿$ô¿$™¿$Ë¿$¯¿%¿%G¿%M¿%Q¿%R¿%^¿%ë¿%¿¿%ƒ¿%≈¿%—¿&¿&8¿&ê¿&û¿&§¿&‘¿&ˇ¿'!¿''¿'S¿'z¿'ú¿'¢¿'¶¿'ß¿'À¿'◊¿'¯¿( ¿(b¿(´¿(⁄¿(„¿)¿)*¿)Y¿)ê¿)ö¿)©¿*¿*6¿*H¿*î¿*ü¿*Ã¿*‘¿*⁄¿*¸¿+ ¿+¿+¿+)¿+H¿+ä¿+”¿+‹¿+˙¿,&¿,f¿,®¿,≤¿,–¿,ﬂ¿-A¿-h¿-z¿-∆¿-—¿-Ÿ¿-ﬂ¿-¯¿-¸¿-˝¿.!¿.9¿.Z¿.^¿._¿.k¿.ü¿.†¿.¨¿.æ¿.’¿.Ÿ¿.⁄¿/¿/U¿/c¿/i¿/ï¿/ ¿/˚¿0,¿05¿0`¿0Ö¿0≤¿1¿1T¿1\¿1b¿1∞¿1…¿1ﬁ¿2¿2K¿2V¿2ã¿2†¿2©¿2Ø¿2˘¿3¿3'¿3M¿3ê¿3õ¿3–¿3Â¿3Ó¿3Ù¿3¯¿3˘¿4¿4>¿4¿4ø¿4˚¿5;¿5?¿5@¿5L¿5â¿5”¿5◊¿5ÿ¿5‰¿6!¿6k¿6o¿6p¿6|¿6◊¿6ÿ¿6‰¿7)¿7T¿7¥¿7¯¿8?¿8C¿8E   
_kEllipsis PlaceholderSpanIndexSemanticsTagTextParentData%RenderInlineChildrenContainerDefaults_UnspecifiedTextScalerRenderParagraph_SelectableFragment  ∑@
~typeadaptcopyWithlerppadded
shrinkWrapgetAdaptation_createAdaptationMap
brightnessapplyElevationOverlayColorcupertinoOverrideTheme
extensions	extensionadaptationMapinputDecorationThemematerialTapTargetSizepageTransitionsThemeplatformscrollbarThemesplashFactoryuseMaterial3visualDensitycanvasColor	cardColorcolorSchemedisabledColordividerColor
focusColorhighlightColor	hintColor
hoverColorprimaryColorprimaryColorDarkprimaryColorLightscaffoldBackgroundColorsecondaryHeaderColorshadowColorsplashColorunselectedWidgetColor	iconThemeprimaryIconThemeprimaryTextTheme	textTheme
typographyactionIconThemeappBarTheme
badgeThemebannerThemebottomAppBarThemebottomNavigationBarThemebottomSheetThemebuttonTheme	cardThemecarouselViewThemecheckboxTheme	chipThemedataTableThemedatePickerThemedialogThemedividerThemedrawerThemedropdownMenuThemeelevatedButtonThemeexpansionTileThemefilledButtonThemefloatingActionButtonThemeiconButtonThemelistTileThememenuBarThememenuButtonTheme	menuThemenavigationBarThemenavigationDrawerThemenavigationRailThemeoutlinedButtonThemepopupMenuThemeprogressIndicatorTheme
radioThemesearchBarThemesearchViewThemesegmentedButtonThemesliderThemesnackBarThemeswitchThemetabBarThemetextButtonThemetextSelectionThemetimePickerThemetoggleButtonsThemetooltipThemebuttonBarTheme_buttonBarThemedialogBackgroundColorindicatorColor_localizedThemeDataCacheSize_localizedThemeDataCachelocalizeestimateBrightnessForColor_lerpThemeExtensions_themeExtensionIterableToMap_overrideWithSystemColors==hashCodedebugFillProperties_materialTheme_cupertinoOverrideThemeprimaryContrastingColorresolveFrommaterialTheme	baseThemelocalTextGeometry_cache_maximumSizeputIfAbsentminimumDensitymaximumDensitystandardcomfortablecompactadaptivePlatformDensitydefaultDensityForPlatform
horizontalverticalbaseSizeAdjustmenteffectiveConstraintstoStringShort
AdaptationThemeExtensionMaterialTapTargetSize	ThemeDataMaterialBasedCupertinoThemeDataCupertinoBasedMaterialThemeData_IdentityThemeDataCacheKey
_FifoCacheVisualDensity_colorSchemeLightM3_colorSchemeDarkM3Å‡ColorSystemColorSystemColorPalette
lerpDoubleInteractiveInkFeatureFactory
BrightnessSwitchadaptiveTypeSwitchThemeDataadaptationMapObjectdoublematerialTapTargetSizeFloatingActionButtonMaterialButtonOutlinedButton
TextButtonElevatedButton
IconButtonshowTimePickerSnackBarChipRawChip	InputChip
ChoiceChip
FilterChip
ActionChipRadioCheckboxThemeMaterialAppofBuildContextBuilderColorScheme	immutableDiagnosticablecolorSchemeSeedfromSeedcopyWithprimarySwatch	TextStylelightdarkuseSystemColorsfromIterableboolNoDefaultCupertinoThemeDatadynamicPageTransitionsThemeTargetPlatformScrollbarThemeDataMaterialColorStringListIconThemeData	TextTheme
TypographyActionIconThemeDataBadgeThemeDataMaterialBannerThemeDataBottomAppBarThemeDataBottomNavigationBarThemeDataBottomSheetThemeDataButtonThemeDataCardThemeDataCarouselViewThemeDataCheckboxThemeDataChipThemeDataDataTableThemeDataDatePickerThemeDataDialogThemeDataDividerThemeDataDrawerThemeDataDropdownMenuThemeDataElevatedButtonThemeDataExpansionTileThemeDataFilledButtonThemeDataFloatingActionButtonThemeDataIconButtonThemeDataListTileThemeDataMenuBarThemeDataMenuButtonThemeDataMenuThemeDataNavigationBarThemeDataNavigationDrawerThemeDataNavigationRailThemeDataOutlinedButtonThemeDataPopupMenuThemeDataProgressIndicatorThemeDataRadioThemeDataSearchBarThemeDataSearchViewThemeDataSegmentedButtonThemeDataSliderThemeDataSnackBarThemeDataTabBarThemeDataTextButtonThemeDataTextSelectionThemeDataTimePickerThemeDataToggleButtonsThemeDataTooltipThemeData
DeprecatedButtonBarThemeData	noDefaultadaptationsInputDecorationThemedataInputDecorationThemeDataArgumentErrordefaultTargetPlatformandroidfuchsiaiOSpaddedlinuxmacOSwindows
shrinkWrapdefaultDensityForPlatformkIsWeb
InkSparklesplashFactory	InkRipple	InkSplash
brightness	seedColorsurfaceprimary	onSurface	onPrimaryoutlineColorsbluegreyblackwhitewithOpacity
fromSwatchaccentColor
tealAccent	cardColorbackgroundColor
errorColorredwhite70black54white60colorSchemebuttonColordisabledColor
focusColor
hoverColorhighlightColorsplashColorwhite38black38material2021platformmaterial2014
fontFamilyapplyfontFamilyFallbackpackagemergecolorkDefaultIconLightColorkDefaultIconDarkColorAppBarThemeAppBarThemeData	secondaryrawapplyElevationOverlayColorcupertinoOverrideTheme
extensionsinputDecorationThemepageTransitionsThemescrollbarThemeuseMaterial3visualDensitycanvasColordividerColor	hintColorprimaryColorprimaryColorDarkprimaryColorLightscaffoldBackgroundColorsecondaryHeaderColorshadowColorunselectedWidgetColor	iconThemeprimaryTextTheme	textTheme
typographyprimaryIconThemeactionIconThemeappBarTheme
badgeThemebannerThemebottomAppBarThemebottomNavigationBarThemebottomSheetThemebuttonTheme	cardThemecarouselViewThemecheckboxTheme	chipThemedataTableThemedatePickerThemedialogThemedividerThemedrawerThemedropdownMenuThemeelevatedButtonThemeexpansionTileThemefilledButtonThemefloatingActionButtonThemeiconButtonThemelistTileThememenuBarThememenuButtonTheme	menuThemenavigationBarThemenavigationDrawerThemenavigationRailThemeoutlinedButtonThemepopupMenuThemeprogressIndicatorTheme
radioThemesearchBarThemesearchViewThemesegmentedButtonThemesliderThemesnackBarThemeswitchThemetabBarThemetextButtonThemetextSelectionThemetimePickerThemetoggleButtonsThemetooltipThemebuttonBarThemedialogBackgroundColorindicatorColor_overrideWithSystemColorslocalizeMap
adaptationtypeMaterialsurfaceTintColor	elevationElevationOverlayapplyOverlayCupertinoThemeDataCupertinoThemenewInputDecorationInputDecorator	TextFieldTextFormFieldapplyDefaultsMaterialPageRoutebuildTransitionsPageTransitionsBuilder"debugDefaultTargetPlatformOverride	ScrollbarInkWellInkResponseBadgeBottomAppBarBottomSheetFilledButtontonalextendedfilledfilledTonaloutlinedSegmentedButtonToggleButtonsCardCheckboxListTileshowDatePickershowDateRangePickerDatePickerDialogDateRangePickerDialogInputDatePickerFormFieldAlertDialogDialog
fullscreenDividerVerticalDividerListTile
MenuAnchorDropdownMenuMenuBarNavigationBarBottomNavigationBarNavigationDrawerDrawerNavigationRailCircularProgressIndicatorLinearProgressIndicatorRadioListTile	SearchBarSearchAnchorSliderRangeSliderSwitchListTileTabBarTimePickerDialogAppBarSliverAppBarmediumlargeMaterialScrollBehaviorminimumDensitymaximumDensitystandardPopupMenuDivider	DataTable
BorderSidecreateBorderSideScaffoldPaginatedDataTableBackButtonIconCloseButtonIconDrawerButtonIconEndDrawerButtonIconMaterialBannerDropdownButton	ButtonBar	CardThemeCarouselView	ChipThemeExpansionTile	MenuStyleSubmenuButtonMenuItemButtonProgressIndicatorSliderThemeTooltipTooltipThemeintinheritputIfAbsentcomputeLuminancemapidMapEntry
extensionAlerp
addEntriesentrieswherecontainsKeyentrykeyunmodifiableplatformProvidesSystemColorsvalueonSecondaryaccentColorTextcanvas
canvasTextdisplayColor	bodyColor
buttonFacebuttonBorder
buttonTextstyle	styleFromforegroundColorsidefield	fieldText	fillColor
labelStyle	hintStylehelperStyleprefixStylesuffixStylecounterStyle	identicaloverrideruntimeType	mapEqualskeysvalueshashAllvoidDiagnosticPropertiesBuilderdebugFillPropertiesfallbackaddIterablePropertydefaultValuelevelDiagnosticLeveldebugDiagnosticsPropertyEnumPropertyColorProperty_materialThemeprimaryContrastingColorbarBackgroundColorselectionHandleColorapplyThemeToAllCupertinoTextThemeDataresolveFromCupertinoApp	themeDataidentityHashCode	baseThemelocalTextGeometrylengthremovefirstRawMaterialButton
horizontalverticalOffsetBoxConstraintsdebugAssertIsValidminWidthclampDoubledxmaxWidth	minHeightdy	maxHeighthashDoublePropertytoStringShortdebugFormatDoubleprimaryContaineronPrimaryContainerprimaryFixedprimaryFixedDimonPrimaryFixedonPrimaryFixedVariantsecondaryContaineronSecondaryContainersecondaryFixedsecondaryFixedDimonSecondaryFixedonSecondaryFixedVarianttertiary
onTertiarytertiaryContaineronTertiaryContainertertiaryFixedtertiaryFixedDimonTertiaryFixedonTertiaryFixedVarianterroronErrorerrorContaineronErrorContainer
backgroundonBackgroundsurfaceBrightsurfaceContainerLowestsurfaceContainerLowsurfaceContainersurfaceContainerHighsurfaceContainerHighest
surfaceDimsurfaceVariantonSurfaceVariantoutlineVariantshadowscriminverseSurfaceonInverseSurfaceinversePrimarysurfaceTintDiagnosticableCupertinoThemeData~LNÖØ Ù8å¨ƒ≥«ë†â∂â≈
Brightness âèpackage:flutter/services.dart DÄÅ'ColorSystemColorSystemColorPalette
lerpDouble Ä‡   dart:ui  Å+   package:flutter/cupertino.dart  ÅT   package:flutter/foundation.dart  Å   action_buttons.dart  Åù   action_icons_theme.dart  Åø   app_bar_theme.dart  Å‹   badge_theme.dart  Å˜   banner_theme.dart  Ç   bottom_app_bar_theme.dart  Ç7    bottom_navigation_bar_theme.dart  Çb   bottom_sheet_theme.dart  ÇÑ   button_bar_theme.dart  Ç§   button_theme.dart  Ç¿   card_theme.dart  Ç⁄   carousel_theme.dart  Ç¯   checkbox_theme.dart  É   chip_theme.dart  É0   color_scheme.dart  ÉL   colors.dart  Éb   constants.dart  É{   data_table_theme.dart  Éõ   date_picker_theme.dart  Éº   dialog_theme.dart  Éÿ   divider_theme.dart  Éı   drawer_theme.dart  Ñ   dropdown_menu_theme.dart  Ñ4   elevated_button.dart  ÑS   elevated_button_theme.dart  Ñx   expansion_tile_theme.dart  Ñú   filled_button.dart  Ñπ   filled_button_theme.dart  Ñ‹   !floating_action_button_theme.dart  Ö   icon_button_theme.dart  Ö)   ink_ripple.dart  ÖC   ink_sparkle.dart  Ö^   ink_splash.dartÖéÖØInteractiveInkFeatureFactory Öx   ink_well.dart  Ö≤   input_decorator.dart  Ö—   list_tile.dart  ÖÍ   list_tile_theme.dart  Ü	   menu_bar_theme.dart  Ü'   menu_button_theme.dart  ÜH   menu_theme.dart  Üb   navigation_bar_theme.dart  ÜÜ   navigation_drawer_theme.dart  Ü≠   navigation_rail_theme.dart  Ü“   outlined_button.dart  ÜÒ   outlined_button_theme.dart  á   page_transitions_theme.dart  á<   popup_menu_theme.dart  á\   progress_indicator_theme.dart  áÑ   radio_theme.dart  áü   scrollbar_theme.dart  áæ   search_bar_theme.dart  áﬁ   search_view_theme.dart  áˇ   segmented_button_theme.dart  à%   slider_theme.dart  àA   snack_bar_theme.dart  à`   switch_theme.dart  à|   tab_bar_theme.dart  àô   text_button.dart  à¥   text_button_theme.dart  à’   text_selection_theme.dart  à˘   text_theme.dart  â   time_picker_theme.dart  â4   toggle_buttons_theme.dart  âX   tooltip_theme.dart  âu   typography.dart¿ ¯œ ¿§ç† <ÄÜÄ§Ä•Ä’ÄﬁÄﬂÅ)Å*ÅSÅ}Å~ÅúÅæÅ€ÅˆÇÇ6ÇaÇÉÇ£ÇøÇŸÇ˜ÉÉ/ÉKÉaÉzÉöÉªÉ◊ÉÙÑÑ3ÑRÑwÑõÑ∏Ñ€ÖÖ(ÖBÖ]ÖwÖ±Ö–ÖÈÜÜ&ÜGÜaÜÖÜ¨Ü—Üáá;á[áÉáûáΩá›á˛à$à@à_à{àòà≥à‘à¯ââ3âWâtâéâèâ«â»â‡â˛âˇäUäYäîä™ä…äﬂä‡ä˝ãããdã∞ã∂ã˚å<åçå›ç*ç{ç¶ç¨ç¬éé`é∞é›é„è*è<èxèzè{è√è«ê
êêWêßê¯ëëë&ëvëéëíëﬂëÔí,í[íuívííí™í´íÓìì?ì@ìÅìáì™ìÚìÙìıî@îDîêîÆî≤î‹î‡ï,ïEï^ïsïåï°ï”ïÊïıñññ0ñEñZñjñ{ñéñ´ñÊñÏó9ó|óìóùóûóËó˝òòòò^òÜòäò◊ô#ôfôjô∫ööYöÖöâöÿõ%õnõπú
úUúäúéú¢úÊù-ùsù∫ù˝û1û5ûÇûíûñû∆û˚û¸üü-ülürü¡††[†a†¨†ˆ°A°è°ﬂ¢¢¢c¢∞¢¸£2£8£~£Œ§§N§T§¢§ §–••b•h•©•ı¶¶ ¶Ö¶⁄ß:ßÄßÜßñßúßÁ®*®k®«®›©-©{©…©Ì©Ó™™:™`™ô™Ã´´;´m´ù´ª´„¨¨,¨G¨i¨v¨î¨∞¨Ã≠"≠s≠´≠√≠Ÿ≠ÛÆÆ#Æ>ÆTÆkÆÑÆ°ÆøÆ·ØØ&Ø>ØVØxØòØ∞Ø÷ØÎ∞	∞.∞O∞i∞Ö∞ù∞«±
±#±C±m±õ±◊≤≤%≤C≤q≤ó≤µ≤›≥≥)≥M≥o≥ù≥œ≥ˇ¥-¥k¥ï¥ª¥ﬂµ	µ'µWµçµøµÒ∂∂Q∂q∂ô∂√∂˜∑∑?∑a∑É∑≠∑›∏∏7∏[∏ë∏¢∏ƒπππ/π@πvπ≤π∏π⁄πÎ∫ ∫\∫b∫}∫Ñ∫°∫„ªª?ª¥ª‹ººPºñº≥ΩΩ$Ω,Ω2ΩqΩôΩ±Ω‘Ω˜ææVæwæòæªæˇøø@øsøºø◊øˆ¿ @D¿ @g¿ @¿ @®¿ @–¿ @Û¿ @Ù¿ A¿ A¿ A6¿ AV¿ Aá¿ AÃ¿ B¿ B1¿ B8¿ Bt¿ B≤¿ BÔ¿ C¿ C]¿ Cù¿ C–¿ Cı¿ D!¿ DG¿ Dr¿ D}¿ DÖ¿ DŒ¿ Dœ¿ E&¿ EÇ¿ E‰¿ EÂ¿ F1¿ F]¿ Fà¿ Fø¿ FË¿ G¿ GI¿ Gy¿ GΩ¿ G√¿ GÌ¿ H¿ HQ¿ H≤¿ H˛¿ ID¿ Ió¿ IÙ¿ JQ¿ Js¿ J∂¿ J„¿ K ¿ Kq¿ K∂¿ KÔ¿ L¿ L?¿ Lä¿ L¶¿ LÔ¿ M¿ M9¿ M@¿ Mà¿ Mÿ¿ N&¿ Nq¿ N¬¿ Nˇ¿ O$¿ OD¿ Oâ¿ O≠¿ OÀ¿ OÈ¿ P¿ P/¿ Pc¿ Pj¿ P™¿ P˝¿ QM¿ QN¿ Qn¿ Qé¿ Qﬁ¿ R¿ Rd¿ R¡¿ Rﬂ¿ S(¿ S¿ SÖ¿ S´¿ T¿ TC¿ Ts¿ T|¿ TÇ¿ Tù¿ T‡¿ U1¿ U7¿ Uj¿ U≤¿ UÀ¿ V¿ V9¿ V`¿ Vì¿ V«¿ V»¿ V‡¿ WC¿ Wb¿ Wä¿ W≤¿ WÊ¿ XD¿ XL¿ XR¿ X}¿ X≤¿ XÎ¿ Y2¿ Yi¿ Yí¿ YÀ¿ Y¸¿ Z%¿ ZX¿ Zç¿ Z∫¿ ZÈ¿ [¿ [O¿ [å¿ [«¿ \ ¿ \I¿ \~¿ \Ø¿ \ﬁ¿ ]¿ ]<¿ ]w¿ ]∏¿ ]ı¿ ^2¿ ^e¿ ^®¿ ^”¿ _¿ _;¿ _z¿ _ß¿ _ÿ¿ `¿ `2¿ `g¿ `¢¿ `◊¿ a¿ aA¿ aw¿ a™¿ aÛ¿ bX¿ bY¿ b~¿ b–¿ c ¿ cp¿ cñ¿ có¿ c∂¿ cÓ¿ d,¿ db¿ dû¿ dÏ¿ e ¿ eR¿ el¿ eí¿ e∂¿ eÿ¿ e¸¿ f¿ f+¿ fG¿ fg¿ fã¿ f≠¿ fÀ¿ fÒ¿ g¿ g+¿ gM¿ gw¿ g£¿ g€¿ h¿ h-¿ hM¿ hÅ¿ h£¿ hø¿ hÈ¿ i¿ i#¿ iM¿ ig¿ iè¿ iÛ¿ jD¿ jb¿ jÇ¿ jÆ¿ jË¿ k¿ k2¿ kN¿ kz¿ kû¿ k∫¿ k‡¿ l¿ l(¿ lJ¿ lj¿ lñ¿ l∆¿ lÙ¿ m ¿ m\¿ mÑ¿ m®¿ m ¿ mÚ¿ n¿ n<¿ np¿ n†¿ n–¿ nˆ¿ o,¿ oJ¿ op¿ oò¿ o ¿ oÍ¿ p¿ p.¿ pN¿ pv¿ p§¿ pÃ¿ p˙¿ q¿ qT¿ qz¿ qÆ¿ q‘¿ q€¿ q‹¿ q˜¿ r(¿ r.¿ r@¿ rD¿ rE¿ rë¿ rÃ¿ s¿ s
¿ sK¿ së¿ s∞¿ s»¿ t¿ tf¿ t¥¿ tÿ¿ tŸ¿ tˆ¿ u¿ uE¿ uo¿ uç¿ uµ¿ uﬁ¿ v¿ v"¿ vD¿ ve¿ vÖ¿ v¶¿ v≥¿ v“¿ w(¿ wy¿ w±¿ w–¿ wÌ¿ x¿ x.¿ xL¿ xn¿ xã¿ x©¿ x…¿ xÌ¿ y¿ y=¿ ye¿ yÑ¿ y£¿ yÃ¿ yÏ¿ z	¿ z-¿ zQ¿ zn¿ zå¿ z§¿ z«¿ zÊ¿ {¿ {#¿ {H¿ {t¿ {ò¿ {∑¿ {‘¿ {˘¿ |¿ |7¿ |Y¿ ||¿ |õ¿ |ª¿ |⁄¿ |ˇ¿ }&¿ }L¿ }q¿ }û¿ }¡¿ }‚¿ ~¿ ~%¿ ~B¿ ~h¿ ~ë¿ ~∏¿ ~ﬂ¿ ¿ +¿ I¿ k¿ é¿ ∂¿ ’¿ ˆ¿ Ä¿ Ä4¿ ÄW¿ Ä}¿ Ä†¿ Ä∆¿ ÄÊ¿ Å¿ Å-¿ ÅO¿ Åå¿ Åí¿ Å∫¿ ÅÀ¿ Ç¿ Ç=¿ ÇC¿ Çl¿ Ç}¿ Ç≤¿ ÇÓ¿ ÇÙ¿ É¿ ÉO¿ Éö¿ É√¿ ÉÍ¿ ÉÎ¿ Ñ9¿ Ñh¿ Ñn¿ Ñ™¿ Ñˆ¿ Ö@¿ ÖÜ¿ Öå¿ Ö◊¿ Ü&¿ Üb¿ Üh¿ Ü~¿ Ü…¿ ÜÌ¿ ÜÛ¿ á¿ á¿ á[¿ á•¿ á≠¿ á∑¿ á…¿ áœ¿ à¿ à8¿ àS¿ ày¿ àì¿ à´¿ à≤¿ àı¿ àˆ¿ âK¿ â•¿ ä¿ ä¿ ä¿ ä<¿ äf¿ äè¿ ä∑¿ äÎ¿ ã¿ ãN¿ ãÄ¿ ã≠¿ ã…¿ ãÛ¿ å¿ å¿ å ¿ å!¿ å>¿ åD¿ åí¿ å‡¿ ç¿ ç^¿ ç_¿ ç{¿ çÅ¿ çœ¿ é¿ éO¿ éô¿ éö¿ é‘¿ é⁄¿ è¿ è#¿ èq¿ èø¿ è≈¿ ê¿ ê)¿ êå¿ êç¿ ê“¿ êÿ¿ ë+¿ ëv¿ ëw¿ ë¥¿ ë‚¿ ëË¿ í<¿ íò¿ íü¿ íπ¿ íΩ¿ íæ¿ í‚¿ íË¿ ì0¿ ìt¿ ìß¿ ìﬁ¿ ìﬂ¿ î-¿ îy¿ î≈¿ îÁ¿ îË¿ ï¿ ï¿ ïR¿ ïs¿ ïy¿ ï∆¿ ñ¿ ñ^¿ ñl¿ ñr¿ ñæ¿ ó¿ óS¿ óû¿ ó€¿ ó·¿ ò¿ òZ¿ òß¿ òÚ¿ ô#¿ ô)¿ ôc¿ ôi¿ ô≥¿ ô˚¿ ö@¿ öo¿ öu¿ öÖ¿ öã¿ öŸ¿ öÒ¿ õ@¿ õq¿ õ¬¿ õÍ¿ ú¿ ú¿ ú_¿ ú}¿ úÉ¿ úÃ¿ ù¿ ùe¿ ù´¿ ù±¿ û¿ ûN¿ ûã¿ ûå¿ ûµ¿ ûª¿ ü¿ üE¿ üK¿ üz¿ üÄ¿ üñ¿ üË¿ †¿ †¿ †W¿ †i¿ †o¿ †¿ †Ö¿ †’¿ °¿ °¿ °U¿ °[¿ °†¿ °¶¿ °Ÿ¿ ¢¿ ¢¿ ¢W¿ ¢ô¿ ¢ü¿ ¢”¿ £¿ £	¿ £W¿ £ä¿ £ê¿ £ª¿ £Ú¿ £Û¿ §3¿ §9¿ §â¿ §“¿ §„¿ •¿ •¿ •]¿ •c¿ •±¿ •ˇ¿ ¶%¿ ¶X¿ ¶Y¿ ¶ô¿ ¶ü¿ ¶Ó¿ ß<¿ ßO¿ ßU¿ ß•¿ ßÓ¿ ®=¿ ®á¿ ®Ã¿ ©¿ ©[¿ ©¨¿ ©Â¿ ©Î¿ ™:¿ ™á¿ ™“¿ ´"¿ ´s¿ ´ß¿ ´”¿ ´Ÿ¿ ¨%¿ ¨F¿ ¨G¿ ¨ó¿ ¨¬¿ ¨√¿ ≠¿ ≠¿ ≠%¿ ≠5¿ ≠;¿ ≠Å¿ ≠Õ¿ ≠˙¿ ÆK¿ Æq¿ Æ•¿ Æ¶¿ ÆÒ¿ Æ˜¿ Ø<¿ Ø¿ Øë¿ Øó¿ ØŸ¿ ∞!¿ ∞o¿ ∞°¿ ∞ß¿ ∞π¿ ∞ø¿ ±¿ ±K¿ ±ò¿ ±€¿ ±·¿ ≤K¿ ≤Q¿ ≤≠¿ ≥	¿ ≥e¿ ≥¡¿ ¥¿ ¥#¿ ¥a¿ ¥¶¿ ¥¨¿ ¥˙¿ µJ¿ µt¿ µz¿ µî¿ µö¿ µ…¿ µœ¿ µ‡¿ ∂¿ ∂E¿ ∂z¿ ∂Ä¿ ∂ï¿ ∂Ø¿ ∂ÿ¿ ∂ˇ¿ ∑¿ ∑Ñ¿ ∑Õ¿ ∏B¿ ∏è¿ ∏ß¿ ∏⁄¿ ∏Î¿ π,¿ π}¿ πï¿ ∫¿ ∫T¿ ∫Ñ¿ ∫†¿ ∫Ÿ¿ ª%¿ ªj¿ ªñ¿ ªÏ¿ º¿ ºL¿ ºl¿ ºñ¿ º√¿ º¿ Ω6¿ Ωs¿ Ω–¿ Ω÷¿ æ¿ æU¿ æâ¿ æè¿ æü¿ æ•¿ æ‰¿ æˇ¿ ø ¿ øQ¿ øW¿ øí¿ øÿ¿ ¿&¿ ¿s¿ ¿ƒ¿ ¿˝¿ ¡¿ ¡O¿ ¡†¿ ¡Ô¿ ¬>¿ ¬ç¿ ¬“¿ ¬ÿ¿ √(¿ √w¿ √£¿ √©¿ √Û¿ ƒ:¿ ƒá¿ ƒç¿ ƒ◊¿ ≈¿ ≈ ¿ ≈n¿ ≈¬¿ ≈€¿ ≈·¿ ∆6¿ ∆h¿ ∆π¿ ∆È¿ ∆˛¿ «#¿ «$¿ «/¿ «0¿ «m¿ «à¿ «â¿ «ƒ¿ «›¿ «ﬁ¿ »¿ »¿ »n¿ »ø¿ …¿ …W¿ …}¿ …û¿ …ü¿ …‰¿  &¿  C¿  `¿  a¿  ¢¿  È¿  Ô¿ À:¿ À\¿ Àx¿ Ày¿ À√¿ À›¿ Àﬁ¿ Ã ¿ ÃN¿ Ãl¿ Ãm¿ ÃØ¿ Ã…¿ Ã‚¿ Ã„¿ Õ,¿ Õ=¿ ÕW¿ ÕX¿ Õ®¿ ÕÆ¿ Õ˙¿ ŒB¿ Œê¿ Œ≈¿ Œ·¿ Œ‚¿ œ¿ œ0¿ œ1¿ œ`¿ œÅ¿ œÇ¿ œœ¿ –¿ –B¿ –C¿ –ô¿ –≈¿ —-¿ —k¿ —è¿ —ê¿ —€¿ —·¿ “¿ “¿ “Z¿ “®¿ “Ù¿ ”A¿ ”j¿ ”Ö¿ ”Ü¿ ”ß¿ ”≠¿ ”Ω¿ ‘¿ ‘¿ ‘¿ ‘`¿ ‘´¿ ‘–¿ ‘—¿ ‘Ô¿ ‘¿ ’4¿ ’U¿ ’V¿ ’ë¿ ’π¿ ’∫¿ ’Ù¿ ÷¿ ÷¿ ÷a¿ ÷~¿ ÷¿ ÷Œ¿ ÷‘¿ ◊¿ ◊*¿ ◊+¿ ◊A¿ ◊B¿ ◊é¿ ◊¬¿ ◊¿ ◊Ò¿ ÿ?¿ ÿ]¿ ÿÇ¿ ÿÉ¿ ÿ∏¿ ÿ€¿ ÿ‹¿ Ÿ*¿ ŸW¿ ŸX¿ Ÿ´¿ Ÿ‹¿ Ÿ›¿ ⁄.¿ ⁄=¿ ⁄|¿ ⁄}¿ ⁄Œ¿ ⁄˝¿ ⁄˛¿ €O¿ €f¿ €ã¿ €å¿ €ø¿ €≈¿ €˚¿ ‹¿ ‹¿ ‹p¿ ‹°¿ ‹¢¿ ‹Ò¿ ›¿ ›¿ ›O¿ ›U¿ ›ã¿ ›¨¿ ›≠¿ ›Ù¿ ﬁ¿ ﬁ.¿ ﬁ/¿ ﬁ}¿ ﬁå¿ ﬁπ¿ ﬁ∫¿ ﬁÔ¿ ﬂ¿ ﬂ¿ ﬂd¿ ﬂÉ¿ ﬂ™¿ ﬂ´¿ ﬂ¯¿ ‡¿ ‡¿ ‡q¿ ‡¢¿ ‡£¿ ‡Á¿ · ¿ ·5¿ ·6¿ ·¿ ·≤¿ ·≥¿ ·˜¿ ‚¿ ‚?¿ ‚@¿ ‚É¿ ‚°¿ ‚‚¿ ‚„¿ „'¿ „<¿ „i¿ „j¿ „Æ¿ „◊¿ „ÿ¿ ‰)¿ ‰h¿ ‰è¿ ‰ê¿ ‰›¿ Â*¿ ÂW¿ ÂX¿ Â©¿ ÂÍ¿ Ê¿ Ê¿ Ê\¿ Êx¿ Ê´¿ Ê¨¿ Ê¸¿ Á¿ ÁT¿ ÁU¿ Á§¿ ÁÕ¿ Ë¿ Ë¿ ËG¿ Ë`¿ Ëï¿ Ëñ¿ Ë„¿ Ëˆ¿ È!¿ È"¿ Èz¿ Èµ¿ È∂¿ Í¿ Í%¿ Í&¿ Ív¿ Í°¿ Í¢¿ Î¿ Î:¿ Î;¿ Îë¿ Î»¿ Î…¿ Î˛¿ Ï¿ Ï<¿ Ïa¿ Ïb¿ Ï∏¿ Ï·¿ Ï‚¿ Ì/¿ ÌT¿ ÌU¿ Ì®¿ ÌÕ¿ ÌŒ¿ Ó¿ Ó'¿ ÓT¿ ÓU¿ Ó•¿ Óÿ¿ ÓŸ¿ Ô)¿ ÔV¿ ÔW¿ Ôõ¿ ÔŒ¿ Ôœ¿ ¿ ¿ Q¿ x¿ y¿ …¿ ÿ¿ ¯¿ Ò3¿ Ò7¿ Òt¿ Ò°¿ Ò¢¿ Ò”¿ Ò‚¿ Ú¿ ÚP¿ ÚT¿ Úy¿ Úz¿ Ú∂¿ Ú≈¿ Ú¯¿ Û2¿ Û6¿ ÛT¿ ÛU¿ Û∞¿ Û∂¿ ÛÙ¿ Ù¿ Ù[¿ Ù©¿ Ù˜¿ ı¿ ı¿ ı9¿ ıh¿ ıé¿ ı«¿ ı˙¿ ˆ¿ ˆN¿ ˆ~¿ ˆú¿ ˆƒ¿ ˆı¿ ˜¿ ˜$¿ ˜B¿ ˜^¿ ˜¥¿ ¯¿ ¯=¿ ¯U¿ ¯k¿ ¯Ö¿ ¯û¿ ¯µ¿ ¯–¿ ¯Ê¿ ¯˝¿ ˘¿ ˘3¿ ˘Q¿ ˘u¿ ˘ñ¿ ˘Æ¿ ˘∆¿ ˘Ë¿ ˙¿ ˙&¿ ˙K¿ ˙l¿ ˙Ü¿ ˙¢¿ ˙∫¿ ˙‰¿ ˚'¿ ˚@¿ ˚`¿ ˚ä¿ ˚∏¿ ˚Ù¿ ¸ ¿ ¸B¿ ¸`¿ ¸é¿ ¸¥¿ ¸“¿ ¸˙¿ ˝$¿ ˝F¿ ˝j¿ ˝å¿ ˝∫¿ ˝Ï¿ ˛¿ ˛J¿ ˛à¿ ˛≤¿ ˛ÿ¿ ˛¸¿ ˇ&¿ ˇD¿ ˇt¿ ˇ™¿ ˇ‹¿ ¿ 6¿ n¿ é¿ ∂¿ ‡¿¿6¿\¿~¿†¿ ¿˙¿$¿T¿x¿Æ¿ø¿¿E¿ä¿Ã¿¿¿&¿7¿Y¿ñ¿ú¿ƒ¿’¿¿G¿M¿o¿Ä¿µ¿Ò¿˜¿¿¿[¿\¿—¿˘¿3¿m¿≥¿–¿6¿A¿I¿O¿P¿j¿º¿	¿	\¿	Ç¿	É¿	¢¿
 ¿
a¿
∂¿¿7¿ë¿„¿2¿]¿ö¿‘¿%¿A¿x¿≤¿¡¿ı¿#¿z¿¥¿Î¿¿Y¿á¿∏¿Ô¿2¿x¿–¿¿S¿á¿Ÿ¿˚¿)¿l¿Ø¿›¿¿(¿h¿∏¿–¿Û¿¿D¿|¿ﬁ¿Í¿Ù¿8¿C¿t¿®¿Ó¿I¿å¿¿¿Ó¿4¿n¿ú¿Ÿ¿¿M¿Ñ¿∏¿˛¿J¿ì¿Ÿ¿7¿w¿±¿Ë¿(¿V¿ü¿Ò¿=¿â¿∆¿¿L¿â¿…¿¿L¿Ü¿∫¿Ó¿.¿w¿∑¿  ¿ 7¿ o¿ ®¿ ˙¿!7¿!>¿!B¿!C¿!ì¿!·¿".¿"i¿"û¿"ü¿"‡¿#<¿#ì¿#î¿#·¿$¿$¿$m¿$æ¿%¿%B¿%í¿%⁄¿&&¿&w¿&≈¿'¿'e¿'l¿'∫¿'À¿'“¿( ¿(J¿(K¿(|¿(º¿(«¿(Í¿);¿)~¿)â¿)í¿)ô¿)ù¿)û¿)‚¿)˚¿*¿*Q¿*Ç¿*¿¿*ˇ¿+ ¿+=¿+ê¿+‚¿,3¿,e¿,©¿,Õ¿-¿-<¿-B¿-^¿-b¿-c¿-ò¿-û¿-“¿-ÿ¿-˚¿.?¿.P¿.a¿.o¿.u¿.Ü¿.ÿ¿.È¿/¿/¿/_¿/ª¿/√¿/„¿0¿0#¿0Ü¿0è¿0ñ¿0ó¿0±¿0µ¿0∂¿1¿1d¿1∞¿1Í¿1¿2P¿2å¿2÷¿3$¿3,¿30¿31¿3[¿3ê¿3£¿3©¿3™¿3Ù¿4¿4,¿4-¿4I¿4J¿4f¿4è¿4¬¿4˚¿5'¿5Y¿5b¿5Ñ¿5π¿5Î¿5Ù¿5˚¿5¸¿6¿6N¿6Å¿6∞¿6±¿6Ã¿6Í¿7 ¿7K¿7á¿7√¿7˝¿8¿8[¿8h¿8s¿8°¿8»¿9¿9@¿9z¿9ë¿9ÿ¿9Â¿9¿:&¿:Q¿:ç¿:…¿;¿;¿;a¿;n¿;y¿;´¿;‘¿<¿<L¿<Ü¿<ù¿<‰¿<Ò¿<¸¿=>¿=x¿=≤¿=Ω¿=∆¿=Ã¿=Õ¿=ˆ¿>H¿>I¿>l¿>ä¿>«¿>ˆ¿?¿?l¿?™¿?ø¿@¿@\¿@s¿@‘¿A¿A)¿Aä¿A»¿Aﬂ¿B@¿B~¿Bñ¿B¯¿C6¿CA¿CJ¿CP¿CQ¿Cc¿Cg¿Ch¿Có¿Cù¿C¿¿C˛¿D¿D)¿D/¿DI¿Dõ¿DÎ¿E;¿Ea¿Eb¿EÅ¿E√¿EÌ¿F¿F@¿Fù¿FŒ¿G%¿G¿G÷¿H	¿H_¿H°¿H‡¿I.¿I=¿I~¿Iπ¿Iˇ¿JF¿Jä¿J»¿K¿KM¿Kã¿Kœ¿L¿Lr¿L◊¿M3¿Mt¿Mµ¿N¿N6¿Nx¿Nœ¿O"¿O`¿O¢¿Oº¿P¿P`¿P¶¿P¯¿QZ¿Qù¿Q¡¿QÂ¿Q¿Q˘¿RX¿Rî¿R÷¿S8¿Sä¿SÕ¿T#¿T}¿T«¿U¿U`¿U¬¿U˚¿V¿V9¿VD¿VN¿VÖ¿V£¿V¡¿VÃ¿V÷¿W9¿W~¿W£¿W»¿W”¿W›¿X8¿Xã¿X⁄¿Y5¿Yx¿YØ¿YÕ¿YÎ¿Yˆ¿Z ¿Z=¿Z^¿Z¿Zä¿Zî¿ZÕ¿ZÏ¿[¿[¿[ ¿[Y¿[x¿[ó¿[¢¿[¨¿\¿\B¿\d¿\Ü¿\ë¿\õ¿\·¿]8¿]ì¿]Œ¿]Ó¿^¿^¿^"¿^l¿^æ¿_¿_R¿_≠¿_‰¿`¿` ¿`+¿`5¿`è¿`∆¿`‰¿a¿a¿a¿af¿aû¿aÙ¿bS¿bù¿b§¿b®¿b©¿bµ¿bÿ¿c¿c¿c¿c?¿cì¿cÂ¿d7¿d_¿dò¿d‚¿e$¿eW¿eï¿e’¿f¿f9¿fk¿fõ¿f…¿f˘¿g
¿g6¿g^¿gä¿g∫¿gË¿h¿hD¿hl¿hñ¿hƒ¿h˙¿i2¿iv¿i¥¿i‡¿j¿jL¿jp¿jò¿jŒ¿k¿k,¿kV¿kr¿k¶¿k“¿k¸¿l(¿l`¿l¶¿l‹¿m¿m0¿mh¿mò¿m¿¿mÚ¿n&¿nR¿nÄ¿n¨¿n‰¿o ¿oZ¿oí¿o⁄¿p¿p>¿pl¿p†¿p»¿q¿qB¿q~¿q∫¿qÏ¿r.¿rX¿rä¿ræ¿r¸¿s(¿sX¿sÑ¿s∞¿s‰¿t¿tR¿tå¿t∫¿tÙ¿u&¿uf¿uñ¿uö¿uõ¿uß¿uº¿uË¿v:¿vä¿v⁄¿w ¿w¿w ¿w=¿w\¿w~¿wú¿w∂¿w“¿wÓ¿x¿x'¿x7¿xM¿xb¿xv¿xã¿xö¿x≠¿xæ¿x—¿xÊ¿x˙¿y¿y"¿y3¿yE¿yY¿yq¿yä¿y©¿y≈¿yÿ¿yÎ¿z¿z*¿z;¿zS¿zk¿z|¿zé¿z®¿zø¿z“¿z‰¿z˜¿{¿{0¿{H¿{[¿{l¿{Ö¿{ö¿{´¿{¡¿{ÿ¿{Î¿{ˇ¿|¿|+¿|F¿|`¿|y¿|ö¿|±¿|∆¿|⁄¿|Ò¿}¿}¿}9¿}T¿}o¿}Ö¿}£¿}µ¿}À¿}‚¿}˛¿~¿~&¿~9¿~L¿~c¿~}¿~î¿~Æ¿~¬¿~˙¿¿-¿C¿J¿m¿q¿r¿~¿√¿Ó¿Ä&¿Äv¿Äƒ¿Å¿Å6¿Å7¿ÅT¿Åh¿Åï¿Å¨¿Å ¿Ç¿Ç(¿Ç1¿Ç8¿ÇL¿Çm¿Çì¿Ç∑¿Ç›¿ÇÊ¿ÇÌ¿É¿É9¿É[¿É{¿Éµ¿É€¿É‰¿ÉÎ¿Éˇ¿Ñ0¿ÑF¿Ña¿Ññ¿Ñº¿Ñ≈¿ÑÃ¿Ñ‡¿Ö¿Ö5¿ÖS¿Öy¿ÖÇ¿Öâ¿Öù¿Öœ¿Ö¿Ü¿Ü5¿Ü>¿ÜE¿ÜY¿Üä¿Ü™¿Ü»¿ÜÓ¿Ü˜¿Ü˛¿á¿á6¿áJ¿á\¿áâ¿áØ¿á∏¿áø¿á”¿à¿à¿à4¿àf¿àå¿àï¿àú¿à∞¿àÈ¿â¿â¿âJ¿âp¿ây¿âÄ¿âî¿âµ¿âÕ¿â„¿ä¿ä9¿äB¿äI¿ä]¿äá¿ä†¿ä∑¿äË¿ã¿ã¿ã¿ã,¿ã@¿ãU¿ãl¿ãÅ¿ã∞¿ã÷¿ãﬂ¿ãÊ¿ã˙¿å¿å$¿å7¿åd¿åä¿åì¿åö¿åÆ¿å÷¿åÌ¿ç¿ç1¿çW¿ç`¿çg¿ç{¿çê¿ç©¿ç¿¿çÒ¿é¿é ¿é'¿é;¿éP¿éh¿é~¿éÆ¿é‘¿é›¿é‰¿é¯¿è¿è#¿è7¿èe¿èã¿èî¿èõ¿èØ¿èƒ¿èﬁ¿èˆ¿ê(¿êN¿êW¿ê^¿êr¿êá¿êú¿êØ¿ê‹¿ë¿ë¿ë¿ë&¿ë;¿ëQ¿ëe¿ëì¿ëπ¿ë¬¿ë…¿ë›¿ëÚ¿í¿í(¿í\¿íÇ¿íã¿íí¿í¶¿íª¿íÿ¿íÛ¿ì(¿ìN¿ìW¿ì^¿ìr¿ìá¿ìü¿ìµ¿ìÂ¿î¿î¿î¿î/¿îD¿îg¿îà¿î√¿îÈ¿îÚ¿î˘¿ï¿ï"¿ïB¿ï`¿ïò¿ïæ¿ï«¿ïŒ¿ï‚¿ï˜¿ñ¿ñ#¿ñR¿ñx¿ñÅ¿ñà¿ñú¿ñ±¿ñ»¿ñ›¿ó¿ó2¿ó;¿óB¿óV¿ók¿óå¿ó´¿ó‰¿ò
¿ò¿ò¿ò:¿òN¿òÆ¿òµ¿ò…¿òÛ¿ô¿ô)¿ôO¿ôX¿ô_¿ôs¿ôô¿ôµ¿ôœ¿ôı¿ô˛¿ö¿ö¿öu¿ö|¿öê¿ö∑¿öÕ¿ö·¿õ¿õ5¿õ>¿õE¿õ]¿õq¿õ°¿õº¿õ’¿õ˚¿ú¿ú¿ú¿úK¿úb¿úw¿ú¶¿úÃ¿ú’¿ú‹¿ú¿ù¿ù1¿ùE¿ùs¿ùô¿ù¢¿ù©¿ùΩ¿ùÒ¿û¿û¿ûL¿ûr¿û{¿ûÇ¿ûñ¿û»¿ûÂ¿ü ¿ü5¿ü[¿üd¿ük¿ü¿ü∏¿ü‹¿ü˛¿†:¿†`¿†i¿†p¿†Ñ¿†µ¿†—¿†Î¿°¿°E¿°N¿°U¿°i¿°ï¿°¨¿°¡¿°Á¿°¿°˜¿¢¿¢k¿¢r¿¢Ü¿¢∏¿¢’¿¢¿£%¿£K¿£T¿£[¿£o¿£ù¿£∂¿£Õ¿£˛¿§$¿§-¿§4¿§H¿§®¿§Ø¿§√¿§Ú¿•¿•$¿•V¿•|¿•Ö¿•å¿•†¿•–¿•Î¿¶¿¶7¿¶]¿¶f¿¶m¿¶Å¿¶≠¿¶ƒ¿¶Ÿ¿ß¿ß.¿ß7¿ß>¿ßR¿ß¿ßó¿ß≠¿ß›¿®¿®¿®¿®'¿®S¿®j¿®¿®Æ¿®‘¿®›¿®‰¿®¯¿©*¿©G¿©b¿©ó¿©Ω¿©∆¿©Õ¿©·¿™¿™4¿™Q¿™à¿™Æ¿™∑¿™æ¿™“¿´¿´#¿´?¿´e¿´n¿´u¿´â¿´ª¿´ÿ¿´Û¿¨(¿¨N¿¨W¿¨^¿¨r¿¨¨¿¨—¿¨Ù¿≠1¿≠W¿≠`¿≠g¿≠{¿≠´¿≠∆¿≠ﬂ¿Æ¿Æ8¿ÆA¿ÆH¿Æ\¿Æä¿Æ£¿Æ∫¿ÆÎ¿Ø¿Ø¿Ø!¿Ø5¿Øb¿Øz¿Øê¿Ø¿¿ØÊ¿ØÔ¿Øˆ¿∞
¿∞:¿∞U¿∞n¿∞°¿∞«¿∞–¿∞◊¿∞Î¿±¿±*¿±=¿±j¿±ê¿±ô¿±†¿±¥¿±Á¿≤¿≤!¿≤W¿≤}¿≤Ü¿≤ç¿≤°¿≤◊¿≤¯¿≥¿≥P¿≥v¿≥¿≥Ü¿≥ö¿≥Œ¿≥Ì¿¥
¿¥A¿¥g¿¥p¿¥w¿¥ã¿¥ø¿¥ﬁ¿¥˚¿µ2¿µX¿µa¿µh¿µ|¿µ´¿µ≈¿µ›¿∂¿∂5¿∂>¿∂E¿∂Y¿∂ê¿∂≤¿∂“¿∑¿∑2¿∑;¿∑B¿∑V¿∑Å¿∑ó¿∑´¿∑Ÿ¿∑ˇ¿∏¿∏¿∏#¿∏R¿∏l¿∏Ñ¿∏∂¿∏‹¿∏Â¿∏Ï¿π ¿π0¿πK¿πd¿πó¿πΩ¿π∆¿πÕ¿π·¿∫¿∫6¿∫T¿∫å¿∫≤¿∫ª¿∫¬¿∫÷¿ª¿ª¿ª.¿ªT¿ª]¿ªd¿ªx¿ª¶¿ªø¿ª÷¿º¿º-¿º6¿º=¿ºQ¿º}¿ºî¿º©¿ºÿ¿º˛¿Ω¿Ω¿Ω"¿ΩN¿Ωe¿Ωz¿Ω†¿Ω©¿Ω∞¿Ωƒ¿ΩÙ¿æ¿æ(¿æ[¿æÅ¿æä¿æë¿æ•¿æÿ¿æˆ¿ø¿øH¿øn¿øw¿ø~¿øí¿ø¬¿ø›¿øˆ¿¿)¿¿O¿¿X¿¿_¿¿s¿¿¶¿¿ƒ¿¿‡¿¡¿¡¿¡¿¡*¿¡W¿¡o¿¡Ö¿¡´¿¡¥¿¡ª¿¡Ò¿¬¿¬4¿¬N¿¬f¿¬ò¿¬æ¿¬«¿¬Œ¿¬‚¿¬˜¿√¿√7¿√p¿√ñ¿√ü¿√¶¿√∫¿√œ¿√È¿ƒ¿ƒ3¿ƒY¿ƒb¿ƒi¿ƒm¿ƒo¿ƒp¿ƒ∫¿ƒ›¿ƒ·¿≈*¿≈w¿≈É¿≈á¿≈÷¿∆$¿∆(¿∆t¿∆∏¿∆º¿«¿«X¿«ß¿«…¿«Õ¿«€¿«ﬂ¿»)¿»x¿»Ü¿»»¿»Ú¿…B¿…ì¿…‡¿ ¿ W¿ ®¿ –¿À¿À$¿À;¿Àï¿Àû¿Àü¿Àˆ¿ÃA¿ÃÅ¿Ãû¿ÃØ¿Ã€¿Õ	¿ÕB¿Õm¿Õ°¿Õ⁄¿Œ¿ŒV¿Œá¿Œê¿Œë¿Œ≥¿Œ¿ŒÒ¿Œ˝¿œ]¿œ^¿œj¿œÜ¿œÿ¿œŸ¿œÂ¿–¿–k¿–l¿–x¿–ü¿— ¿—¿—:¿—@¿—Ç¿—œ¿“¿“Y¿“_¿“∞¿“˜¿”7¿”C¿”p¿”å¿”•¿”…¿”¿‘¿‘3¿‘T¿‘o¿‘v¿‘§¿‘∫¿‘‚¿’¿’&¿’`¿’~¿’Æ¿’Ë¿÷¿÷F¿÷O¿÷V¿÷Z¿÷[¿÷g¿÷†¿÷Ô¿◊
¿◊O¿◊≥¿◊‹¿ÿ
¿ÿ ¿ÿ`¿ÿg¿ÿk¿ÿm¿ÿn¿ÿΩ¿Ÿ¿Ÿ]¿Ÿ™¿Ÿ‚¿ŸÊ¿⁄3¿⁄Ç¿⁄∑¿⁄ﬂ¿€/¿€M¿€ò¿€π¿€‰¿‹¿‹Q¿‹|¿‹¥¿‹ø¿‹»¿‹…¿›¿›?¿›A¿›B¿›M¿›p¿›º¿›Ω¿›⁄¿›ˇ¿ﬁ ¿ﬁN¿ﬁg¿ﬁs¿ﬁÃ¿ﬁÕ¿ﬁŸ¿ﬁ¸¿ﬂG¿ﬂo¿ﬂ°¿ﬂ“¿‡¿‡¿‡¿‡¿‡g¿‡ï¿‡ô¿‡Ë¿·	¿·"¿·^¿·_¿·Ø¿·˘¿‚	¿‚.¿‚/¿‚f¿‚l¿‚Ω¿‚Á¿„¿„¿„M¿„à¿„∂¿„œ¿„Ú¿‰¿‰!¿‰'¿‰P¿‰x¿‰~¿‰°¿‰•¿‰ß¿‰®¿‰Â¿‰È¿Â-¿Â{¿Â¨¿Â∞¿Â˛¿ÊN¿Êô¿Ê∑¿Êª¿Á¿ÁW¿Á¶¿Á∞¿Á¥¿Á˚¿Áˇ¿Ë¿Ë¿Ë7¿ËK¿Ëñ¿Ë®¿Ë¿¿Ëÿ¿ËÁ¿È¿È¿È¿È(¿È,¿È~¿È∞¿Í¿Í"¿ÍL¿Í{¿ÍÅ¿Í—¿Î	¿ÎM¿Îw¿Î°¿ÎÕ¿Î˘¿Î˙¿Ï¿ÏJ¿ÏK¿Ïn¿Ïö¿Ïõ¿ÏŸ¿Ïﬂ¿Ì,¿Ìz¿Ìì¿ÌÃ¿ÌÕ¿Ó¿Ó¿Óh¿Ó∏¿Ô¿ÔJ¿ÔP¿Ôå¿ÔË¿ÔÈ¿.¿4¿Ä¿—¿Ò¿ÒV¿Ò\¿Òò¿Ò¿ÒÒ¿Ú@¿Úâ¿Úè¿Ú÷¿Û!¿Û8¿Û>¿ÛN¿ÛT¿Û†¿Û‘¿Ù¿ÙF¿Ù|¿Ù¥¿Ùµ¿ı¿ı¿ı\¿ıë¿ıó¿ıß¿ı≠¿ı˜¿ˆ*¿ˆv¿ˆï¿ˆÔ¿˜H¿˜O¿˜S¿˜T¿˜ü¿˜µ¿˜¯¿¯¿¯C¿¯n¿¯u¿¯y¿¯z¿¯∞¿¯∂¿˘¿˘R¿˘ù¿˘·¿˙#¿˙F¿˙L¿˙\¿˙b¿˙∂¿˙Í¿˚S¿˚n¿˚o¿˚£¿˚©¿˚Ú¿¸C¿¸é¿¸“¿˝¿˝7¿˝=¿˝M¿˝S¿˝ß¿˝Ÿ¿˛B¿˛[¿˛\¿˛∞¿˛∂¿ˇ¿ˇB¿ˇH¿ˇè¿ˇª¿ˇ›¿ +¿ |¿ ¨¿ Õ¿ Œ¿¿¿¿9¿É¿û¿Æ¿¥¿Œ¿¿D¿K¿O¿P¿û¿À¿—¿!¿T¿ò¿∆¿Á¿¿:¿G¿e¿n¿å¿√¿–¿Ô¿¯¿ˇ¿¿¿¿3¿_¿s¿y¿‹¿‡¿·¿Ì¿&¿'¿3¿x¿£¿Ù¿A¿E¿F¿R¿m¿‹¿‡¿‚¿„¿¿¿Y¿ù¿≈¿¯¿˘¿	¿	A¿	a¿	¿	ü¿	∆¿	Ô¿
¿
8¿
]¿
â¿
©¿
À¿
Ù¿¿D¿l¿ì¿¡¿‡¿¿)¿S¿w¿û¿ƒ¿Ò¿¿+¿P¿w¿ò¿ª¿Ÿ¿˝¿*¿T¿{¿¶¿‘¿ı¿¿:¿a¿¿§¿¡¿›¿¿)¿N¿í¿¥¿∑¿∏¿Ï¿¿)¿I¿p¿ô¿º¿‚¿¿3¿S¿u¿û¿…¿Ó¿¿=¿k¿ä¿´¿”¿˝¿!¿H¿n¿õ¿∑¿’¿˙¿!¿B¿e¿É¿ß¿‘¿˛¿%¿P¿~¿ü¿ø¿‰¿¿)¿N¿k¿á¿¨¿”¿¯¿<¿^¿a¿s¿t¿§   //// @docImport 'package:flutter/material.dart';DÄﬂ  ÄÅ'Å*   ÅS   Å~   Åú   Åæ   Å€   Åˆ   Ç   Ç6   Ça   ÇÉ   Ç£   Çø   ÇŸ   Ç˜   É   É/   ÉK   Éa   Éz   Éö   Éª   É◊   ÉÙ   Ñ   Ñ3   ÑR   Ñw   Ñõ   Ñ∏   Ñ€   Ö   Ö(   ÖB   Ö]   Öw  ÖéÖØÖ±   Ö–   ÖÈ   Ü   Ü&   ÜG   Üa   ÜÖ   Ü¨   Ü—   Ü   á   á;   á[   áÉ   áû   áΩ   á›   á˛   à$   à@   à_   à{   àò   à≥   à‘   à¯   â   â3   âW   ât   âèâ∂â≈ âˇÖzâˇäöÄî/// Defines a customized theme for components with an `adaptive` factory constructor.
///
/// Currently, only [Switch.adaptive] supports this class.ä•ä•ä•ä¨2ä— ä—ä€ /// Creates an [Adaptation].   ä‚0ãã/// The adaptation's type.    ãÑaè@è@Ñ/// Typically, this is overridden to return an instance of a custom component
/// ThemeData class, like [SwitchThemeData], instead of the defaultValue.
///
/// Factory constructors that support adaptations - currently only
/// [Switch.adaptive] - look for a type-specific adaptation in
/// [ThemeData.adaptationMap] when computing their effective default component
/// theme. If a matching adaptation is not found, the component may choose to
/// use a default adaptation. For example, the [Switch.adaptive] component
/// uses an empty [SwitchThemeData] if a matching adaptation is not found, for
/// the sake of backwards compatibility.
///
/// {@tool dartpad}
/// This sample shows how to create and use subclasses of [Adaptation] that
/// define adaptive [SwitchThemeData]s. The [adapt] method in this example is
/// overridden to only customize cupertino-style switches, but it can also be
/// used to customize any other platforms.
///
/// ** See code in examples/api/lib/material/switch/switch.4.dart **
/// {@end-tool} èFèQèP  èWèZèY    è{Ñxè{ë˛Çs/// An interface that defines custom additions to a [ThemeData] object.
///
/// {@youtube 560 315 https://www.youtube.com/watch?v=8-szcYzFVao}
///
/// Typically used for custom colors. To use, subclass [ThemeExtension],
/// define a number of fields (e.g. [Color]s), and implement the [copyWith] and
/// [lerp] methods. The latter will ensure smooth transitions of properties when
/// switching themes.
///
/// {@tool dartpad}
/// This sample shows how to create and use a subclass of [ThemeExtension] that
/// defines two colors.
///
/// ** See code in examples/api/lib/material/theme/theme_extension.1.dart **
/// {@end-tool}íííí.Fíc ícíq ,/// Enable const constructor for subclasses.   íx1íüíü/// The extension's type.    í≠Äëì3ì3o/// Creates a copy of this theme extension with the given fields
/// replaced by the non-null parameter values.   ìBÄØìæìæc/// Linearly interpolate with another [ThemeExtension] object.
///
/// {@macro dart.ui.shadow.lerp} ì√"ì·ì‡  ìÁìÔìÓ    ò¿¨`òüÜÏ/// Defines the configuration of the overall visual [Theme] for a [MaterialApp]
/// or a widget subtree within the app.
///
/// The [MaterialApp] theme property can be used to configure the appearance
/// of the entire app. Widget subtrees within an app can override the app's
/// theme by including a [Theme] widget at the top of the subtree.
///
/// Widgets whose appearance should align with the overall theme can obtain the
/// current theme's configuration with [Theme.of]. Material components typically
/// depend exclusively on the [colorScheme] and [textTheme]. These properties
/// are guaranteed to have non-null values.
///
/// The static [Theme.of] method finds the [ThemeData] value specified for the
/// nearest [BuildContext] ancestor. This lookup is inexpensive, essentially
/// just a single HashMap access. It can sometimes be a little confusing
/// because [Theme.of] can not see a [Theme] widget that is defined in the
/// current build method's context. To overcome that, create a new custom widget
/// for the subtree that appears below the new [Theme], or insert a widget
/// that creates a new BuildContext, like [Builder].
///
/// {@tool dartpad}
/// This example demonstrates how a typical [MaterialApp] specifies
/// and uses a custom [Theme]. The theme's [ColorScheme] is based on a
/// single "seed" color and configures itself to match the platform's
/// current light or dark color configuration. The theme overrides the
/// default configuration of [FloatingActionButton] to show how to
/// customize the appearance a class of components.
///
/// ** See code in examples/api/lib/material/theme_data/theme_data.0.dart **
/// {@end-tool}
///
/// See <https://material.io/design/color/> for
/// more discussion on how to pick the right colors. ü/¿ S®— ®—®⁄ âA/// Create a [ThemeData] that's used to configure a [Theme].
///
/// The [colorScheme] and [textTheme] are used by the Material components to
/// compute default values for visual properties. The API documentation for
/// each component widget explains exactly how the defaults are computed.
///
/// When providing a [ColorScheme], apps can either provide one directly
/// with the [colorScheme] parameter, or have one generated for them by
/// using the [colorSchemeSeed] and [brightness] parameters. A generated
/// color scheme will be based on the tones of [colorSchemeSeed] and all of
/// its contrasting color will meet accessibility guidelines for readability.
/// (See [ColorScheme.fromSeed] for more details.)
///
/// If the app wants to customize a generated color scheme, it can use
/// [ColorScheme.fromSeed] directly and then [ColorScheme.copyWith] on the
/// result to override any colors that need to be replaced. The result of
/// this can be used as the [colorScheme] directly.
///
/// For historical reasons, instead of using a [colorSchemeSeed] or
/// [colorScheme], you can provide either a [primaryColor] or [primarySwatch]
/// to construct the [colorScheme], but the results will not be as complete
/// as when using generation from a seed color.
///
/// If [colorSchemeSeed] is non-null then [colorScheme], [primaryColor] and
/// [primarySwatch] must all be null.
///
/// The [textTheme] [TextStyle] colors are black if the color scheme's
/// brightness is [Brightness.light], and white for [Brightness.dark].
///
/// To override the appearance of specific components, provide
/// a component theme parameter like [sliderTheme], [toggleButtonsTheme],
/// or [bottomNavigationBarTheme].
///
/// When [useSystemColors] is true and the platform supports system colors, then the system colors
/// will be used to override certain theme colors. The [colorScheme], [textTheme],
/// [elevatedButtonTheme], [outlinedButtonTheme], [textButtonTheme], [filledButtonTheme], and
/// [floatingActionButtonTheme] are overriden by the system colors.
///
/// See also:
///
///  * [ThemeData.from], which creates a ThemeData from a [ColorScheme].
///  * [ThemeData.light], which creates the default light theme.
///  * [ThemeData.dark], which creates the default dark theme.
///  * [ColorScheme.fromSeed], which is used to create a [ColorScheme] from a seed color.Z™)™.™-  ™> ™E™D  ™d3™Ç™Å  ™ù-™¡™¿  ´´&´%  ´?,´W´V  ´q*´à´á  ´°´≤´±  ´ø"´‘´”  ´Á+¨¨  ¨¨¨  ¨0¨7¨6  ¨K¨[¨Z  ¨z¨à¨á  ¨ò¨•¨§  ¨¥¨º¨ª  ≠Ø≠∑≠∂  ≠«≠œ≠Œ  ≠›≠Â≠‰  ≠˜≠ˇ≠˛  ÆÆÆ  Æ'Æ/Æ.  ÆBÆJÆI  ÆXÆ`Æ_  ÆoÆwÆv  ÆàÆêÆè  Æ•Æ≠Æ¨  Æ√Æ”Æ“  ÆÂÆÌÆÏ  Ø	ØØ  Ø*Ø2Ø1  ØBØJØI  ØZØbØa  ØúØ•Ø§  Ø¥ Ø√Ø¬  Ø⁄Ø„Ø‚  ØÔØˇØ˛  ∞∞∞  ∞2∞>∞=  ∞S∞_∞^  ∞m∞z∞y  ∞°$∞∑∞∂  ±±±  ±'±8±7  ±G$±a±`  ±q(±â±à  ±ü6±æ±Ω  ±€&±Ú±Ò  ≤≤≤  ≤)≤9≤8  ≤G(≤_≤^  ≤u ≤â≤à  ≤õ≤´≤™  ≤π"≤Œ≤Õ  ≤·$≤˜≤ˆ  ≥≥≥  ≥-≥@≥?  ≥Q≥c≥b  ≥s(≥ã≥ä  ≥°,≥ª≥∫  ≥”*≥Ï≥Î  ¥(¥¥  ¥18¥Q¥P  ¥o$¥Ö¥Ñ  ¥ô ¥≠¥¨  ¥ø¥“¥—  ¥„$¥˘¥¯  µµµ  µ+*µDµC  µ[0µwµv  µë,µ´µ™  µ√,µ›µ‹  µı"∂
∂	  ∂2∂:∂9  ∂U∂f∂e  ∂u"∂ä∂â  ∂ù$∂≥∂≤  ∂«.∂‚∂·  ∂˚∑∑  ∑ ∑1∑0  ∑C∑U∑T  ∑e∑w∑v  ∑á$∑ù∑ú  ∑±*∑ ∑…  ∑·$∑˜∑ˆ  ∏*∏$∏#  ∏;∏N∏M  ∏ïÄòπ π  π3Ä•πƒπ√  πﬁÄù∫n∫m  ∏ï∏ñ∏†π∏®∏ π3π4π>π∂πFπ|πﬁπﬂπÈ∫`πÒ∫&¿ rGë¢¿ s∏¿ s¡¿ s¬¿ s≈¿ s¬Å\/// Create a [ThemeData] given a set of exact values. Most values must be
/// specified. They all must also be non-null except for
/// [cupertinoOverrideTheme], and deprecated members.
///
/// This will rarely be used directly. It is used by [lerp] to
/// create intermediate themes based on two themes created with the
/// [ThemeData] constructor.S¿ t˙¿ u	¿ u  ¿ u(¿ u*¿ u)  ¿ uI$¿ uX¿ uW  ¿ us¿ uÇ¿ uÅ  ¿ uë"¿ u†¿ uü  ¿ uπ#¿ u»¿ u«  ¿ u‚"¿ uÒ¿ u  ¿ v
¿ v¿ v  ¿ v&¿ v5¿ v4  ¿ vH¿ vW¿ vV  ¿ vi¿ vx¿ vw  ¿ vâ¿ vò¿ vó  ¿ v∑¿ v∆¿ v≈  ¿ wµ¿ wƒ¿ w√  ¿ w‘¿ w„¿ w‚  ¿ wÒ¿ x ¿ wˇ  ¿ x¿ x!¿ x   ¿ x2¿ xA¿ x@  ¿ xP¿ x_¿ x^  ¿ xr¿ xÅ¿ xÄ  ¿ xè¿ xû¿ xù  ¿ x≠¿ xº¿ xª  ¿ xÕ¿ x‹¿ x€  ¿ xÒ¿ y ¿ xˇ  ¿ y%¿ y%¿ y$  ¿ yA"¿ yP¿ yO  ¿ yi¿ yx¿ yw  ¿ yà¿ yó¿ yñ  ¿ yß#¿ y∂¿ yµ  ¿ y¿ yˇ¿ y˛  ¿ z¿ z¿ z  ¿ z1¿ z@¿ z?  ¿ zU¿ zd¿ zc  ¿ zr¿ zÅ¿ zÄ  ¿ z®¿ z∑¿ z∂  ¿ zÀ¿ z⁄¿ zŸ  ¿ zÍ¿ z˘¿ z¯  ¿ {¿ {¿ {  ¿ {'¿ {6¿ {5  ¿ {L&¿ {[¿ {Z  ¿ {x¿ {á¿ {Ü  ¿ {ú¿ {´¿ {™  ¿ {ª¿ { ¿ {…  ¿ {ÿ¿ {Á¿ {Ê  ¿ {˝¿ |¿ |  ¿ |¿ |-¿ |,  ¿ |;¿ |J¿ |I  ¿ |]¿ |l¿ |k  ¿ |Ä¿ |è¿ |é  ¿ |ü¿ |Æ¿ |≠  ¿ |ø¿ |Œ¿ |Õ  ¿ |ﬁ¿ |Ì¿ |Ï  ¿ }!¿ }¿ }  ¿ }* ¿ }9¿ }8  ¿ }P¿ }_¿ }^  ¿ }u'¿ }Ñ¿ }É  ¿ }¢¿ }±¿ }∞  ¿ }≈¿ }‘¿ }”  ¿ }Ê¿ }ı¿ }Ù  ¿ ~¿ ~¿ ~  ¿ ~)¿ ~8¿ ~7  ¿ ~F ¿ ~U¿ ~T  ¿ ~l#¿ ~{¿ ~z  ¿ ~ï!¿ ~§¿ ~£  ¿ ~º!¿ ~À¿ ~   ¿ ~„¿ ~Ú¿ ~Ò  ¿ $¿ ¿   ¿ /¿ >¿ =  ¿ M¿ \¿ [  ¿ o¿ ~¿ }  ¿ í"¿ °¿ †  ¿ ∫¿ …¿ »  ¿ Ÿ¿ Ë¿ Á  ¿ ˙¿ Ä	¿ Ä  ¿ Ä¿ Ä(¿ Ä'  ¿ Ä8¿ ÄG¿ ÄF  ¿ Ä[ ¿ Äj¿ Äi  ¿ ÄÅ¿ Äê¿ Äè  ¿ Ä§ ¿ Ä≥¿ Ä≤  ¿ Ä ¿ ÄŸ¿ Äÿ  ¿ Å Äò¿ Å´¿ Å™  ¿ ÅæÄ¨¿ ÇV¿ ÇU  ¿ ÇpÄ§¿ É¿ É  ¿ Å ¿ Å!¿ Å+¿ Åê¿ Å3¿ ÅU¿ Åæ¿ Åø¿ Å…¿ ÇA¿ Å—¿ Ç¿ Çp¿ Çq¿ Ç{¿ ÇÚ¿ ÇÉ¿ Ç∏¿ É±¿ É°¿ É≥¿ É ¿ É–¿ ÉÁ¿ É‡¿ É—¿ É„¿ ÉÌà2¿ àB¿ àK¿ àL¿ àP¿ àLÑ/// Create a [ThemeData] based on the colors in the given [colorScheme] and
/// text styles of the optional [textTheme].
///
/// If [colorScheme].brightness is [Brightness.dark] then
/// [ThemeData.applyElevationOverlayColor] will be set to true to support
/// the Material dark theme method for indicating elevation by applying
/// a semi-transparent onSurface color on top of the surface color.
///
/// This is the recommended method to theme your application. As we move
/// forward we will be converting all the widget implementations to only use
/// colors or colors derived from those in [ColorScheme].
///
/// {@tool snippet}
/// This example will set up an application to use the baseline Material
/// Design light and dark themes.
///
/// ```dart
/// MaterialApp(
///   theme: ThemeData.from(colorScheme: const ColorScheme.light()),
///   darkTheme: ThemeData.from(colorScheme: const ColorScheme.dark()),
/// )
/// ```
/// {@end-tool}
///
/// See <https://material.io/design/color/> for
/// more discussion on how to pick the right colors.¿ àW ¿ àm¿ àl  ¿ à}¿ àâ¿ àà  ¿ àó¿ àû¿ àù   ¿ å#Å:¿ åÍ¿ åÛ¿ åÙ¿ å˘¿ åÙÄ∂/// A default light theme.
///
/// This theme does not contain text geometry. Instead, it is expected that
/// this theme is localized using text geometry using [ThemeData.localize].¿ å˚¿ ç¿ ç   ¿ çaÅ7¿ é'¿ é0¿ é1¿ é5¿ é1Äµ/// A default dark theme.
///
/// This theme does not contain text geometry. Instead, it is expected that
/// this theme is localized using text geometry using [ThemeData.localize].¿ é7¿ é>¿ é=   ¿ éúÅÔ¿ ê3¿ ê<¿ ê=¿ êE¿ ê=Å|/// The default color theme. Same as [ThemeData.light].
///
/// This is used by [Theme.of] when no theme has been specified.
///
/// This theme does not contain text geometry. Instead, it is expected that
/// this theme is localized using text geometry using [ThemeData.localize].
///
/// Most applications would use [Theme.of], which provides correct localized
/// text geometry.¿ êG¿ êN¿ êM   U¿ ïá¿ õ˜¿ õ˜Üü/// Apply a semi-transparent overlay color on Material surfaces to indicate
/// elevation for dark themes.
///
/// If [useMaterial3] is true, then this flag is ignored as there is a new
/// [Material.surfaceTintColor] used to create an overlay for Material 3.
/// This flag is meant only for the Material 2 elevation overlay for dark
/// themes.
///
/// Material drop shadows can be difficult to see in a dark theme, so the
/// elevation of a surface should be portrayed with an "overlay" in addition
/// to the shadow. As the elevation of the component increases, the
/// overlay increases in opacity. [applyElevationOverlayColor] turns the
/// application of this overlay on or off for dark themes.
///
/// If true and [brightness] is [Brightness.dark], a
/// semi-transparent version of [ColorScheme.onSurface] will be
/// applied on top of [Material] widgets that have a [ColorScheme.surface]
/// color. The level of transparency is based on [Material.elevation] as
/// per the Material Dark theme specification.
///
/// If false the surface color will be used unmodified.
///
/// Defaults to false in order to maintain backwards compatibility with
/// apps that were built before the Material Dark theme specification
/// was published. New apps should set this to true for any themes
/// where [brightness] is [Brightness.dark].
///
/// See also:
///
///  * [Material.elevation], which effects the level of transparency of the
///    overlay color.
///  * [ElevationOverlay.applyOverlay], which is used by [Material] to apply
///    the overlay color to its surface color.
///  * <https://material.io/design/color/dark-theme.html>, which specifies how
///    the overlay should be applied. ¿ úÇs¿ ûs¿ ûsÇ%/// Components of the [CupertinoThemeData] to override from the Material
/// [ThemeData] adaptation.
///
/// By default, [cupertinoOverrideTheme] is null and Cupertino widgets
/// descendant to the Material [Theme] will adhere to a [CupertinoTheme]
/// derived from the Material [ThemeData]. e.g. [ThemeData]'s [ColorScheme]
/// will also inform the [CupertinoThemeData]'s `primaryColor` etc.
///
/// This cascading effect for individual attributes of the [CupertinoThemeData]
/// can be overridden using attributes of this [cupertinoOverrideTheme]. ¿ ûéÇ~¿ °¿ °Ç&/// Arbitrary additions to this theme.
///
/// To define extensions, pass an [Iterable] containing one or more [ThemeExtension]
/// subclasses to [ThemeData.new] or [copyWith].
///
/// To obtain an extension, use [extension].
///
/// {@tool dartpad}
/// This sample shows how to create and use a subclass of [ThemeExtension] that
/// defines two colors.
///
/// ** See code in examples/api/lib/material/theme/theme_extension.1.dart **
/// {@end-tool}
///
/// See also:
///
/// * [extension], a convenience function for obtaining a specific extension. ¿ ¢Ä˛¿ ¢˘¿ ¢˘Äƒ/// A map which contains the adaptations for the theme. The entry's key is the
/// type of the adaptation; the value is the adaptation itself.
///
/// To obtain an adaptation, use [getAdaptation]. ¿ £ÄÂ¿ £‹¿ £‹Ä©/// The default [InputDecoration] values for [InputDecorator], [TextField],
/// and [TextFormField] are based on this theme.
///
/// See [InputDecoration.applyDefaults]. ¿ £ıÅ!¿ •¿ •ÄÂ/// Configures the hit test size of certain Material widgets.
///
/// Defaults to a [platform]-appropriate size: [MaterialTapTargetSize.padded]
/// on mobile platforms, [MaterialTapTargetSize.shrinkWrap] on desktop
/// platforms. ¿ •Å;¿ ¶B¿ ¶BÅ/// Default [MaterialPageRoute] transitions per [TargetPlatform].
///
/// [MaterialPageRoute.buildTransitions] delegates to a [platform] specific
/// [PageTransitionsBuilder]. If a matching builder is not found, a builder
/// whose platform is null is used. ¿ ¶[ÖÈ¿ ¨<¿ ¨<Öô/// The platform the material widgets should adapt to target.
///
/// Defaults to the current platform, as exposed by [defaultTargetPlatform].
/// This should be used in order to style UI elements according to platform
/// conventions.
///
/// Widgets from the material library should use this getter (via [Theme.of])
/// to determine the current platform for the purpose of emulating the
/// platform behavior (e.g. scrolling or haptic effects). Widgets and render
/// objects at lower layers that try to emulate the underlying platform
/// can depend on [defaultTargetPlatform] directly, or may require
/// that the target platform be provided as an argument. The
/// [dart:io.Platform] object should only be used directly when it's critical
/// to actually know the current platform, without any overrides possible (for
/// example, when a system API is about to be called).
///
/// In a test environment, the platform returned is [TargetPlatform.android]
/// regardless of the host platform. (Android was chosen because the tests
/// were originally written assuming Android-like behavior, and we added
/// platform adaptations for other platforms later). Tests can check behavior
/// for other platforms by setting the [platform] of the [Theme] explicitly to
/// another [TargetPlatform] value, or by setting
/// [debugDefaultTargetPlatformOverride].
///
/// Determines the defaults for [typography] and [materialTapTargetSize]. ¿ ¨Iw¿ ¨≤¿ ¨≤M/// A theme for customizing the colors, thickness, and shape of [Scrollbar]s. ¿ ¨≈Åﬁ¿ Æñ¿ ÆñÅô/// Defines the appearance of ink splashes produces by [InkWell]
/// and [InkResponse].
///
/// See also:
///
///  * [InkSplash.splashFactory], which defines the default splash.
///  * [InkRipple.splashFactory], which defines a splash that spreads out
///    more aggressively than the default.
///  * [InkSparkle.splashFactory], which defines a more aggressive and organic
///    splash with sparkle effects. ¿ Æ®êU¿ æÒ¿ æÒèó/// A temporary flag that can be used to opt-out of Material 3 features.
///
/// This flag is _true_ by default. If false, then components will
/// continue to use the colors, typography and other features of
/// Material 2.
///
/// In the long run this flag will be deprecated and eventually
/// only Material 3 will be supported. We recommend that applications
/// migrate to Material 3 as soon as that's practical. Until that migration
/// is complete, this flag can be set to false.
///
/// ## Defaults
///
/// If a [ThemeData] is _constructed_ with [useMaterial3] set to true, then
/// some properties will get updated defaults. However, the
/// [ThemeData.copyWith] method with [useMaterial3] set to true will _not_
/// change any of these properties in the resulting [ThemeData].
///
/// <style>table,td,th { border-collapse: collapse; padding: 0.45em; } td { border: 1px solid }</style>
///
/// | Property        | Material 3 default             | Material 2 default             |
/// | :-------------- | :----------------------------- | :----------------------------- |
/// | [colorScheme]   | M3 baseline light color scheme | M2 baseline light color scheme |
/// | [typography]    | [Typography.material2021]      | [Typography.material2014]      |
/// | [splashFactory] | [InkSparkle]* or [InkRipple]   | [InkSplash]                    |
///
/// \* if the target platform is Android and the app is not
/// running on the web, otherwise it will fallback to [InkRipple].
///
/// If [brightness] is [Brightness.dark] then the default color scheme will
/// be either the M3 baseline dark color scheme or the M2 baseline dark color
/// scheme depending on [useMaterial3].
///
/// ## Affected widgets
///
/// This flag affects styles and components.
///
/// ### Styles
///   * Color: [ColorScheme], [Material] (see table above)
///   * Shape: (see components below)
///   * Typography: [Typography] (see table above)
///
/// ### Components
///   * Badges: [Badge]
///   * Bottom app bar: [BottomAppBar]
///   * Bottom sheets: [BottomSheet]
///   * Buttons
///     - Common buttons: [ElevatedButton], [FilledButton], [FilledButton.tonal], [OutlinedButton], [TextButton]
///     - FAB: [FloatingActionButton], [FloatingActionButton.extended]
///     - Icon buttons: [IconButton], [IconButton.filled] (*new*), [IconButton.filledTonal], [IconButton.outlined]
///     - Segmented buttons: [SegmentedButton] (replacing [ToggleButtons])
///   * Cards: [Card]
///   * Checkbox: [Checkbox], [CheckboxListTile]
///   * Chips:
///     - [ActionChip] (used for Assist and Suggestion chips),
///     - [FilterChip], [ChoiceChip] (used for single selection filter chips),
///     - [InputChip]
///   * Date pickers: [showDatePicker], [showDateRangePicker], [DatePickerDialog], [DateRangePickerDialog], [InputDatePickerFormField]
///   * Dialogs: [AlertDialog], [Dialog.fullscreen]
///   * Divider: [Divider], [VerticalDivider]
///   * Lists: [ListTile]
///   * Menus: [MenuAnchor], [DropdownMenu], [MenuBar]
///   * Navigation bar: [NavigationBar] (replacing [BottomNavigationBar])
///   * Navigation drawer: [NavigationDrawer] (replacing [Drawer])
///   * Navigation rail: [NavigationRail]
///   * Progress indicators: [CircularProgressIndicator], [LinearProgressIndicator]
///   * Radio button: [Radio], [RadioListTile]
///   * Search: [SearchBar], [SearchAnchor],
///   * Snack bar: [SnackBar]
///   * Slider: [Slider], [RangeSlider]
///   * Switch: [Switch], [SwitchListTile]
///   * Tabs: [TabBar], [TabBar.secondary]
///   * TextFields: [TextField] together with its [InputDecoration]
///   * Time pickers: [showTimePicker], [TimePickerDialog]
///   * Top app bar: [AppBar], [SliverAppBar], [SliverAppBar.medium], [SliverAppBar.large]
///
/// In addition, this flag enables features introduced in Android 12.
///   * Stretch overscroll: [MaterialScrollBehavior]
///   * Ripple: `splashFactory` (see table above)
///
/// See also:
///
///   * [Material 3 specification](https://m3.material.io/). ¿ øà¿ «¿ «áµ/// The density value for specifying the compactness of various UI components.
///
/// {@template flutter.material.themedata.visualDensity}
/// Density, in the context of a UI, is the vertical and horizontal
/// "compactness" of the elements in the UI. It is unitless, since it means
/// different things to different UI elements. For buttons, it affects the
/// spacing around the centered label of the button. For lists, it affects the
/// distance between baselines of entries in the list.
///
/// Typically, density values are integral, but any value in range may be
/// used. The range includes values from [VisualDensity.minimumDensity] (which
/// is -4), to [VisualDensity.maximumDensity] (which is 4), inclusive, where
/// negative values indicate a denser, more compact, UI, and positive values
/// indicate a less dense, more expanded, UI. If a component doesn't support
/// the value given, it will clamp to the nearest supported value.
///
/// The default for visual densities is zero for both vertical and horizontal
/// densities, which corresponds to the default visual density of components
/// in the Material Design specification.
///
/// As a rule of thumb, a change of 1 or -1 in density corresponds to 4
/// logical pixels. However, this is not a strict relationship since
/// components interpret the density values appropriately for their needs.
///
/// A larger value translates to a spacing increase (less dense), and a
/// smaller value translates to a spacing decrease (more dense).
///
/// In Material Design 3, the [visualDensity] does not override the default
/// visual for the following components which are set to [VisualDensity.standard]
/// for all platforms:
///
///  * [IconButton] - To override the default value of [IconButton.visualDensity],
///    use [ThemeData.iconButtonTheme] instead.
///  * [Checkbox] - To override the default value of [Checkbox.visualDensity],
///    use [ThemeData.checkboxTheme] instead.
/// {@endtemplate} ¿ «2T¿ «{¿ «{:/// The default color of [MaterialType.canvas] [Material]. ¿ «ãP¿ «“¿ «“8/// The color of [Material] when it is used as a [Card]. ¿ «‡Åº¿ …ë¿ …ëÅê/// {@macro flutter.material.color_scheme.ColorScheme}
///
/// This property was added much later than the theme's set of highly specific
/// colors, like [cardColor], [canvasColor] etc. New components can be defined
/// exclusively in terms of [colorScheme]. Existing components will gradually
/// migrate to it, to the extent that is possible without significant
/// backwards compatibility breaks. ¿ …°ÄΩ¿  Q¿  QÄù/// The color used for widgets that are inoperative, regardless of
/// their state. For example, a disabled checkbox (which may be
/// checked or unchecked). ¿  cÅ¿ Àj¿ ÀjÄ/// The color of [Divider]s and [PopupMenuDivider]s, also used
/// between [ListTile]s, between rows in [DataTable]s, and so forth.
///
/// To create an appropriate [BorderSide] that uses this color, consider
/// [Divider.createBorderSide]. ¿ À{`¿ À—¿ À—G/// The focus color used indicate that a component has the input focus. ¿ À‡Ää¿ Ã\¿ Ã\k/// The highlight color used during ink splash animations or to
/// indicate an item in a menu is selected. ¿ Ãoq¿ Ã◊¿ Ã◊W/// The color to use for hint text or placeholder text, e.g. in
/// [TextField] fields. ¿ ÃÂp¿ ÕK¿ ÕKU/// The hover color used to indicate when a pointer is hovering over a
/// component. ¿ ÕZÅÖ¿ Œ”¿ Œ”Å`/// The background color for major parts of the app (toolbars, tab bars, etc)
///
/// The theme's [colorScheme] property contains [ColorScheme.primary], as
/// well as a color that contrasts well with the primary color called
/// [ColorScheme.onPrimary]. It might be simpler to just configure an app's
/// visuals in terms of the theme's [colorScheme]. ¿ Œ‰J¿ œ¿ œ+/// A darker version of the [primaryColor]. ¿ œ3L¿ œn¿ œn,/// A lighter version of the [primaryColor]. ¿ œÑÄº¿ –)¿ –)Äî/// The default color of the [Material] that underlies the [Scaffold]. The
/// background color for a typical material app or a page within the app. ¿ –EÅH¿ —y¿ —yS/// The color of the header of a [PaginatedDataTable] when there are selected rows. ¿ —íÅÒ¿ ”x¿ ”xÅ«/// The color that the [Material] widget uses to draw elevation shadows.
///
/// Defaults to fully opaque black.
///
/// Shadows can be difficult to see in a dark theme, so the elevation of a
/// surface should be rendered with an "overlay" in addition to the shadow.
/// As the elevation of the component increases, the overlay increases in
/// opacity. The [applyElevationOverlayColor] property turns the elevation
/// overlay on or off for dark themes. ¿ ”àÄî¿ ‘¿ ‘t/// The color of ink splashes.
///
/// See also:
///  * [splashFactory], which defines the appearance of the splash. ¿ ‘!Ä≠¿ ‘π¿ ‘πÄá/// The color used for widgets in their inactive (but enabled)
/// state. For example, an unchecked checkbox. See also [disabledColor]. ¿ ‘Úa¿ ’J¿ ’JA/// An icon theme that contrasts with the card and canvas colors. ¿ ’X_¿ ’ß¿ ’ß8/// An icon theme that contrasts with the primary color. ¿ ’ºZ¿ ÷¿ ÷7/// A text theme that contrasts with the primary color. ¿ ÷a¿ ÷s¿ ÷sE/// Text with a color that contrasts with the card and canvas colors. ¿ ÷ÅÄß¿ ◊¿ ◊ÄÖ/// The color and geometry [TextTheme] values used to configure [textTheme].
///
/// Defaults to a [platform]-appropriate typography. ¿ ◊DÄ™¿ ◊ﬂ¿ ◊ﬂ{/// A theme for customizing icons of [BackButtonIcon], [CloseButtonIcon],
/// [DrawerButtonIcon], or [EndDrawerButtonIcon]. ¿ ◊ÛÄç¿ ÿu¿ ÿug/// A theme for customizing the color, elevation, brightness, iconTheme and
/// textTheme of [AppBar]s. ¿ ÿÖT¿ ÿœ¿ ÿœ2/// A theme for customizing the color of [Badge]s. ¿ ÿﬁw¿ ŸJ¿ ŸJK/// A theme for customizing the color and text style of a [MaterialBanner]. ¿ ŸZÄÄ¿ Ÿ…¿ Ÿ…P/// A theme for customizing the shape, elevation, and color of a [BottomAppBar]. ¿ ŸﬂÄõ¿ ⁄b¿ ⁄b[/// A theme for customizing the appearance and layout of [BottomNavigationBar]
/// widgets. ¿ ⁄|¿ ⁄Î¿ ⁄ÎN/// A theme for customizing the color, elevation, and shape of a bottom sheet. ¿ € Äâ¿ €~¿ €~c/// Defines the default configuration of button widgets, like [DropdownButton]
/// and [ButtonBar]. ¿ €éÄå¿ ‹¿ ‹h/// The colors and styles used to render [Card].
///
/// This is the value returned from [CardTheme.of]. ¿ ‹ÄÄ¿ ‹é¿ ‹éP/// A theme for customizing the appearance and layout of [CarouselView] widgets. ¿ ‹§t¿ ›¿ ›L/// A theme for customizing the appearance and layout of [Checkbox] widgets. ¿ ›Äç¿ ›°¿ ›°i/// The colors and styles used to render [Chip]s.
///
/// This is the value returned from [ChipTheme.of]. ¿ ›Ø}¿ ﬁ¿ ﬁQ/// A theme for customizing the appearance and layout of [DataTable]
/// widgets. ¿ ﬁ1ÄÜ¿ ﬁ®¿ ﬁ®X/// A theme for customizing the appearance and layout of [DatePickerDialog]
/// widgets. ¿ ﬁºV¿ ﬂ¿ ﬂ2/// A theme for customizing the shape of a dialog. ¿ ﬂÄë¿ ﬂú¿ ﬂúi/// A theme for customizing the color, thickness, and indents of [Divider]s,
/// [VerticalDivider]s, etc. ¿ ﬂ≠n¿ ‡¿ ‡J/// A theme for customizing the appearance and layout of [Drawer] widgets. ¿ ‡ ÄÄ¿ ‡è¿ ‡èP/// A theme for customizing the appearance and layout of [DropdownMenu] widgets. ¿ ‡•Äé¿ · ¿ · X/// A theme for customizing the appearance and internal layout of
/// [ElevatedButton]s. ¿ ·8x¿ ·û¿ ·ûF/// A theme for customizing the visual properties of [ExpansionTile]s. ¿ ·µÄà¿ ‚,¿ ‚,V/// A theme for customizing the appearance and internal layout of
/// [FilledButton]s. ¿ ‚BÄû¿ ‚«¿ ‚«\/// A theme for customizing the shape, elevation, and color of a
/// [FloatingActionButton]. ¿ ‚ÂÄÇ¿ „X¿ „XT/// A theme for customizing the appearance and internal layout of
/// [IconButton]s. ¿ „li¿ „»¿ „»A/// A theme for customizing the appearance of [ListTile] widgets. ¿ „⁄Ä≥¿ ‰Å¿ ‰ÅÄã/// A theme for customizing the color, shape, elevation, and other [MenuStyle]
/// aspects of the menu bar created by the [MenuBar] widget. ¿ ‰íÄ√¿ ÂF¿ ÂFÄï/// A theme for customizing the color, shape, elevation, and text style of
/// cascading menu buttons created by [SubmenuButton] or [MenuItemButton]. ¿ ÂZÄØ¿ Ê ¿ Ê Äç/// A theme for customizing the color, shape, elevation, and other [MenuStyle]
/// attributes of menus created by the [SubmenuButton] widget. ¿ ÊÄõ¿ Êó¿ Êóg/// A theme for customizing the background color, text style, and icon themes
/// of a [NavigationBar]. ¿ ÊÆÄ§¿ Á=¿ Á=j/// A theme for customizing the background color, text style, and icon themes
/// of a [NavigationDrawer]. ¿ ÁWÄ©¿ ÁÌ¿ ÁÌs/// A theme for customizing the background color, elevation, text style, and
/// icon themes of a [NavigationRail]. ¿ ËÄé¿ ËÄ¿ ËÄX/// A theme for customizing the appearance and internal layout of
/// [OutlinedButton]s. ¿ ËòÄá¿ È¿ È[/// A theme for customizing the color, shape, elevation, and text style of
/// popup menus. ¿ È$Äè¿ Èù¿ ÈùU/// A theme for customizing the appearance and layout of [ProgressIndicator] widgets. ¿ È∏k¿ Í¿ ÍI/// A theme for customizing the appearance and layout of [Radio] widgets. ¿ Í(w¿ Íë¿ ÍëM/// A theme for customizing the appearance and layout of [SearchBar] widgets. ¿ Í§Äî¿ Î)¿ Î)h/// A theme for customizing the appearance and layout of search views created by [SearchAnchor] widgets. ¿ Î=Äâ¿ Î≤¿ Î≤S/// A theme for customizing the appearance and layout of [SegmentedButton] widgets. ¿ ÎÀÄî¿ ÏT¿ ÏTl/// The colors and shapes used to render [Slider].
///
/// This is the value returned from [SliderTheme.of]. ¿ Ïd{¿ Ï“¿ Ï“S/// A theme for customizing colors, shape, elevation, and behavior of a [SnackBar]. ¿ Ï‰n¿ ÌG¿ ÌGJ/// A theme for customizing the appearance and layout of [Switch] widgets. ¿ ÌWt¿ Ì¿¿ Ì¿P/// A theme for customizing the size, shape, and color of the tab bar indicator. ¿ Ì–ÄÇ¿ ÓC¿ ÓCT/// A theme for customizing the appearance and internal layout of
/// [TextButton]s. ¿ ÓW¿ Óƒ¿ ÓƒM/// A theme for customizing the appearance and layout of [TextField] widgets. ¿ Ó€y¿ ÔE¿ ÔEM/// A theme for customizing the appearance and layout of time picker widgets. ¿ ÔYs¿ Ô∫¿ Ô∫A/// Defines the default configuration of [ToggleButtons] widgets. ¿ Ô—Ä•¿ j¿ j{/// A theme for customizing the visual properties of [Tooltip]s.
///
/// This is the value returned from [TooltipTheme.of]. ¿ Òv)¿ Òê¿ Òê  ¿ Ò§Ä”¿ Úb¿ Úb./// The background color of [Dialog] elements.¿ Ò’¿ Ò÷¿ Ò‡¿ ÚR¿ ÒÊ¿ Ú¿ Ú|Ä÷¿ ÛD¿ ÛD9/// The color of the selected tab indicator in a tab bar.¿ Ú∏¿ Úπ¿ Ú√¿ Û4¿ Ú…¿ Ú¸¿"k1¿"|¿"| ¿"õ¿"°Ä¿#!¿#!>/// Caches localized themes to speed up the [localize] method.¿#B¿#L¿#r¿#M¿#i¿#s¿#ê¿#t¿ í¿Å¿ ì∏¿ ì∏Äﬁ/// The overall theme brightness.
///
/// The default [TextStyle] color for the [textTheme] is black if the
/// theme is constructed with [Brightness.light] and white if the
/// theme is constructed with [Brightness.dark].   ¿ {Ä¯¿ ÒP¿ ÒPM/// A theme for customizing the appearance and layout of [ButtonBar] widgets.  ¿ À¿ Ã¿ ÷¿ Ò5¿ ‹¿ ¸¿uùâ”¿u±¿u±   ¿uù¿uû ¿ êèÄÊ¿ ë<¿ ë<Äó/// Used to obtain a particular [Adaptation] from [adaptationMap].
///
/// To get an adaptation, use `Theme.of(context).getAdaptation<MyAdaptation>()`.¿ ëJ¿ ëJ¿ ëJ  ¿ ëyÅC¿ ëû¿ ëû  ¿ ë∏(¿ ë÷¿ ë’   ¿ °ÄÛ¿ °ﬁ¿ °ﬁÄø/// Used to obtain a particular [ThemeExtension] from [extensions].
///
/// Obtain with `Theme.of(context).extension<MyThemeExtension>()`.
///
/// See [extensions] for an interactive example.¿ °Ë¿ °Ë¿ °Ë  ¿ ÛW≠Í¿ Ù ¿ Ù Äò/// Creates a copy of this theme but with the given fields replaced with the new values.
///
/// The [brightness] value is applied to the [colorScheme]. T¿ ı=)¿ ı\¿ ı[  ¿ ıl ¿ ıs¿ ır  ¿ ıí3¿ ı∞¿ ıØ  ¿ ıÀ-¿ ıÔ¿ ıÓ  ¿ ı˛¿ ˆ¿ ˆ  ¿ ˆ ,¿ ˆ8¿ ˆ7  ¿ ˆR*¿ ˆi¿ ˆh  ¿ ˆÇ¿ ˆì¿ ˆí  ¿ ˆ†"¿ ˆµ¿ ˆ¥  ¿ ˆ»+¿ ˆÁ¿ ˆÊ  ¿ ˆ˘¿ ˜	¿ ˜  ¿ ˜(¿ ˜6¿ ˜5  ¿ ˜F¿ ˜S¿ ˜R  ¿ ¯A¿ ¯I¿ ¯H  ¿ ¯Y¿ ¯a¿ ¯`  ¿ ¯o¿ ¯w¿ ¯v  ¿ ¯â¿ ¯ë¿ ¯ê  ¿ ¯¢¿ ¯™¿ ¯©  ¿ ¯π¿ ¯¡¿ ¯¿  ¿ ¯‘¿ ¯‹¿ ¯€  ¿ ¯Í¿ ¯Ú¿ ¯Ò  ¿ ˘¿ ˘	¿ ˘  ¿ ˘¿ ˘"¿ ˘!  ¿ ˘7¿ ˘?¿ ˘>  ¿ ˘U¿ ˘]¿ ˘\  ¿ ˘y¿ ˘Å¿ ˘Ä  ¿ ˘ö¿ ˘¢¿ ˘°  ¿ ˘≤¿ ˘∫¿ ˘π  ¿ ˘ ¿ ˘“¿ ˘—  ¿ ˙¿ ˙¿ ˙  ¿ ˙*¿ ˙:¿ ˙9  ¿ ˙O¿ ˙[¿ ˙Z  ¿ ˙p¿ ˙|¿ ˙{  ¿ ˙ä¿ ˙ó¿ ˙ñ  ¿ ˙æ$¿ ˙‘¿ ˙”  ¿ ˚+¿ ˚4¿ ˚3  ¿ ˚D¿ ˚U¿ ˚T  ¿ ˚d$¿ ˚~¿ ˚}  ¿ ˚é(¿ ˚¶¿ ˚•  ¿ ˚º6¿ ˚€¿ ˚⁄  ¿ ˚¯&¿ ¸¿ ¸  ¿ ¸$¿ ¸6¿ ¸5  ¿ ¸F¿ ¸V¿ ¸U  ¿ ¸d(¿ ¸|¿ ¸{  ¿ ¸í ¿ ¸¶¿ ¸•  ¿ ¸∏¿ ¸»¿ ¸«  ¿ ¸÷"¿ ¸Î¿ ¸Í  ¿ ¸˛$¿ ˝¿ ˝  ¿ ˝(¿ ˝:¿ ˝9  ¿ ˝J¿ ˝]¿ ˝\  ¿ ˝n¿ ˝Ä¿ ˝  ¿ ˝ê(¿ ˝®¿ ˝ß  ¿ ˝æ,¿ ˝ÿ¿ ˝◊  ¿ ˝*¿ ˛	¿ ˛  ¿ ˛ (¿ ˛8¿ ˛7  ¿ ˛N8¿ ˛n¿ ˛m  ¿ ˛å$¿ ˛¢¿ ˛°  ¿ ˛∂ ¿ ˛ ¿ ˛…  ¿ ˛‹¿ ˛Ô¿ ˛Ó  ¿ ˇ $¿ ˇ¿ ˇ  ¿ ˇ*¿ ˇ:¿ ˇ9  ¿ ˇH*¿ ˇa¿ ˇ`  ¿ ˇx0¿ ˇî¿ ˇì  ¿ ˇÆ,¿ ˇ»¿ ˇ«  ¿ ˇ‡,¿ ˇ˙¿ ˇ˘  ¿ "¿ '¿ &  ¿ :2¿ W¿ V  ¿ r¿ É¿ Ç  ¿ í"¿ ß¿ ¶  ¿ ∫$¿ –¿ œ  ¿ ‰.¿ ˇ¿ ˛  ¿¿*¿)  ¿: ¿N¿M  ¿`¿r¿q  ¿Ç¿î¿ì  ¿§$¿∫¿π  ¿Œ*¿Á¿Ê  ¿˛$¿¿  ¿(*¿A¿@  ¿X¿k¿j  ¿≤År¿¿  ¿*Äò¿µ¿¥  ¿»Ä•¿Y¿X  ¿sÄù¿¿  ¿≤¿≥¿Ω¿¿≈¿¿K¿ê¿“¿*¿+¿5¿ö¿=¿_¿»¿…¿”¿K¿€¿¿s¿t¿~¿ı¿Ü¿ª¿#ñÜ¿%U¿%UÅü/// Returns a new theme built by merging the text geometry provided by the
/// [localTextGeometry] theme with the [baseTheme].
///
/// For those text styles in the [baseTheme] whose [TextStyle.inherit] is set
/// to true, the returned theme's text styles inherit the geometric properties
/// of [localTextGeometry]. The resulting text styles' [TextStyle.inherit] is
/// set to those provided by [localTextGeometry]. ¿%^¿%i¿%h  ¿%s¿%~¿%}   ¿)†É¡¿*ñ¿*ñÄŸ/// Determines whether the given [Color] is [Brightness.light] or
/// [Brightness.dark].
///
/// This compares the luminosity of the given color to a threshold value that
/// matches the Material Design specification. ¿*±¿*∏¿*∑   ¿-eÉO¿.)¿.)Äç/// Linearly interpolate between two [extensions].
///
/// Includes all theme extensions in [a] and [b].
///
/// {@macro dart.ui.shadow.lerp} ¿.C¿.N¿.M  ¿.T¿._¿.^  ¿.e¿.m¿.l   ¿0∏Çw¿1í¿1íÄ©/// Convert the [extensionsIterable] passed to [ThemeData.new] or [copyWith]
/// to the stored [extensions] map, where each entry's key consists of the extension's type. ¿1¥4¿1◊¿1÷   ¿33ê3¿3=¿3=    ¿Cjü=¿C”¿C”Q/// Linearly interpolate between two themes.
///
/// {@macro dart.ui.shadow.lerp} ¿Cÿ¿C„¿C‚  ¿CÂ¿C¿CÔ  ¿CÚ¿C˙¿C˘   ¿b´íÓ¿b≈¿b≈  ¿b»¿b–¿bœ  ¿b´¿b¨¿t¿ D¯¿Ö¿Ö  ¿ô&¿∂¿µ  ¿t¿uû¸û˝¿ƒpì¸¿ƒp¿ ÑÅ/// A [CupertinoThemeData] that defers unspecified theme attributes to an
/// upstream Material [ThemeData].
///
/// This type of [CupertinoThemeData] is used by the Material [Theme] to
/// harmonize the [CupertinoTheme] with the material theme's colors and text
/// styles.
///
/// In the most basic case, [ThemeData]'s `cupertinoOverrideTheme` is null and
/// descendant Cupertino widgets' styling is derived from the Material theme.
///
/// To override individual parts of the Material-derived Cupertino styling,
/// `cupertinoOverrideTheme`'s construction parameters can be used.
///
/// To completely decouple the Cupertino styling from Material theme derivation,
/// another [CupertinoTheme] widget can be inserted as a descendant of the
/// Material [Theme]. On a [MaterialApp], this can be done using the `builder`
/// parameter on the constructor.
///
/// See also:
///
///  * [CupertinoThemeData], whose null constructor parameters default to
///    reasonable iOS styling defaults rather than harmonizing with a Material
///    theme.
///  * [Theme], widget which inserts a [CupertinoTheme] with this
///    [MaterialBasedCupertinoThemeData]. ¿ YÅD¿ “ ¿ “¿ Ò t/// Create a [MaterialBasedCupertinoThemeData] based on a Material [ThemeData]
/// and its `cupertinoOverrideTheme`.¿ Û ¿À¿À  ¿À¿À ¿À!¿À"¿Àõ¿À,¿ÀC¿ÀÜ¿Ài¿ÀD¿ÀQ¿ÀR¿Àl¿Àr¿ÀÑ¿ÀÖ¿Àá¿Àà¿Àë¿Àí¿À°ÇÓ¿À°¿À¿¿À¡¿À¬¿À¡ ¿À√¿À…¿À»  ¿Àÿ¿Àﬁ¿À›  #¿Ã§¿Ã©¿Ã™¿Ã≠¿Œç¿Ã∑¿ÃŒ¿Ãœ¿Ã„¿Ã˙¿Ã˚¿Õ¿Õ(¿Õ)¿ÕJ¿Õa¿Õb¿Õu¿Õå¿Õç¿Õ©¿Õ¿¿Õ¡¿Œ¿Õ‚¿Õ˘¿Õ˙¿Œ¿Œ,¿Œ-¿Œ?¿Œ@¿Œ^¿Œu¿Œv¿Œì¿Œ£¿Œ£  ¿Œµ9¿Œ◊¿Œ◊  ¿ŒÛi¿œ¿œ   ¿ŒÛ¿ŒÙ¿œ`w¿œv¿œv   ¿œ`¿œa¿œ€Äè¿œÒ¿œÒ   ¿œ€¿œ‹¿–nÄë¿–Ñ¿–Ñ   ¿–n¿–o ¿—ÖV¿”e¿”eÇ!/// Copies the [ThemeData]'s `cupertinoOverrideTheme`.
///
/// Only the specified override attributes of the [ThemeData]'s
/// `cupertinoOverrideTheme` and the newly specified parameters are in the
/// returned [CupertinoThemeData]. No derived attributes from iOS defaults or
/// from cascaded Material theme attributes are copied.
///
/// This [copyWith] cannot change the base Material [ThemeData]. To change the
/// base Material [ThemeData], create a new Material [Theme] and use
/// [ThemeData.copyWith] on the Material [ThemeData] instead. ¿”t¿”Å¿”Ä  ¿”ê¿”ò¿”ó  ¿”©¿”±¿”∞  ¿”Õ!¿”Ê¿”Â  ¿”Ù¿”¸¿”˚  ¿‘¿‘¿‘  ¿‘7¿‘?¿‘>  ¿‘X¿‘_¿‘^  ¿”9¿”:¿÷]Ç¿÷|¿÷|  ¿÷à¿÷ñ¿÷ï  ¿÷]¿÷^ ¿ÿnÑ“¿ÿn¿⁄ΩÇH/// A class for creating a Material theme with a color scheme based off of the
/// colors from a [CupertinoThemeData]. This is intended to be used only in the
/// case when a Material widget is unable to find a Material theme in the tree,
/// but is able to find a Cupertino theme. Most often this will occur when a
/// Material widget is used inside of a [CupertinoApp].
///
/// Besides the colors, this theme will use all the defaults from Material's
/// [ThemeData], so if further customization is needed, it is best to manually
/// add a Material [Theme] above the [CupertinoApp]. ¿⁄·ÅÊ¿€O ¿€O¿€n i/// Creates a Material theme with a color scheme based off of the colors from
/// a [CupertinoThemeData].¿€p%¿€ç¿€å  $¿€¨¿€û¿€Æ¿€∑¿‹≈¿€Ã¿€¡¿€Œ¿€Ÿ¿€⁄¿€‚¿‹º¿€˜¿€Ó¿€˘¿‹¿‹¿‹%¿‹¿‹<¿‹'¿‹0¿‹1¿‹?¿‹I¿‹J¿‹b¿‹[¿‹d¿‹m¿‹n¿‹è¿‹Ü¿‹ë¿‹ö¿‹õ¿‹Àr¿›0¿›0R/// The Material theme data with colors based on an existing [CupertinoThemeData].     ¿›BÇ‘¿›B¿›S  ¿›rI¿›x ¿›x¿›í  ¿›ì¿›ô¿›ò  ¿›£¿›©¿›®   ¿›ø¿›œ¿›œ  ¿›‹!¿›Ï¿›Ï  ¿ﬁib¿ﬁ}¿ﬁ}   ¿ﬁi¿ﬁj ¿ﬁœÅE¿ﬁÈ¿ﬁÈ  ¿ﬁÏ¿ﬁÙ¿ﬁÛ  ¿ﬁœ¿ﬁ–¿›B¿›C¿‡Ñé¿‡¿·Ä/// Cache of objects of limited size that uses the first in first out eviction
/// strategy (a.k.a least recently inserted).
///
/// The key that was inserted before all other keys is evicted first, i.e. the
/// one inserted least recently.¿·¿·¿·¿·¿·¿·¿·$9¿·$ ¿·$¿·.  ¿·/¿·5¿·4  ¿·D¿·J¿·[¿·X¿·K¿·Z¿·aÄÀ¿‚¿‚Ä£/// In Dart the map literal uses a linked hash-map implementation, whose keys
/// are stored such that [Map.keys] returns them in the order they were
/// inserted.¿‚*¿‚+¿‚$¿‚)¿‚%¿‚(¿‚1ÄŒ¿‚Û¿‚ÛÄØ/// Maximum number of entries to store in the cache.
///
/// Once this many entries have been cached, the entry inserted least recently
/// is evicted when adding a new entry.   ¿„Å†¿„å¿„åÄÅ/// Returns the previously cached value for the given key, if available;
/// if not, calls the given callback to obtain it first. ¿„ò¿„õ¿„ö  ¿„ü¿„≠¿„¨    ¿‰®£9¿‰®¿Í(Ön/// Defines the visual density of user interface components.
///
/// Density, in the context of a UI, is the vertical and horizontal
/// "compactness" of the components in the UI. It is unitless, since it means
/// different things to different UI components.
///
/// The default for visual densities is zero for both vertical and horizontal
/// densities, which corresponds to the default visual density of components in
/// the Material Design specification. It does not affect text sizes, icon
/// sizes, or padding values.
///
/// For example, for buttons, it affects the spacing around the child of the
/// button. For lists, it affects the distance between baselines of entries in
/// the list. For chips, it only affects the vertical size, not the horizontal
/// size.
///
/// Here are some examples of widgets that respond to density changes:
///
///  * [Checkbox]
///  * [Chip]
///  * [ElevatedButton]
///  * [IconButton]
///  * [InputDecorator] (which gives density support to [TextField], etc.)
///  * [ListTile]
///  * [MaterialButton]
///  * [OutlinedButton]
///  * [Radio]
///  * [RawMaterialButton]
///  * [TextButton]
///
/// See also:
///
///  * [ThemeData.visualDensity], where this property is used to specify the base
///    horizontal density of Material components.
///  * [Material design guidance on density](https://material.io/design/layout/applying-density.html). ¿ÍNÅ™¿Î ¿Î¿Î Ä¥/// A const constructor for [VisualDensity].
///
/// The [horizontal] and [vertical] arguments must be in the interval between
/// [minimumDensity] and [maximumDensity], inclusive.¿Î ¿Î&¿Î%  ¿Î7¿Î=¿Î<  ¿Î2¿ÎG¿ÎS¿ÎY¿Ît¿Îc¿ÎZ¿Îf¿Î}¿ÎÉ¿Îû¿Îç¿ÎÑ¿Îê¿Îß¿Î≠¿Î ¿Îπ¿ÎÆ¿Îº¿Î”¿ÎŸ¿Îˆ¿ÎÂ¿Î⁄¿ÎË¿Î¸L¿Ï3¿Ï3 /// The minimum allowed density.¿ÏD¿ÏE¿ÏMK¿ÏÑ¿ÏÑ /// The maximum allowed density.¿Ïï¿ÏùÅ-¿Ì∞¿Ì∞ÄÌ/// The default profile for [VisualDensity] in [ThemeData].
///
/// This default value represents a visual density that is less dense than
/// either [comfortable] or [compact], and corresponds to density values of
/// zero in both axes.¿Ìª¿Ì»¿Ì…¿ÌœÇ¿Ô©¿Ô©ÅÆ/// The profile for a "comfortable" interpretation of [VisualDensity].
///
/// Individual components will interpret the density value independently,
/// making themselves more visually dense than [standard] and less dense than
/// [compact] to different degrees based on the Material Design specification
/// of the "comfortable" setting for their particular use case.
///
/// It corresponds to a density value of -1 in both axes.¿Ô∑¿Ôƒ¿ÔÂ¿Ôœ¿Ô≈¿Ô—¿Ô“¿Ôﬂ¿Ô◊¿Ô·¿Ô‚¿ÔÎÇ¿Òµ¿ÒµÅû/// The profile for a "compact" interpretation of [VisualDensity].
///
/// Individual components will interpret the density value independently,
/// making themselves more visually dense than [standard] and [comfortable] to
/// different degrees based on the Material Design specification of the
/// "comfortable" setting for their particular use case.
///
/// It corresponds to a density value of -2 in both axes.¿Òø¿ÒÃ¿ÒÌ¿Ò◊¿ÒÕ¿ÒŸ¿Ò⁄¿ÒÁ¿Òﬂ¿ÒÈ¿ÒÍ¿¯|Ç¿˚b¿˚bÇº/// The horizontal visual density of UI components.
///
/// This property affects only the horizontal spacing between and within
/// components, to allow for different UI visual densities. It does not affect
/// text sizes, icon sizes, or padding values. The default value is 0.0,
/// corresponding to the metrics specified in the Material Design
/// specification. The value can range from [minimumDensity] to
/// [maximumDensity], inclusive.
///
/// See also:
///
///  * [ThemeData.visualDensity], where this property is used to specify the base
///    horizontal density of Material components.
///  * [Material design guidance on density](https://material.io/design/layout/applying-density.html). ¿˚qÇË¿˛Q¿˛QÇ∂/// The vertical visual density of UI components.
///
/// This property affects only the vertical spacing between and within
/// components, to allow for different UI visual densities. It does not affect
/// text sizes, icon sizes, or padding values. The default value is 0.0,
/// corresponding to the metrics specified in the Material Design
/// specification. The value can range from [minimumDensity] to
/// [maximumDensity], inclusive.
///
/// See also:
///
///  * [ThemeData.visualDensity], where this property is used to specify the base
///    vertical density of Material components.
///  * [Material design guidance on density](https://material.io/design/layout/applying-density.html). ¿ÒÛÇ¿¿Ùa¿ÙaÇ:/// Returns a [VisualDensity] that is adaptive based on the current platform
/// on which the framework is executing, from [defaultTargetPlatform].
///
/// When [defaultTargetPlatform] is a desktop platform, this returns
/// [compact], and for other platforms, it returns a default-constructed
/// [VisualDensity].
///
/// See also:
///
/// * [defaultDensityForPlatform] which returns a [VisualDensity] that is
///   adaptive based on the platform given to it.
/// * [defaultTargetPlatform] which returns the platform on which the
///   framework is currently executing.   ¿˛^Çß¿ˇ»¿ˇ»ÅP/// The base adjustment in logical pixels of the visual density of UI components.
///
/// The input density values are multiplied by a constant to arrive at a base
/// size adjustment that fits Material Design guidelines.
///
/// Individual components may adjust this value based upon their own
/// individual interpretation of density.   ¿„B¿˜¿˜   ¿„¿‰ ¿Ù∑Çõ¿ˆA¿ˆAÅb/// Returns a [VisualDensity] that is adaptive based on the given [platform].
///
/// For desktop platforms, this returns [compact], and for other platforms, it
/// returns a default-constructed [VisualDensity].
///
/// See also:
///
/// * [adaptivePlatformDensity] which returns a [VisualDensity] that is
///   adaptive based on [defaultTargetPlatform]. ¿ˆ[¿ˆk¿ˆj   ¿˜VÅ"¿˜≈¿˜≈\/// Copy the current [VisualDensity] with the given values replacing the
/// current values. ¿˜œ¿˜ÿ¿˜◊  ¿˜„¿˜Ï¿˜Î   ¿	ÅE¿P¿P//// Linearly interpolate between two densities. ¿U¿d¿c  ¿f¿u¿t  ¿w¿¿~   ¿RÇ∞¿e¿eÄ˘/// Return a copy of [constraints] whose minimum width and height have been
/// updated with the [baseSizeAdjustment].
///
/// The resulting minWidth and minHeight values are clamped to not exceed the
/// maxWidth and maxHeight values, respectively. ¿z¿ä¿â   ¿ÄŸ¿ ¿   ¿#¿+¿*  ¿¿¿)Å¿:¿:  ¿N&¿k¿j  ¿)¿*¿HÄó¿[¿[   ¿H¿I¿Í¿Í ìıÑìıñìÇò/// Configures the tap target and layout size of certain Material widgets.
///
/// Changing the value in [ThemeData.materialTapTargetSize] will affect the
/// accessibility experience.
///
/// Some of the impacted widgets include:
///
///   * [FloatingActionButton], only the mini tap target size is increased.
///   * [MaterialButton]
///   * [OutlinedButton]
///   * [TextButton]
///   * [ElevatedButton]
///   * [IconButton]
///   * The time picker widget ([showTimePicker])
///   * [SnackBar]
///   * [Chip]
///   * [RawChip]
///   * [InputChip]
///   * [ChoiceChip]
///   * [FilterChip]
///   * [ActionChip]
///   * [Radio]
///   * [Switch]
///   * [Checkbox]  ñ≠ÄÓóïóïÄ›/// Expands the minimum tap target size to 48px by 48px.
///
/// This is the default value of [ThemeData.materialTapTargetSize] and the
/// recommended size to conform to Android accessibility scanner
/// recommendations. ó†ióˇóˇZ/// Shrinks the tap target size to the minimum provided by the Material
/// specification.             ¿	á©¿	¿	 Å.¿	4¿	?¿¥¿	M¿	C¿	O¿	Y¿	Z¿	j¿	c¿	l¿	q¿	|¿	r¿	ä¿	Å¿	å¿	ë¿	ú¿	í¿	±¿	°¿	≥¿	∏¿	√¿	π¿	⁄¿	»¿	‹¿	·¿	Ï¿	‚¿	˝¿	Ò¿	ˇ¿
¿
¿
¿
#¿
¿
%¿
*¿
5¿
+¿
H¿
:¿
J¿
O¿
Z¿
P¿
t¿
_¿
v¿
{¿
Ü¿
|¿
î¿
ã¿
ñ¿
õ¿
¶¿
ú¿
∂¿
´¿
∏¿
Ω¿
»¿
æ¿
ﬂ¿
Õ¿
·¿
Ê¿
Ò¿
Á¿
¿
ˆ¿¿¿¿¿/¿!¿1¿6¿A¿7¿W¿F¿Y¿^¿i¿_¿~¿n¿Ä¿Ö¿ê¿Ü¿¨¿ï¿Æ¿≥¿æ¿¥¿À¿√¿Õ¿“¿›¿”¿Ï¿‚¿Ó¿Û¿˛¿Ù¿¿¿¿¿&¿¿>¿+¿@¿E¿P¿F¿b¿U¿d¿i¿t¿j¿â¿y¿ã¿ê¿õ¿ë¿Ø¿†¿±¿∂¿¡¿∑¿‹¿∆¿ﬁ¿„¿Ó¿‰¿¯¿Û¿˙¿ˇ¿
¿ ¿¿¿¿¿(¿¿;¿-¿=¿B¿M¿C¿b¿R¿d¿i¿t¿j¿É¿y¿Ö¿ä¿ï¿ã¿¶¿ö¿®¿≠¿∏¿Æ¿ƒ¿Ω¿∆¿À¿÷¿Ã¿Ë¿€¿Í¿Ô¿˙¿¿¿ˇ¿¿¿'¿¿?¿,¿A¿F¿Q¿G¿f¿V¿h¿m¿x¿n¿ë¿}¿ì¿ò¿£¿ô¿ø¿®¿¡¿∆¿—¿«¿‡¿÷¿‚¿Á¿Ú¿Ë¿ ¿˜¿¿¿¿¿%¿¿'¿,¿7¿-¿L¿<¿N¿S¿^¿T¿j¿c¿l¿q¿|¿r¿è¿Å¿ë¿ñ¿°¿ó¿¨¿¶¿Æ¿≥¿æ¿¥¿»¿√¿ ¿œ¿⁄¿–¿Ì¿ﬂ¿Ô¿Ù¿ˇ¿ı¿¿¿¿¿&¿¿9¿+¿;¿@¿K¿A¿ü¿î¿°¿¶¿±¿ß¿∏áß¿ ¿  Å.¿ﬂ¿Í¿^¿¯¿Ó¿˙¿¿¿¿¿¿¿&¿¿4¿+¿6¿;¿F¿<¿[¿K¿]¿b¿m¿c¿Ñ¿r¿Ü¿ã¿ñ¿å¿ß¿õ¿©¿Æ¿π¿Ø¿Õ¿æ¿œ¿‘¿ﬂ¿’¿Ú¿‰¿Ù¿˘¿¿˙¿¿	¿ ¿%¿0¿&¿>¿5¿@¿E¿P¿F¿`¿U¿b¿g¿r¿h¿â¿w¿ã¿ê¿õ¿ë¿¥¿†¿∂¿ª¿∆¿º¿Ÿ¿À¿€¿‡¿Î¿·¿¿¿¿¿¿	¿(¿¿*¿/¿:¿0¿V¿?¿X¿]¿h¿^¿u¿m¿w¿|¿á¿}¿ñ¿å¿ò¿ù¿®¿û¿æ¿≠¿¿¿≈¿–¿∆¿Ë¿’¿Í¿Ô¿˙¿¿¿ˇ¿¿¿¿¿3¿#¿5¿:¿E¿;¿Y¿J¿[¿`¿k¿a¿Ü¿p¿à¿ç¿ò¿é¿¢¿ù¿§¿©¿¥¿™¿¿¿π¿¬¿«¿“¿»¿Â¿◊¿Á¿Ï¿˜¿Ì¿¿¸¿¿¿¿¿-¿#¿/¿4¿?¿5¿P¿D¿R¿W¿b¿X¿n¿g¿p¿u¿Ä¿v¿í¿Ö¿î¿ô¿§¿ö¿ø¿©¿¡¿∆¿—¿«¿È¿÷¿Î¿¿˚¿Ò¿¿ ¿¿¿"¿¿;¿'¿=¿B¿M¿C¿i¿R¿k¿p¿{¿q¿ä¿Ä¿å¿ë¿ú¿í¿™¿°¿¨¿±¿º¿≤¿œ¿¡¿—¿÷¿·¿◊¿ˆ¿Ê¿¯¿˝¿¿˛¿¿¿¿¿&¿¿9¿+¿;¿@¿K¿A¿V¿P¿X¿]¿h¿^¿r¿m¿t¿y¿Ñ¿z¿ó¿â¿ô¿û¿©¿ü¿æ¿Æ¿¿¿≈¿–¿∆¿„¿’¿Â¿Í¿ı¿Î¿I¿>¿K¿P¿[¿Q   ÄÆ  package:flutter/material.dart ç† <ÄÜÄ§Ä•Ä’ÄﬁÄﬂÅ)Å*ÅSÅ}Å~ÅúÅæÅ€ÅˆÇÇ6ÇaÇÉÇ£ÇøÇŸÇ˜ÉÉ/ÉKÉaÉzÉöÉªÉ◊ÉÙÑÑ3ÑRÑwÑõÑ∏Ñ€ÖÖ(ÖBÖ]ÖwÖ±Ö–ÖÈÜÜ&ÜGÜaÜÖÜ¨Ü—Üáá;á[áÉáûáΩá›á˛à$à@à_à{àòà≥à‘à¯ââ3âWâtâéâèâ«â»â‡â˛âˇäUäYäîä™ä…äﬂä‡ä˝ãããdã∞ã∂ã˚å<åçå›ç*ç{ç¶ç¨ç¬éé`é∞é›é„è*è<èxèzè{è√è«ê
êêWêßê¯ëëë&ëvëéëíëﬂëÔí,í[íuívííí™í´íÓìì?ì@ìÅìáì™ìÚìÙìıî@îDîêîÆî≤î‹î‡ï,ïEï^ïsïåï°ï”ïÊïıñññ0ñEñZñjñ{ñéñ´ñÊñÏó9ó|óìóùóûóËó˝òòòò^òÜòäò◊ô#ôfôjô∫ööYöÖöâöÿõ%õnõπú
úUúäúéú¢úÊù-ùsù∫ù˝û1û5ûÇûíûñû∆û˚û¸üü-ülürü¡††[†a†¨†ˆ°A°è°ﬂ¢¢¢c¢∞¢¸£2£8£~£Œ§§N§T§¢§ §–••b•h•©•ı¶¶ ¶Ö¶⁄ß:ßÄßÜßñßúßÁ®*®k®«®›©-©{©…©Ì©Ó™™:™`™ô™Ã´´;´m´ù´ª´„¨¨,¨G¨i¨v¨î¨∞¨Ã≠"≠s≠´≠√≠Ÿ≠ÛÆÆ#Æ>ÆTÆkÆÑÆ°ÆøÆ·ØØ&Ø>ØVØxØòØ∞Ø÷ØÎ∞	∞.∞O∞i∞Ö∞ù∞«±
±#±C±m±õ±◊≤≤%≤C≤q≤ó≤µ≤›≥≥)≥M≥o≥ù≥œ≥ˇ¥-¥k¥ï¥ª¥ﬂµ	µ'µWµçµøµÒ∂∂Q∂q∂ô∂√∂˜∑∑?∑a∑É∑≠∑›∏∏7∏[∏ë∏¢∏ƒπππ/π@πvπ≤π∏π⁄πÎ∫ ∫\∫b∫}∫Ñ∫°∫„ªª?ª¥ª‹ººPºñº≥ΩΩ$Ω,Ω2ΩqΩôΩ±Ω‘Ω˜ææVæwæòæªæˇøø@øsøºø◊øˆ¿ @D¿ @g¿ @¿ @®¿ @–¿ @Û¿ @Ù¿ A¿ A¿ A6¿ AV¿ Aá¿ AÃ¿ B¿ B1¿ B8¿ Bt¿ B≤¿ BÔ¿ C¿ C]¿ Cù¿ C–¿ Cı¿ D!¿ DG¿ Dr¿ D}¿ DÖ¿ DŒ¿ Dœ¿ E&¿ EÇ¿ E‰¿ EÂ¿ F1¿ F]¿ Fà¿ Fø¿ FË¿ G¿ GI¿ Gy¿ GΩ¿ G√¿ GÌ¿ H¿ HQ¿ H≤¿ H˛¿ ID¿ Ió¿ IÙ¿ JQ¿ Js¿ J∂¿ J„¿ K ¿ Kq¿ K∂¿ KÔ¿ L¿ L?¿ Lä¿ L¶¿ LÔ¿ M¿ M9¿ M@¿ Mà¿ Mÿ¿ N&¿ Nq¿ N¬¿ Nˇ¿ O$¿ OD¿ Oâ¿ O≠¿ OÀ¿ OÈ¿ P¿ P/¿ Pc¿ Pj¿ P™¿ P˝¿ QM¿ QN¿ Qn¿ Qé¿ Qﬁ¿ R¿ Rd¿ R¡¿ Rﬂ¿ S(¿ S¿ SÖ¿ S´¿ T¿ TC¿ Ts¿ T|¿ TÇ¿ Tù¿ T‡¿ U1¿ U7¿ Uj¿ U≤¿ UÀ¿ V¿ V9¿ V`¿ Vì¿ V«¿ V»¿ V‡¿ WC¿ Wb¿ Wä¿ W≤¿ WÊ¿ XD¿ XL¿ XR¿ X}¿ X≤¿ XÎ¿ Y2¿ Yi¿ Yí¿ YÀ¿ Y¸¿ Z%¿ ZX¿ Zç¿ Z∫¿ ZÈ¿ [¿ [O¿ [å¿ [«¿ \ ¿ \I¿ \~¿ \Ø¿ \ﬁ¿ ]¿ ]<¿ ]w¿ ]∏¿ ]ı¿ ^2¿ ^e¿ ^®¿ ^”¿ _¿ _;¿ _z¿ _ß¿ _ÿ¿ `¿ `2¿ `g¿ `¢¿ `◊¿ a¿ aA¿ aw¿ a™¿ aÛ¿ bX¿ bY¿ b~¿ b–¿ c ¿ cp¿ cñ¿ có¿ c∂¿ cÓ¿ d,¿ db¿ dû¿ dÏ¿ e ¿ eR¿ el¿ eí¿ e∂¿ eÿ¿ e¸¿ f¿ f+¿ fG¿ fg¿ fã¿ f≠¿ fÀ¿ fÒ¿ g¿ g+¿ gM¿ gw¿ g£¿ g€¿ h¿ h-¿ hM¿ hÅ¿ h£¿ hø¿ hÈ¿ i¿ i#¿ iM¿ ig¿ iè¿ iÛ¿ jD¿ jb¿ jÇ¿ jÆ¿ jË¿ k¿ k2¿ kN¿ kz¿ kû¿ k∫¿ k‡¿ l¿ l(¿ lJ¿ lj¿ lñ¿ l∆¿ lÙ¿ m ¿ m\¿ mÑ¿ m®¿ m ¿ mÚ¿ n¿ n<¿ np¿ n†¿ n–¿ nˆ¿ o,¿ oJ¿ op¿ oò¿ o ¿ oÍ¿ p¿ p.¿ pN¿ pv¿ p§¿ pÃ¿ p˙¿ q¿ qT¿ qz¿ qÆ¿ q‘¿ q€¿ q‹¿ q˜¿ r(¿ r.¿ r@¿ rD¿ rE¿ rë¿ rÃ¿ s¿ s
¿ sK¿ së¿ s∞¿ s»¿ t¿ tf¿ t¥¿ tÿ¿ tŸ¿ tˆ¿ u¿ uE¿ uo¿ uç¿ uµ¿ uﬁ¿ v¿ v"¿ vD¿ ve¿ vÖ¿ v¶¿ v≥¿ v“¿ w(¿ wy¿ w±¿ w–¿ wÌ¿ x¿ x.¿ xL¿ xn¿ xã¿ x©¿ x…¿ xÌ¿ y¿ y=¿ ye¿ yÑ¿ y£¿ yÃ¿ yÏ¿ z	¿ z-¿ zQ¿ zn¿ zå¿ z§¿ z«¿ zÊ¿ {¿ {#¿ {H¿ {t¿ {ò¿ {∑¿ {‘¿ {˘¿ |¿ |7¿ |Y¿ ||¿ |õ¿ |ª¿ |⁄¿ |ˇ¿ }&¿ }L¿ }q¿ }û¿ }¡¿ }‚¿ ~¿ ~%¿ ~B¿ ~h¿ ~ë¿ ~∏¿ ~ﬂ¿ ¿ +¿ I¿ k¿ é¿ ∂¿ ’¿ ˆ¿ Ä¿ Ä4¿ ÄW¿ Ä}¿ Ä†¿ Ä∆¿ ÄÊ¿ Å¿ Å-¿ ÅO¿ Åå¿ Åí¿ Å∫¿ ÅÀ¿ Ç¿ Ç=¿ ÇC¿ Çl¿ Ç}¿ Ç≤¿ ÇÓ¿ ÇÙ¿ É¿ ÉO¿ Éö¿ É√¿ ÉÍ¿ ÉÎ¿ Ñ9¿ Ñh¿ Ñn¿ Ñ™¿ Ñˆ¿ Ö@¿ ÖÜ¿ Öå¿ Ö◊¿ Ü&¿ Üb¿ Üh¿ Ü~¿ Ü…¿ ÜÌ¿ ÜÛ¿ á¿ á¿ á[¿ á•¿ á≠¿ á∑¿ á…¿ áœ¿ à¿ à8¿ àS¿ ày¿ àì¿ à´¿ à≤¿ àı¿ àˆ¿ âK¿ â•¿ ä¿ ä¿ ä¿ ä<¿ äf¿ äè¿ ä∑¿ äÎ¿ ã¿ ãN¿ ãÄ¿ ã≠¿ ã…¿ ãÛ¿ å¿ å¿ å ¿ å!¿ å>¿ åD¿ åí¿ å‡¿ ç¿ ç^¿ ç_¿ ç{¿ çÅ¿ çœ¿ é¿ éO¿ éô¿ éö¿ é‘¿ é⁄¿ è¿ è#¿ èq¿ èø¿ è≈¿ ê¿ ê)¿ êå¿ êç¿ ê“¿ êÿ¿ ë+¿ ëv¿ ëw¿ ë¥¿ ë‚¿ ëË¿ í<¿ íò¿ íü¿ íπ¿ íΩ¿ íæ¿ í‚¿ íË¿ ì0¿ ìt¿ ìß¿ ìﬁ¿ ìﬂ¿ î-¿ îy¿ î≈¿ îÁ¿ îË¿ ï¿ ï¿ ïR¿ ïs¿ ïy¿ ï∆¿ ñ¿ ñ^¿ ñl¿ ñr¿ ñæ¿ ó¿ óS¿ óû¿ ó€¿ ó·¿ ò¿ òZ¿ òß¿ òÚ¿ ô#¿ ô)¿ ôc¿ ôi¿ ô≥¿ ô˚¿ ö@¿ öo¿ öu¿ öÖ¿ öã¿ öŸ¿ öÒ¿ õ@¿ õq¿ õ¬¿ õÍ¿ ú¿ ú¿ ú_¿ ú}¿ úÉ¿ úÃ¿ ù¿ ùe¿ ù´¿ ù±¿ û¿ ûN¿ ûã¿ ûå¿ ûµ¿ ûª¿ ü¿ üE¿ üK¿ üz¿ üÄ¿ üñ¿ üË¿ †¿ †¿ †W¿ †i¿ †o¿ †¿ †Ö¿ †’¿ °¿ °¿ °U¿ °[¿ °†¿ °¶¿ °Ÿ¿ ¢¿ ¢¿ ¢W¿ ¢ô¿ ¢ü¿ ¢”¿ £¿ £	¿ £W¿ £ä¿ £ê¿ £ª¿ £Ú¿ £Û¿ §3¿ §9¿ §â¿ §“¿ §„¿ •¿ •¿ •]¿ •c¿ •±¿ •ˇ¿ ¶%¿ ¶X¿ ¶Y¿ ¶ô¿ ¶ü¿ ¶Ó¿ ß<¿ ßO¿ ßU¿ ß•¿ ßÓ¿ ®=¿ ®á¿ ®Ã¿ ©¿ ©[¿ ©¨¿ ©Â¿ ©Î¿ ™:¿ ™á¿ ™“¿ ´"¿ ´s¿ ´ß¿ ´”¿ ´Ÿ¿ ¨%¿ ¨F¿ ¨G¿ ¨ó¿ ¨¬¿ ¨√¿ ≠¿ ≠¿ ≠%¿ ≠5¿ ≠;¿ ≠Å¿ ≠Õ¿ ≠˙¿ ÆK¿ Æq¿ Æ•¿ Æ¶¿ ÆÒ¿ Æ˜¿ Ø<¿ Ø¿ Øë¿ Øó¿ ØŸ¿ ∞!¿ ∞o¿ ∞°¿ ∞ß¿ ∞π¿ ∞ø¿ ±¿ ±K¿ ±ò¿ ±€¿ ±·¿ ≤K¿ ≤Q¿ ≤≠¿ ≥	¿ ≥e¿ ≥¡¿ ¥¿ ¥#¿ ¥a¿ ¥¶¿ ¥¨¿ ¥˙¿ µJ¿ µt¿ µz¿ µî¿ µö¿ µ…¿ µœ¿ µ‡¿ ∂¿ ∂E¿ ∂z¿ ∂Ä¿ ∂ï¿ ∂Ø¿ ∂ÿ¿ ∂ˇ¿ ∑¿ ∑Ñ¿ ∑Õ¿ ∏B¿ ∏è¿ ∏ß¿ ∏⁄¿ ∏Î¿ π,¿ π}¿ πï¿ ∫¿ ∫T¿ ∫Ñ¿ ∫†¿ ∫Ÿ¿ ª%¿ ªj¿ ªñ¿ ªÏ¿ º¿ ºL¿ ºl¿ ºñ¿ º√¿ º¿ Ω6¿ Ωs¿ Ω–¿ Ω÷¿ æ¿ æU¿ æâ¿ æè¿ æü¿ æ•¿ æ‰¿ æˇ¿ ø ¿ øQ¿ øW¿ øí¿ øÿ¿ ¿&¿ ¿s¿ ¿ƒ¿ ¿˝¿ ¡¿ ¡O¿ ¡†¿ ¡Ô¿ ¬>¿ ¬ç¿ ¬“¿ ¬ÿ¿ √(¿ √w¿ √£¿ √©¿ √Û¿ ƒ:¿ ƒá¿ ƒç¿ ƒ◊¿ ≈¿ ≈ ¿ ≈n¿ ≈¬¿ ≈€¿ ≈·¿ ∆6¿ ∆h¿ ∆π¿ ∆È¿ ∆˛¿ «#¿ «$¿ «/¿ «0¿ «m¿ «à¿ «â¿ «ƒ¿ «›¿ «ﬁ¿ »¿ »¿ »n¿ »ø¿ …¿ …W¿ …}¿ …û¿ …ü¿ …‰¿  &¿  C¿  `¿  a¿  ¢¿  È¿  Ô¿ À:¿ À\¿ Àx¿ Ày¿ À√¿ À›¿ Àﬁ¿ Ã ¿ ÃN¿ Ãl¿ Ãm¿ ÃØ¿ Ã…¿ Ã‚¿ Ã„¿ Õ,¿ Õ=¿ ÕW¿ ÕX¿ Õ®¿ ÕÆ¿ Õ˙¿ ŒB¿ Œê¿ Œ≈¿ Œ·¿ Œ‚¿ œ¿ œ0¿ œ1¿ œ`¿ œÅ¿ œÇ¿ œœ¿ –¿ –B¿ –C¿ –ô¿ –≈¿ —-¿ —k¿ —è¿ —ê¿ —€¿ —·¿ “¿ “¿ “Z¿ “®¿ “Ù¿ ”A¿ ”j¿ ”Ö¿ ”Ü¿ ”ß¿ ”≠¿ ”Ω¿ ‘¿ ‘¿ ‘¿ ‘`¿ ‘´¿ ‘–¿ ‘—¿ ‘Ô¿ ‘¿ ’4¿ ’U¿ ’V¿ ’ë¿ ’π¿ ’∫¿ ’Ù¿ ÷¿ ÷¿ ÷a¿ ÷~¿ ÷¿ ÷Œ¿ ÷‘¿ ◊¿ ◊*¿ ◊+¿ ◊A¿ ◊B¿ ◊é¿ ◊¬¿ ◊¿ ◊Ò¿ ÿ?¿ ÿ]¿ ÿÇ¿ ÿÉ¿ ÿ∏¿ ÿ€¿ ÿ‹¿ Ÿ*¿ ŸW¿ ŸX¿ Ÿ´¿ Ÿ‹¿ Ÿ›¿ ⁄.¿ ⁄=¿ ⁄|¿ ⁄}¿ ⁄Œ¿ ⁄˝¿ ⁄˛¿ €O¿ €f¿ €ã¿ €å¿ €ø¿ €≈¿ €˚¿ ‹¿ ‹¿ ‹p¿ ‹°¿ ‹¢¿ ‹Ò¿ ›¿ ›¿ ›O¿ ›U¿ ›ã¿ ›¨¿ ›≠¿ ›Ù¿ ﬁ¿ ﬁ.¿ ﬁ/¿ ﬁ}¿ ﬁå¿ ﬁπ¿ ﬁ∫¿ ﬁÔ¿ ﬂ¿ ﬂ¿ ﬂd¿ ﬂÉ¿ ﬂ™¿ ﬂ´¿ ﬂ¯¿ ‡¿ ‡¿ ‡q¿ ‡¢¿ ‡£¿ ‡Á¿ · ¿ ·5¿ ·6¿ ·¿ ·≤¿ ·≥¿ ·˜¿ ‚¿ ‚?¿ ‚@¿ ‚É¿ ‚°¿ ‚‚¿ ‚„¿ „'¿ „<¿ „i¿ „j¿ „Æ¿ „◊¿ „ÿ¿ ‰)¿ ‰h¿ ‰è¿ ‰ê¿ ‰›¿ Â*¿ ÂW¿ ÂX¿ Â©¿ ÂÍ¿ Ê¿ Ê¿ Ê\¿ Êx¿ Ê´¿ Ê¨¿ Ê¸¿ Á¿ ÁT¿ ÁU¿ Á§¿ ÁÕ¿ Ë¿ Ë¿ ËG¿ Ë`¿ Ëï¿ Ëñ¿ Ë„¿ Ëˆ¿ È!¿ È"¿ Èz¿ Èµ¿ È∂¿ Í¿ Í%¿ Í&¿ Ív¿ Í°¿ Í¢¿ Î¿ Î:¿ Î;¿ Îë¿ Î»¿ Î…¿ Î˛¿ Ï¿ Ï<¿ Ïa¿ Ïb¿ Ï∏¿ Ï·¿ Ï‚¿ Ì/¿ ÌT¿ ÌU¿ Ì®¿ ÌÕ¿ ÌŒ¿ Ó¿ Ó'¿ ÓT¿ ÓU¿ Ó•¿ Óÿ¿ ÓŸ¿ Ô)¿ ÔV¿ ÔW¿ Ôõ¿ ÔŒ¿ Ôœ¿ ¿ ¿ Q¿ x¿ y¿ …¿ ÿ¿ ¯¿ Ò3¿ Ò7¿ Òt¿ Ò°¿ Ò¢¿ Ò”¿ Ò‚¿ Ú¿ ÚP¿ ÚT¿ Úy¿ Úz¿ Ú∂¿ Ú≈¿ Ú¯¿ Û2¿ Û6¿ ÛT¿ ÛU¿ Û∞¿ Û∂¿ ÛÙ¿ Ù¿ Ù[¿ Ù©¿ Ù˜¿ ı¿ ı¿ ı9¿ ıh¿ ıé¿ ı«¿ ı˙¿ ˆ¿ ˆN¿ ˆ~¿ ˆú¿ ˆƒ¿ ˆı¿ ˜¿ ˜$¿ ˜B¿ ˜^¿ ˜¥¿ ¯¿ ¯=¿ ¯U¿ ¯k¿ ¯Ö¿ ¯û¿ ¯µ¿ ¯–¿ ¯Ê¿ ¯˝¿ ˘¿ ˘3¿ ˘Q¿ ˘u¿ ˘ñ¿ ˘Æ¿ ˘∆¿ ˘Ë¿ ˙¿ ˙&¿ ˙K¿ ˙l¿ ˙Ü¿ ˙¢¿ ˙∫¿ ˙‰¿ ˚'¿ ˚@¿ ˚`¿ ˚ä¿ ˚∏¿ ˚Ù¿ ¸ ¿ ¸B¿ ¸`¿ ¸é¿ ¸¥¿ ¸“¿ ¸˙¿ ˝$¿ ˝F¿ ˝j¿ ˝å¿ ˝∫¿ ˝Ï¿ ˛¿ ˛J¿ ˛à¿ ˛≤¿ ˛ÿ¿ ˛¸¿ ˇ&¿ ˇD¿ ˇt¿ ˇ™¿ ˇ‹¿ ¿ 6¿ n¿ é¿ ∂¿ ‡¿¿6¿\¿~¿†¿ ¿˙¿$¿T¿x¿Æ¿ø¿¿E¿ä¿Ã¿¿¿&¿7¿Y¿ñ¿ú¿ƒ¿’¿¿G¿M¿o¿Ä¿µ¿Ò¿˜¿¿¿[¿\¿—¿˘¿3¿m¿≥¿–¿6¿A¿I¿O¿P¿j¿º¿	¿	\¿	Ç¿	É¿	¢¿
 ¿
a¿
∂¿¿7¿ë¿„¿2¿]¿ö¿‘¿%¿A¿x¿≤¿¡¿ı¿#¿z¿¥¿Î¿¿Y¿á¿∏¿Ô¿2¿x¿–¿¿S¿á¿Ÿ¿˚¿)¿l¿Ø¿›¿¿(¿h¿∏¿–¿Û¿¿D¿|¿ﬁ¿Í¿Ù¿8¿C¿t¿®¿Ó¿I¿å¿¿¿Ó¿4¿n¿ú¿Ÿ¿¿M¿Ñ¿∏¿˛¿J¿ì¿Ÿ¿7¿w¿±¿Ë¿(¿V¿ü¿Ò¿=¿â¿∆¿¿L¿â¿…¿¿L¿Ü¿∫¿Ó¿.¿w¿∑¿  ¿ 7¿ o¿ ®¿ ˙¿!7¿!>¿!B¿!C¿!ì¿!·¿".¿"i¿"û¿"ü¿"‡¿#<¿#ì¿#î¿#·¿$¿$¿$m¿$æ¿%¿%B¿%í¿%⁄¿&&¿&w¿&≈¿'¿'e¿'l¿'∫¿'À¿'“¿( ¿(J¿(K¿(|¿(º¿(«¿(Í¿);¿)~¿)â¿)í¿)ô¿)ù¿)û¿)‚¿)˚¿*¿*Q¿*Ç¿*¿¿*ˇ¿+ ¿+=¿+ê¿+‚¿,3¿,e¿,©¿,Õ¿-¿-<¿-B¿-^¿-b¿-c¿-ò¿-û¿-“¿-ÿ¿-˚¿.?¿.P¿.a¿.o¿.u¿.Ü¿.ÿ¿.È¿/¿/¿/_¿/ª¿/√¿/„¿0¿0#¿0Ü¿0è¿0ñ¿0ó¿0±¿0µ¿0∂¿1¿1d¿1∞¿1Í¿1¿2P¿2å¿2÷¿3$¿3,¿30¿31¿3[¿3ê¿3£¿3©¿3™¿3Ù¿4¿4,¿4-¿4I¿4J¿4f¿4è¿4¬¿4˚¿5'¿5Y¿5b¿5Ñ¿5π¿5Î¿5Ù¿5˚¿5¸¿6¿6N¿6Å¿6∞¿6±¿6Ã¿6Í¿7 ¿7K¿7á¿7√¿7˝¿8¿8[¿8h¿8s¿8°¿8»¿9¿9@¿9z¿9ë¿9ÿ¿9Â¿9¿:&¿:Q¿:ç¿:…¿;¿;¿;a¿;n¿;y¿;´¿;‘¿<¿<L¿<Ü¿<ù¿<‰¿<Ò¿<¸¿=>¿=x¿=≤¿=Ω¿=∆¿=Ã¿=Õ¿=ˆ¿>H¿>I¿>l¿>ä¿>«¿>ˆ¿?¿?l¿?™¿?ø¿@¿@\¿@s¿@‘¿A¿A)¿Aä¿A»¿Aﬂ¿B@¿B~¿Bñ¿B¯¿C6¿CA¿CJ¿CP¿CQ¿Cc¿Cg¿Ch¿Có¿Cù¿C¿¿C˛¿D¿D)¿D/¿DI¿Dõ¿DÎ¿E;¿Ea¿Eb¿EÅ¿E√¿EÌ¿F¿F@¿Fù¿FŒ¿G%¿G¿G÷¿H	¿H_¿H°¿H‡¿I.¿I=¿I~¿Iπ¿Iˇ¿JF¿Jä¿J»¿K¿KM¿Kã¿Kœ¿L¿Lr¿L◊¿M3¿Mt¿Mµ¿N¿N6¿Nx¿Nœ¿O"¿O`¿O¢¿Oº¿P¿P`¿P¶¿P¯¿QZ¿Qù¿Q¡¿QÂ¿Q¿Q˘¿RX¿Rî¿R÷¿S8¿Sä¿SÕ¿T#¿T}¿T«¿U¿U`¿U¬¿U˚¿V¿V9¿VD¿VN¿VÖ¿V£¿V¡¿VÃ¿V÷¿W9¿W~¿W£¿W»¿W”¿W›¿X8¿Xã¿X⁄¿Y5¿Yx¿YØ¿YÕ¿YÎ¿Yˆ¿Z ¿Z=¿Z^¿Z¿Zä¿Zî¿ZÕ¿ZÏ¿[¿[¿[ ¿[Y¿[x¿[ó¿[¢¿[¨¿\¿\B¿\d¿\Ü¿\ë¿\õ¿\·¿]8¿]ì¿]Œ¿]Ó¿^¿^¿^"¿^l¿^æ¿_¿_R¿_≠¿_‰¿`¿` ¿`+¿`5¿`è¿`∆¿`‰¿a¿a¿a¿af¿aû¿aÙ¿bS¿bù¿b§¿b®¿b©¿bµ¿bÿ¿c¿c¿c¿c?¿cì¿cÂ¿d7¿d_¿dò¿d‚¿e$¿eW¿eï¿e’¿f¿f9¿fk¿fõ¿f…¿f˘¿g
¿g6¿g^¿gä¿g∫¿gË¿h¿hD¿hl¿hñ¿hƒ¿h˙¿i2¿iv¿i¥¿i‡¿j¿jL¿jp¿jò¿jŒ¿k¿k,¿kV¿kr¿k¶¿k“¿k¸¿l(¿l`¿l¶¿l‹¿m¿m0¿mh¿mò¿m¿¿mÚ¿n&¿nR¿nÄ¿n¨¿n‰¿o ¿oZ¿oí¿o⁄¿p¿p>¿pl¿p†¿p»¿q¿qB¿q~¿q∫¿qÏ¿r.¿rX¿rä¿ræ¿r¸¿s(¿sX¿sÑ¿s∞¿s‰¿t¿tR¿tå¿t∫¿tÙ¿u&¿uf¿uñ¿uö¿uõ¿uß¿uº¿uË¿v:¿vä¿v⁄¿w ¿w¿w ¿w=¿w\¿w~¿wú¿w∂¿w“¿wÓ¿x¿x'¿x7¿xM¿xb¿xv¿xã¿xö¿x≠¿xæ¿x—¿xÊ¿x˙¿y¿y"¿y3¿yE¿yY¿yq¿yä¿y©¿y≈¿yÿ¿yÎ¿z¿z*¿z;¿zS¿zk¿z|¿zé¿z®¿zø¿z“¿z‰¿z˜¿{¿{0¿{H¿{[¿{l¿{Ö¿{ö¿{´¿{¡¿{ÿ¿{Î¿{ˇ¿|¿|+¿|F¿|`¿|y¿|ö¿|±¿|∆¿|⁄¿|Ò¿}¿}¿}9¿}T¿}o¿}Ö¿}£¿}µ¿}À¿}‚¿}˛¿~¿~&¿~9¿~L¿~c¿~}¿~î¿~Æ¿~¬¿~˙¿¿-¿C¿J¿m¿q¿r¿~¿√¿Ó¿Ä&¿Äv¿Äƒ¿Å¿Å6¿Å7¿ÅT¿Åh¿Åï¿Å¨¿Å ¿Ç¿Ç(¿Ç1¿Ç8¿ÇL¿Çm¿Çì¿Ç∑¿Ç›¿ÇÊ¿ÇÌ¿É¿É9¿É[¿É{¿Éµ¿É€¿É‰¿ÉÎ¿Éˇ¿Ñ0¿ÑF¿Ña¿Ññ¿Ñº¿Ñ≈¿ÑÃ¿Ñ‡¿Ö¿Ö5¿ÖS¿Öy¿ÖÇ¿Öâ¿Öù¿Öœ¿Ö¿Ü¿Ü5¿Ü>¿ÜE¿ÜY¿Üä¿Ü™¿Ü»¿ÜÓ¿Ü˜¿Ü˛¿á¿á6¿áJ¿á\¿áâ¿áØ¿á∏¿áø¿á”¿à¿à¿à4¿àf¿àå¿àï¿àú¿à∞¿àÈ¿â¿â¿âJ¿âp¿ây¿âÄ¿âî¿âµ¿âÕ¿â„¿ä¿ä9¿äB¿äI¿ä]¿äá¿ä†¿ä∑¿äË¿ã¿ã¿ã¿ã,¿ã@¿ãU¿ãl¿ãÅ¿ã∞¿ã÷¿ãﬂ¿ãÊ¿ã˙¿å¿å$¿å7¿åd¿åä¿åì¿åö¿åÆ¿å÷¿åÌ¿ç¿ç1¿çW¿ç`¿çg¿ç{¿çê¿ç©¿ç¿¿çÒ¿é¿é ¿é'¿é;¿éP¿éh¿é~¿éÆ¿é‘¿é›¿é‰¿é¯¿è¿è#¿è7¿èe¿èã¿èî¿èõ¿èØ¿èƒ¿èﬁ¿èˆ¿ê(¿êN¿êW¿ê^¿êr¿êá¿êú¿êØ¿ê‹¿ë¿ë¿ë¿ë&¿ë;¿ëQ¿ëe¿ëì¿ëπ¿ë¬¿ë…¿ë›¿ëÚ¿í¿í(¿í\¿íÇ¿íã¿íí¿í¶¿íª¿íÿ¿íÛ¿ì(¿ìN¿ìW¿ì^¿ìr¿ìá¿ìü¿ìµ¿ìÂ¿î¿î¿î¿î/¿îD¿îg¿îà¿î√¿îÈ¿îÚ¿î˘¿ï¿ï"¿ïB¿ï`¿ïò¿ïæ¿ï«¿ïŒ¿ï‚¿ï˜¿ñ¿ñ#¿ñR¿ñx¿ñÅ¿ñà¿ñú¿ñ±¿ñ»¿ñ›¿ó¿ó2¿ó;¿óB¿óV¿ók¿óå¿ó´¿ó‰¿ò
¿ò¿ò¿ò:¿òN¿òÆ¿òµ¿ò…¿òÛ¿ô¿ô)¿ôO¿ôX¿ô_¿ôs¿ôô¿ôµ¿ôœ¿ôı¿ô˛¿ö¿ö¿öu¿ö|¿öê¿ö∑¿öÕ¿ö·¿õ¿õ5¿õ>¿õE¿õ]¿õq¿õ°¿õº¿õ’¿õ˚¿ú¿ú¿ú¿úK¿úb¿úw¿ú¶¿úÃ¿ú’¿ú‹¿ú¿ù¿ù1¿ùE¿ùs¿ùô¿ù¢¿ù©¿ùΩ¿ùÒ¿û¿û¿ûL¿ûr¿û{¿ûÇ¿ûñ¿û»¿ûÂ¿ü ¿ü5¿ü[¿üd¿ük¿ü¿ü∏¿ü‹¿ü˛¿†:¿†`¿†i¿†p¿†Ñ¿†µ¿†—¿†Î¿°¿°E¿°N¿°U¿°i¿°ï¿°¨¿°¡¿°Á¿°¿°˜¿¢¿¢k¿¢r¿¢Ü¿¢∏¿¢’¿¢¿£%¿£K¿£T¿£[¿£o¿£ù¿£∂¿£Õ¿£˛¿§$¿§-¿§4¿§H¿§®¿§Ø¿§√¿§Ú¿•¿•$¿•V¿•|¿•Ö¿•å¿•†¿•–¿•Î¿¶¿¶7¿¶]¿¶f¿¶m¿¶Å¿¶≠¿¶ƒ¿¶Ÿ¿ß¿ß.¿ß7¿ß>¿ßR¿ß¿ßó¿ß≠¿ß›¿®¿®¿®¿®'¿®S¿®j¿®¿®Æ¿®‘¿®›¿®‰¿®¯¿©*¿©G¿©b¿©ó¿©Ω¿©∆¿©Õ¿©·¿™¿™4¿™Q¿™à¿™Æ¿™∑¿™æ¿™“¿´¿´#¿´?¿´e¿´n¿´u¿´â¿´ª¿´ÿ¿´Û¿¨(¿¨N¿¨W¿¨^¿¨r¿¨¨¿¨—¿¨Ù¿≠1¿≠W¿≠`¿≠g¿≠{¿≠´¿≠∆¿≠ﬂ¿Æ¿Æ8¿ÆA¿ÆH¿Æ\¿Æä¿Æ£¿Æ∫¿ÆÎ¿Ø¿Ø¿Ø!¿Ø5¿Øb¿Øz¿Øê¿Ø¿¿ØÊ¿ØÔ¿Øˆ¿∞
¿∞:¿∞U¿∞n¿∞°¿∞«¿∞–¿∞◊¿∞Î¿±¿±*¿±=¿±j¿±ê¿±ô¿±†¿±¥¿±Á¿≤¿≤!¿≤W¿≤}¿≤Ü¿≤ç¿≤°¿≤◊¿≤¯¿≥¿≥P¿≥v¿≥¿≥Ü¿≥ö¿≥Œ¿≥Ì¿¥
¿¥A¿¥g¿¥p¿¥w¿¥ã¿¥ø¿¥ﬁ¿¥˚¿µ2¿µX¿µa¿µh¿µ|¿µ´¿µ≈¿µ›¿∂¿∂5¿∂>¿∂E¿∂Y¿∂ê¿∂≤¿∂“¿∑¿∑2¿∑;¿∑B¿∑V¿∑Å¿∑ó¿∑´¿∑Ÿ¿∑ˇ¿∏¿∏¿∏#¿∏R¿∏l¿∏Ñ¿∏∂¿∏‹¿∏Â¿∏Ï¿π ¿π0¿πK¿πd¿πó¿πΩ¿π∆¿πÕ¿π·¿∫¿∫6¿∫T¿∫å¿∫≤¿∫ª¿∫¬¿∫÷¿ª¿ª¿ª.¿ªT¿ª]¿ªd¿ªx¿ª¶¿ªø¿ª÷¿º¿º-¿º6¿º=¿ºQ¿º}¿ºî¿º©¿ºÿ¿º˛¿Ω¿Ω¿Ω"¿ΩN¿Ωe¿Ωz¿Ω†¿Ω©¿Ω∞¿Ωƒ¿ΩÙ¿æ¿æ(¿æ[¿æÅ¿æä¿æë¿æ•¿æÿ¿æˆ¿ø¿øH¿øn¿øw¿ø~¿øí¿ø¬¿ø›¿øˆ¿¿)¿¿O¿¿X¿¿_¿¿s¿¿¶¿¿ƒ¿¿‡¿¡¿¡¿¡¿¡*¿¡W¿¡o¿¡Ö¿¡´¿¡¥¿¡ª¿¡Ò¿¬¿¬4¿¬N¿¬f¿¬ò¿¬æ¿¬«¿¬Œ¿¬‚¿¬˜¿√¿√7¿√p¿√ñ¿√ü¿√¶¿√∫¿√œ¿√È¿ƒ¿ƒ3¿ƒY¿ƒb¿ƒi¿ƒm¿ƒo¿ƒp¿ƒ∫¿ƒ›¿ƒ·¿≈*¿≈w¿≈É¿≈á¿≈÷¿∆$¿∆(¿∆t¿∆∏¿∆º¿«¿«X¿«ß¿«…¿«Õ¿«€¿«ﬂ¿»)¿»x¿»Ü¿»»¿»Ú¿…B¿…ì¿…‡¿ ¿ W¿ ®¿ –¿À¿À$¿À;¿Àï¿Àû¿Àü¿Àˆ¿ÃA¿ÃÅ¿Ãû¿ÃØ¿Ã€¿Õ	¿ÕB¿Õm¿Õ°¿Õ⁄¿Œ¿ŒV¿Œá¿Œê¿Œë¿Œ≥¿Œ¿ŒÒ¿Œ˝¿œ]¿œ^¿œj¿œÜ¿œÿ¿œŸ¿œÂ¿–¿–k¿–l¿–x¿–ü¿— ¿—¿—:¿—@¿—Ç¿—œ¿“¿“Y¿“_¿“∞¿“˜¿”7¿”C¿”p¿”å¿”•¿”…¿”¿‘¿‘3¿‘T¿‘o¿‘v¿‘§¿‘∫¿‘‚¿’¿’&¿’`¿’~¿’Æ¿’Ë¿÷¿÷F¿÷O¿÷V¿÷Z¿÷[¿÷g¿÷†¿÷Ô¿◊
¿◊O¿◊≥¿◊‹¿ÿ
¿ÿ ¿ÿ`¿ÿg¿ÿk¿ÿm¿ÿn¿ÿΩ¿Ÿ¿Ÿ]¿Ÿ™¿Ÿ‚¿ŸÊ¿⁄3¿⁄Ç¿⁄∑¿⁄ﬂ¿€/¿€M¿€ò¿€π¿€‰¿‹¿‹Q¿‹|¿‹¥¿‹ø¿‹»¿‹…¿›¿›?¿›A¿›B¿›M¿›p¿›º¿›Ω¿›⁄¿›ˇ¿ﬁ ¿ﬁN¿ﬁg¿ﬁs¿ﬁÃ¿ﬁÕ¿ﬁŸ¿ﬁ¸¿ﬂG¿ﬂo¿ﬂ°¿ﬂ“¿‡¿‡¿‡¿‡¿‡g¿‡ï¿‡ô¿‡Ë¿·	¿·"¿·^¿·_¿·Ø¿·˘¿‚	¿‚.¿‚/¿‚f¿‚l¿‚Ω¿‚Á¿„¿„¿„M¿„à¿„∂¿„œ¿„Ú¿‰¿‰!¿‰'¿‰P¿‰x¿‰~¿‰°¿‰•¿‰ß¿‰®¿‰Â¿‰È¿Â-¿Â{¿Â¨¿Â∞¿Â˛¿ÊN¿Êô¿Ê∑¿Êª¿Á¿ÁW¿Á¶¿Á∞¿Á¥¿Á˚¿Áˇ¿Ë¿Ë¿Ë7¿ËK¿Ëñ¿Ë®¿Ë¿¿Ëÿ¿ËÁ¿È¿È¿È¿È(¿È,¿È~¿È∞¿Í¿Í"¿ÍL¿Í{¿ÍÅ¿Í—¿Î	¿ÎM¿Îw¿Î°¿ÎÕ¿Î˘¿Î˙¿Ï¿ÏJ¿ÏK¿Ïn¿Ïö¿Ïõ¿ÏŸ¿Ïﬂ¿Ì,¿Ìz¿Ìì¿ÌÃ¿ÌÕ¿Ó¿Ó¿Óh¿Ó∏¿Ô¿ÔJ¿ÔP¿Ôå¿ÔË¿ÔÈ¿.¿4¿Ä¿—¿Ò¿ÒV¿Ò\¿Òò¿Ò¿ÒÒ¿Ú@¿Úâ¿Úè¿Ú÷¿Û!¿Û8¿Û>¿ÛN¿ÛT¿Û†¿Û‘¿Ù¿ÙF¿Ù|¿Ù¥¿Ùµ¿ı¿ı¿ı\¿ıë¿ıó¿ıß¿ı≠¿ı˜¿ˆ*¿ˆv¿ˆï¿ˆÔ¿˜H¿˜O¿˜S¿˜T¿˜ü¿˜µ¿˜¯¿¯¿¯C¿¯n¿¯u¿¯y¿¯z¿¯∞¿¯∂¿˘¿˘R¿˘ù¿˘·¿˙#¿˙F¿˙L¿˙\¿˙b¿˙∂¿˙Í¿˚S¿˚n¿˚o¿˚£¿˚©¿˚Ú¿¸C¿¸é¿¸“¿˝¿˝7¿˝=¿˝M¿˝S¿˝ß¿˝Ÿ¿˛B¿˛[¿˛\¿˛∞¿˛∂¿ˇ¿ˇB¿ˇH¿ˇè¿ˇª¿ˇ›¿ +¿ |¿ ¨¿ Õ¿ Œ¿¿¿¿9¿É¿û¿Æ¿¥¿Œ¿¿D¿K¿O¿P¿û¿À¿—¿!¿T¿ò¿∆¿Á¿¿:¿G¿e¿n¿å¿√¿–¿Ô¿¯¿ˇ¿¿¿¿3¿_¿s¿y¿‹¿‡¿·¿Ì¿&¿'¿3¿x¿£¿Ù¿A¿E¿F¿R¿m¿‹¿‡¿‚¿„¿¿¿Y¿ù¿≈¿¯¿˘¿	¿	A¿	a¿	¿	ü¿	∆¿	Ô¿
¿
8¿
]¿
â¿
©¿
À¿
Ù¿¿D¿l¿ì¿¡¿‡¿¿)¿S¿w¿û¿ƒ¿Ò¿¿+¿P¿w¿ò¿ª¿Ÿ¿˝¿*¿T¿{¿¶¿‘¿ı¿¿:¿a¿¿§¿¡¿›¿¿)¿N¿í¿¥¿∑¿∏¿Ï¿¿)¿I¿p¿ô¿º¿‚¿¿3¿S¿u¿û¿…¿Ó¿¿=¿k¿ä¿´¿”¿˝¿!¿H¿n¿õ¿∑¿’¿˙¿!¿B¿e¿É¿ß¿‘¿˛¿%¿P¿~¿ü¿ø¿‰¿¿)¿N¿k¿á¿¨¿”¿¯¿<¿^¿a¿s¿t¿§   
AdaptationThemeExtensionMaterialTapTargetSize	ThemeDataMaterialBasedCupertinoThemeDataCupertinoBasedMaterialThemeData_IdentityThemeDataCacheKey
_FifoCacheVisualDensity_colorSchemeLightM3_colorSchemeDarkM3(flutter.material.themedata.visualDensityÜúDensity, in the context of a UI, is the vertical and horizontal
"compactness" of the elements in the UI. It is unitless, since it means
different things to different UI elements. For buttons, it affects the
spacing around the centered label of the button. For lists, it affects the
distance between baselines of entries in the list.

Typically, density values are integral, but any value in range may be
used. The range includes values from [VisualDensity.minimumDensity] (which
is -4), to [VisualDensity.maximumDensity] (which is 4), inclusive, where
negative values indicate a denser, more compact, UI, and positive values
indicate a less dense, more expanded, UI. If a component doesn't support
the value given, it will clamp to the nearest supported value.

The default for visual densities is zero for both vertical and horizontal
densities, which corresponds to the default visual density of components
in the Material Design specification.

As a rule of thumb, a change of 1 or -1 in density corresponds to 4
logical pixels. However, this is not a strict relationship since
components interpret the density values appropriately for their needs.

A larger value translates to a spacing increase (less dense), and a
smaller value translates to a spacing decrease (more dense).

In Material Design 3, the [visualDensity] does not override the default
visual for the following components which are set to [VisualDensity.standard]
for all platforms:

 * [IconButton] - To override the default value of [IconButton.visualDensity],
   use [ThemeData.iconButtonTheme] instead.
 * [Checkbox] - To override the default value of [Checkbox.visualDensity],
   use [ThemeData.checkboxTheme] instead. Y
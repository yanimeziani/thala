Äáneverediting
notEditingalways_stateonSingleTapUponDragSelectionEndgroupId
controller	focusNode
decorationpaddingplaceholderplaceholderStyleprefix
prefixModesuffix
suffixModecrossAxisAlignmentclearButtonModeclearButtonSemanticLabelkeyboardTypetextInputActiontextCapitalizationstyle
strutStyle	textAligntoolbarOptionstextAlignVerticaltextDirectionreadOnly
showCursor	autofocusobscuringCharacterobscureTextautocorrectsmartDashesTypesmartQuotesTypeenableSuggestionsmaxLinesminLinesexpands	maxLengthmaxLengthEnforcement	onChangedonEditingCompleteonSubmittedonTapOutsideonTapUpOutsideinputFormattersenabledcursorWidthcursorHeightcursorRadiuscursorOpacityAnimatescursorColorselectionHeightStyleselectionWidthStylekeyboardAppearancescrollPaddingenableInteractiveSelectionselectAllOnFocusselectionControlsdragStartBehaviorscrollControllerscrollPhysicsselectionEnabledonTapautofillHintsclipBehaviorrestorationIdscribbleEnabledstylusHandwritingEnabledenableIMEPersonalizedLearningcontentInsertionConfigurationcontextMenuBuilder_defaultContextMenuBuildermagnifierConfigurationspellCheckConfigurationcupertinoMisspelledTextStylekMisspelledSelectionColor*defaultSpellCheckSuggestionsToolbarBuilderundoControllercreateStatedebugFillProperties_iosMagnifierConfigurationinferIOSSpellCheckConfiguration_clearGlobalKey_controller_effectiveController
_focusNode_effectiveFocusNode_effectiveMaxLengthEnforcement_showSelectionHandles _selectionGestureDetectorBuilderforcePressEnablededitableTextKey	initStatedidUpdateWidgetrestoreState_registerController_createLocalControllerdispose_editableText_requestKeyboard_handleFocusChanged_shouldShowSelectionHandles_handleSelectionChangedwantKeepAlive_shouldShowAttachment_hasDecoration_textAlignVertical_onClearButtonTapped_buildClearButton_addTextDependentAttachments
autofillIdautofilltextInputConfigurationbuildeditableTexteditableTextBaselineplaceholderBaselineslotschildForSlotcreateRenderObjectupdateRenderObject_editableTextBaseline_placeholderBaselinesetupParentData_placeholderChild_editableTextChildperformLayoutpaintcomputeDryLayout_computeSize_kDefaultPlaceholderStyle_kDefaultRoundedBorderSide_kDefaultRoundedBorder _kDefaultRoundedBorderDecoration_kDisabledBackground_kClearButtonColor _iOSHorizontalCursorOffsetPixelsOverlayVisibilityMode2_CupertinoTextFieldSelectionGestureDetectorBuilderCupertinoTextField_CupertinoTextFieldState_BaselineAlignedStackSlot_BaselineAlignedStack_BaselineAlignedStackParentData_RenderBaselineAlignedStackÅ®BoxHeightStyleBoxWidthStyledefaultTargetPlatformSmartDashesTypeSmartQuotesTypeTextCapitalizationTextInputActionTextInputType	TextStyle
fontWeight
FontWeightw400colorCupertinoColorsplaceholderText
BorderSideCupertinoDynamicColorwithBrightnessColor	darkColorwidthBordertopbottomleftrightBoxDecorationwhiteblackborderborderRadiusBorderRadiusallRadiuscircularintEditableText#TextSelectionGestureDetectorBuilderstatedelegateoverridevoidTapDragUpDetails_clearGlobalKeycurrentContext	RenderBoxfindRenderObjectOffsetglobalToLocalglobalPositionhitTestBoxHitTestResultpositiononSingleTapUpwidgetonTapcallTapDragEndDetails_requestKeyboardonDragSelectionEndTextEditingControllerdisposeScaffold
ScrollableScrollNotificationObserverTextSelectionOverlay	TextFieldStatefulWidgetStringdefaultSelectionHeightStyledefaultSelectionWidthStylealwaysCrossAxisAlignmentcenternevernone	TextAlignstart
DeprecatedDragStartBehaviorboolCliphardEdgedefaultStylusHandwritingEnabledlengthdisabledenabled	identicalnewlinetext	multilinetightObject	FocusNodeEdgeInsetsGeometryinheritWidgetdoneCupertinoTheme
StrutStyleToolbarOptionsTextAlignVerticalTextDirectionMaxLengthEnforcement LengthLimitingTextInputFormatterValueChangedVoidCallbacknextpreviousTapRegionCallbackListTextInputFormatterdoubleDefaultSelectionStylecursorColorCupertinoThemeDataprimaryColor
activeBlueactiveOrange
Brightnesslight
EdgeInsetsTextSelectionControlsScrollControllerScrollPhysicsGestureTapCallbackIterableContentInsertionConfiguration%CupertinoAdaptiveTextSelectionToolbarEditableTextContextMenuBuilderBuildContextEditableTextStateTargetPlatformiOSSystemContextMenuisSupportededitableTexteditableTextStateCupertinoTextMagnifierTextMagnifierConfigurationSpellCheckConfigurationmisspelledTextStylematerialMisspelledTextStyle
decorationTextDecoration	underlinedecorationColor	systemReddecorationStyleTextDecorationStyledottedvisibleForTesting#spellCheckSuggestionsToolbarBuilder*defaultSpellCheckSuggestionsToolbarBuilder%CupertinoSpellCheckSuggestionsToolbarUndoHistoryControllerStateDiagnosticPropertiesBuilderdebugFillPropertiesaddDiagnosticsPropertydefaultValueStringPropertyEnumPropertyIntPropertyDoublePropertycreateCupertinoColorPropertyFlagPropertyvalueifFalseallowedMimeTypes!kDefaultContentInsertionMimeTypesmagnifierBuilderMagnifierControllerValueNotifierMagnifierInfoandroid
controllermagnifierInfofuchsialinuxmacOSwindowscopyWithcupertinoMisspelledTextStylemisspelledSelectionColorkMisspelledSelectionColorRestorationMixinAutomaticKeepAliveClientMixin+TextSelectionGestureDetectorBuilderDelegateAutofillClient	GlobalKeyRestorableTextEditingController	focusNodemaxLengthEnforcementgetDefaultMaxLengthEnforcementselectionEnabled	initStatecanRequestFocusaddListenerdidUpdateWidgetunregisterFromRestorationremoveListenerRestorationBucketregisterForRestorationupdateKeepAliveTextEditingValue	fromValuerestorePendingrestorationIdcurrentStaterequestKeyboardsetStateSelectionChangedCauseshouldShowSelectionToolbarshouldShowSelectionHandles	selectionisCollapsedkeyboardstylusHandwriting
isNotEmptyTextSelection	longPressbringIntoViewextentdraghideToolbar
attachmenteditinghasText
notEditingplaceholderclearButtonModeprefixsuffixtextAlignVerticalclear	onChangedclearButtonSemanticLabelCupertinoLocalizationsofcontextclearButtonLabel	SemanticsbuttonlabelchildGestureDetectorkeyPaddingpadding	symmetric
horizontalIconCupertinoIconsclear_thick_circledsizeresolveValueListenableBuildervalueListenablebuilder
VisibilitymaintainAnimationmaintainSizemaintainStatevisibleSizedBoxinfinityTextmaxLinesoverflowstyle	textAlign
prefixMode
suffixModeRowcrossAxisAlignmentchildrenExpandedDirectionalitytextDirectioneditableTextBaselinetextBaselineTextBaseline
alphabeticplaceholderBaseline
autofillIdautofillTextInputConfigurationautofillHintstoListgrowableAutofillConfigurationuniqueIdentifiercurrentEditingValuehintTexttextInputConfigurationautofillConfigurationbuilddebugCheckHasDirectionalityselectionControls$cupertinoTextSelectionHandleControls+cupertinoDesktopTextSelectionHandleControlshasFocusrequestFocusunfocus
MediaQuerydevicePixelRatioOfinputFormatters	maxLengthmaybeResolvebackgroundColor	textTheme	textStylemergeplaceholderStylekeyboardAppearancebrightnessOf	BoxBorderruntimeTypeselectionColorwithOpacityinferIOSSpellCheckConfigurationspellCheckConfigurationRepaintBoundaryUnmanagedRestorationScopebucketundoControllerreadOnlytoolbarOptions
showCursorshowSelectionHandleskeyboardTypetextInputActiontextCapitalization
strutStyle	autofocusobscuringCharacterobscureTextautocorrectsmartDashesTypesmartQuotesTypeenableSuggestionsminLinesexpandsmagnifierConfiguration_iosMagnifierConfigurationgroupIdonSelectionChangedonEditingCompleteonSubmittedonTapOutsiderendererIgnoresPointercursorWidthcursorHeightcursorRadiuscursorOpacityAnimatescursorOffsetpaintCursorAboveTextautocorrectionTextRectColorbackgroundCursorColorinactiveGrayselectionHeightStyleselectionWidthStylescrollPaddingdragStartBehaviorscrollControllerscrollPhysicsenableInteractiveSelectionselectAllOnFocusautofillClientclipBehaviorscribbleEnabledstylusHandwritingEnabledenableIMEPersonalizedLearningcontentInsertionConfigurationcontextMenuBuilderisValid	collapsedoffsetonDidGainAccessibilityFocusonDidLoseAccessibilityFocusonFocusTextFieldTapRegionIgnorePointerignoring	ContainerbuildGestureDetectorbehaviorHitTestBehaviortranslucentAlign	alignment	AlignmentywidthFactorheightFactor#SlottedMultiChildRenderObjectWidgetvaluesContainerBoxParentData!SlottedContainerRenderObjectMixinmarkNeedsLayout
parentDatachildForSlotconstraintshasTightWidthlayoutChildChildLayoutHelpergetBaselinegetDistanceToBaselinemaxPaintingContext
paintChildSizeBoxConstraintsdryLayoutChildgetDryBaselineChildLayouterChildBaselineGetterminWidth	minHeightheightisFinite	constrain#TextSelectionGestureDetectorBuilderStatefulWidgetStateRestorationMixinAutomaticKeepAliveClientMixin+TextSelectionGestureDetectorBuilderDelegateAutofillClient#SlottedMultiChildRenderObjectWidgetContainerBoxParentData	RenderBox!SlottedContainerRenderObjectMixin…~·Ï*∑|§ü+Ïô
é£ÉaÉ∫SmartDashesTypeSmartQuotesTypeTextCapitalizationTextInputActionTextInputType É6package:flutter/services.dart   Ä‡   ÄÚÄımathÄı	dart:mathÅÅ4BoxHeightStyleBoxWidthStyle Ä¸   ÅÅuiÅdart:uiÅ`ÅzdefaultTargetPlatform Å8   package:flutter/foundation.dart  Å}   package:flutter/gestures.dart  Å•   package:flutter/rendering.dart  ÅŒ   package:flutter/services.dart  Åˆ   package:flutter/widgets.dart  Ç   $adaptive_text_selection_toolbar.dart  ÇM   colors.dart  Çc   desktop_text_selection.dart  Çâ   
icons.dart  Çû   localizations.dart  Çª   magnifier.dart  Ç‘   $spell_check_suggestions_toolbar.dart  É   text_selection.dart  É!   
theme.dart¿ yT ¿{áZ <ÄÜÄ§Ä•Ä’ÄﬁÄﬂÄ˚Å6Å7Å|Å§ÅÕÅıÇÇÇLÇbÇàÇùÇ∫Ç”ÉÉ É5É6É]ÉºÉΩÉÙÑÑ=Ñ@ÑAÑxÑ≤Ñ·ÑˇÖ!Ö&Ö4Ö7ÖeÖàÖÆÖ“Ö˜Ö˙Ö˚ÜAÜpÜíÜ∏ÜΩÜﬂáááádáÄá†á£á§á€à0àáà£à√à∆à«ââ`âáâäâ’âÒä"ä#äwä{ä…ãã(ãlãuãvãøã≈ååAåLåMåíåòåÊçç*ç+çmçwçyçzç≥çÂéEé[éyézé£é§é∞é·è,èvèøè›êê8êãê›ë'ë7ë?ëEëgëàëåëçëôë–ëÔííííí:í>íëí´íØì ììì`ìÆì˙î î$îXî\îpî∆î˙î˛ïVïfïjïªï˛ññOñüñﬁñ‚óóófó∞ó¥óóÙòòòhò≥ôôEôéôíô†ô§ôÈö8öVö•öπõgõ»õ˙ú!ú'úwú≠ú≥ù ù=ùCùëù‚û2û{û¨û≤üü5ü;üÉüâü’†&†^†ù†£†Ò°<°å°€°Ó°Ù¢.¢4¢D¢J¢ó¢ª£
£R£ô£∂£≈£Ê£˚§§(§`§é§§§—§Ù•"•)•:•n••≥•Ï¶$¶G¶h¶Ç¶π¶…¶ﬁßß ß8ßSßdßèß ß–ßÈß˛®®=®[®x®û®ƒ®Á®˛©©+©?©^©r©é©§©ª©‘©Ó™™#™:™n™ï™´™ ™Ë´´:´p´ñ´±´Õ´›´¯¨¨;¨c¨ä¨¢¨≥¨‰≠ ≠&≠G≠ô≠»ÆÆ$ÆEÆtÆçÆÔØØjØõØÃØ€∞(∞\∞f∞u∞≤∞˜±±W±ä≤≤≤^≤|≤∑≥)≥3≥I≥§¥¥¥5¥;¥ã¥¡¥«µµQµWµ•µˆ∂F∂è∂¿∂∆∑∑I∑O∑ó∑ù∑È∏:∏à∏é∏û∏§∏Òππdπ¨πÛ∫∫*∫K∫`∫t∫ç∫¢∫–∫Êªª.ªbªsªßª‡ºº;º\ºvº≠ºΩº“º¯ΩΩ,ΩGΩXΩÉΩæΩƒΩ›ΩÚææ1æOæeæãæ±æ‘æÎæ˛øø,øKø_ø{øëø®ø¡ø€øÙ¿ @¿ @'¿ @[¿ @Ç¿ @ò¿ @∑¿ @’¿ @Ú¿ A'¿ A]¿ AÉ¿ Aû¿ A∫¿ A ¿ AÂ¿ A˝¿ B(¿ BP¿ Bw¿ Bè¿ B†¿ B—¿ C¿ C¿ C4¿ C^¿ Cç¿ C«¿ CÈ¿ D
¿ D9¿ DR¿ D¥¿ DÕ¿ E/¿ E`¿ Eë¿ E†¿ EÌ¿ F!¿ F+¿ F:¿ Fw¿ Fº¿ F∆¿ G¿ GO¿ G”¿ G‚¿ H#¿ HA¿ H|¿ HÓ¿ H¯¿ I¿ Ii¿ I»¿ I…¿ I˝¿ J¿ J¿ J<¿ JB¿ Jä¿ Jµ¿ J∂¿ JÂ¿ K¿ K¿ KI¿ KO¿ K†¿ Kπ¿ K‹¿ K›¿ L(¿ Lg¿ Lm¿ L≥¿ L◊¿ Lÿ¿ M'¿ MV¿ M\¿ Mä¿ Mê¿ Mﬁ¿ N(¿ NE¿ NF¿ Nw¿ N}¿ NŒ¿ O¿ O:¿ O@¿ Oç¿ Oì¿ OÁ¿ P¿ P¿ PD¿ P\¿ P]¿ P®¿ P·¿ PÁ¿ Q¿ Q¿ QJ¿ Qt¿ Qu¿ Q´¿ Q√¿ Qƒ¿ R¿ RH¿ RN¿ RÄ¿ RÜ¿ R±¿ R€¿ R‹¿ SB¿ SH¿ Sw¿ S}¿ Sø¿ SÓ¿ SÔ¿ T5¿ T;¿ T¿ Tû¿ T§¿ Tﬂ¿ TÂ¿ U¿ UE¿ UF¿ Uå¿ Uí¿ U‚¿ V¿ V/¿ V0¿ Vi¿ Vç¿ Vé¿ V«¿ VÕ¿ W¿ WT¿ W~¿ W¿ Wæ¿ WÌ¿ WÓ¿ X ¿ X&¿ Xf¿ Xl¿ Xπ¿ X”¿ X‘¿ Y¿ Y+¿ Y,¿ Yb¿ Y¿ YÄ¿ Y®¿ YÆ¿ Y˛¿ ZF¿ Zw¿ ZÜ¿ ZØ¿ ZË¿ ZÏ¿ [¿ [¿ [V¿ [Ñ¿ [Ö¿ [ø¿ [Â¿ [Ê¿ \¿ \2¿ \3¿ \j¿ \Ñ¿ \Ö¿ \ª¿ \”¿ \‘¿ ]¿ ]6¿ ]7¿ ]o¿ ]â¿ ]ä¿ ]¬¿ ]›¿ ]ﬁ¿ ^%¿ ^N¿ ^O¿ ^ñ¿ ^ø¿ ^¿¿ _	¿ _)¿ _*¿ __¿ _∞¿ _≈¿ _‹¿ _›¿ `¿ `c¿ `x¿ `è¿ `ê¿ `ƒ¿ `⁄¿ `€¿ a*¿ a@¿ aF¿ aã¿ a≈¿ aË¿ aÓ¿ b¿ bm¿ bé¿ bî¿ bﬁ¿ c*¿ c0¿ c{¿ cí¿ cò¿ c„¿ c˚¿ c¸¿ d;¿ dA¿ dí¿ dª¿ d¡¿ e¿ e¿ eV¿ eä¿ eã¿ e¡¿ eÍ¿ eÎ¿ f)¿ fR¿ fS¿ fã¿ fë¿ f°¿ fß¿ fÌ¿ g=¿ g`¿ gã¿ gå¿ g≈¿ gÓ¿ gÔ¿ h*¿ hU¿ hV¿ hí¿ h≈¿ h∆¿ h¿ hˆ¿ iB¿ iè¿ iù¿ i£¿ iª¿ i—¿ i“¿ j
¿ j&¿ j'¿ j`¿ j~¿ j¿ j∏¿ j’¿ j÷¿ k¿ k<¿ k=¿ kn¿ kt¿ k¿¿ l¿ l_¿ lõ¿ l∑¿ l∏¿ m¿ m¿ mG¿ mx¿ my¿ m√¿ m…¿ n¿ n6¿ n7¿ n]¿ nc¿ nñ¿ nú¿ nÀ¿ nÛ¿ nÙ¿ o.¿ oP¿ oQ¿ oò¿ o¡¿ o¬¿ oˇ¿ p¿ p ¿ p^¿ pê¿ pë¿ pÕ¿ p˙¿ p˚¿ q8¿ qd¿ qe¿ qü¿ q≈¿ q∆¿ r¿ r>¿ r?¿ ro¿ rí¿ rì¿ rÕ¿ s¿ s:¿ s;¿ sq¿ sw¿ sö¿ sµ¿ s∂¿ sÓ¿ t¿ t¿ tJ¿ tY¿ tà¿ t¬¿ t∆¿ t‰¿ tÂ¿ u*¿ uQ¿ uR¿ uß¿ u”¿ u‘¿ v¿ vd¿ ve¿ v§¿ v™¿ vÚ¿ v¯¿ w¿ w¿ w[¿ wó¿ wò¿ wƒ¿ wﬁ¿ x¿ x¿ xn¿ x¡¿ x«¿ y,¿ y0¿ y1¿ yc¿ yi¿ y∫¿ z¿ zB¿ zz¿ zÄ¿ zØ¿ zµ¿ zÀ¿ {$¿ {*¿ {Ä¿ {í¿ {Œ¿ {œ¿ |¿ |¿ |i¿ |∂¿ |¿ |Ò¿ }A¿ }G¿ }W¿ }ß¿ }Ã¿ ~¿ ~Q¿ ~î¿ ~æ¿ ~Ó¿ ¿ $¿ %¿ v¿ |¿ ∆¿ €¿ Ä¿ Ä ¿ Äo¿ Ä|¿ ÄÇ¿ Äí¿ Ä‹¿ Ä˚¿ ÅG¿ Åò¿ ÅÁ¿ Ç)¿ Ç>¿ Çz¿ Çî¿ ÇΩ¿ Ç√¿ É(¿ É,¿ É-¿ Éc¿ Éí¿ Éì¿ Éü¿ ÉË¿ ÉÈ¿ Éı¿ Ñ:¿ Ñe¿ Ñy¿ ÑŸ¿ Ñ‡¿ Ö@¿ ÖT¿ ÖÜ¿ Ö†¿ Ö∏¿ Ö‘¿ Ö›¿ Ö‰¿ Ü6¿ Üá¿ Ü«¿ á!¿ á5¿ áï¿ áú¿ á∞¿ à¿ à¿ à{¿ àè¿ àË¿ àÔ¿ â¿ â-¿ âE¿ â[¿ âÖ¿ âé¿ âï¿ âÌ¿ äI¿ ä]¿ äΩ¿ äƒ¿ ã$¿ ãÉ¿ ãó¿ ãº¿ ã◊¿ ã¿ åH¿ åQ¿ åX¿ ål¿ åë¿ å¨¿ å≈¿ ç¿ ç&¿ ç-¿ çA¿ çû¿ ç•¿ çÌ¿ é8¿ éê¿ é›¿ éÒ¿ è¿ è;¿ èY¿ èu¿ è~¿ èÖ¿ èÿ¿ ê.¿ êë¿ ê•¿ ë
¿ ë¿ ës¿ ëá¿ ëõ¿ ë∑¿ ëÿ¿ ëÙ¿ í¿ í$¿ í+¿ í?¿ íq¿ íé¿ í©¿ í≈¿ íŒ¿ í’¿ íÈ¿ ì¿ ì2¿ ìL¿ ìh¿ ìq¿ ìx¿ ìå¿ ìÍ¿ ìÒ¿ îU¿ îi¿ îó¿ î¥¿ îœ¿ îÎ¿ îÙ¿ î˚¿ ï`¿ ït¿ ï–¿ ï◊¿ ïÎ¿ ñD¿ ñK¿ ñ_¿ ñÄ¿ ñ§¿ ñ∆¿ ó
¿ ó¿ ó¿ ó.¿ óO¿ óx¿ óü¿ óª¿ óƒ¿ óÀ¿ óﬂ¿ ò¿ ò6¿ òW¿ òs¿ ò|¿ òÉ¿ òó¿ ò¿¿ ò‚¿ ô/¿ ôk¿ ôä¿ ôª¿ ôƒ¿ ôÀ¿ ôœ¿ ô–¿ ö3¿ öI¿ öS¿ ös¿ öù¿ ö”¿ öﬂ¿ õ
¿ õ3¿ õX¿ õª¿ õ‰¿ ú¿ ú2¿ ú[¿ úv¿ úÇ¿ úç¿ úí¿ úì¿ ú„¿ ù3¿ ùu¿ ù°¿ ùß¿ û¿ û<¿ ûB¿ ûC¿ ûf¿ ûÅ¿ û·¿ ü¿ üc¿ üé¿ üÕ¿ †¿ †¿ †!¿ †#¿ †$¿ †e¿ †≤¿ †ˇ¿ °0¿ °1¿ °a¿ °æ¿ °ø¿ °ÿ¿ ¢1¿ ¢2¿ ¢o¿ ¢î¿ ¢›¿ ¢ﬁ¿ £¿ £¿ £a¿ £b¿ £ú¿ £®¿ £Œ¿ £œ¿ £€¿ §2¿ §3¿ §?¿ §w¿ §∏¿ §π¿ §≈¿ §⁄¿ §Ò¿ •L¿ •_¿ •f¿ •ã¿ •´¿ •±¿ •Î¿ ¶%¿ ¶)¿ ¶*¿ ¶6¿ ¶m¿ ¶ì¿ ¶ÿ¿ ß¿ ß_¿ ßé¿ ß¨¿ ß∆¿ ßÃ¿ ßÕ¿ ® ¿ ®P¿ ®ö¿ ®†¿ ®⁄¿ ®ﬁ¿ ®ﬂ¿ ®Î¿ ©4¿ ©S¿ ©p¿ ©v¿ ©z¿ ©{¿ ©ö¿ ©ª¿ ©Û¿ ™(¿ ™,¿ ™-¿ ™h¿ ™â¿ ™©¿ ™’¿ ´¿ ´,¿ ´I¿ ´O¿ ´S¿ ´T¿ ´`¿ ´ï¿ ´ñ¿ ´¢¿ ´µ¿ ´Ú¿ ¨¿ ¨)¿ ¨>¿ ¨B¿ ¨C¿ ¨ã¿ ¨å¿ ¨®¿ ¨Õ¿ ¨—¿ ¨“¿ ¨Ò¿ ≠¿ ≠O¿ ≠c¿ ≠k¿ ≠o¿ ≠p¿ ≠≥¿ Æ¿ ÆA¿ Æâ¿ Æ—¿ ÆÂ¿ ÆÎ¿ ÆÏ¿ Ø2¿ Øh¿ Ø|¿ ØÇ¿ ØÉ¿ Ø∂¿ Ø ¿ Ø–¿ Ø—¿ ∞¿ ∞ ¿ ∞&¿ ∞'¿ ∞W¿ ∞j¿ ∞p¿ ∞q¿ ∞É¿ ∞á¿ ∞à¿ ∞‡¿ ±.¿ ±k¿ ±¿ ±π¿ ±√¿ ±…¿ ± ¿ ±Ô¿ ≤¿ ≤/¿ ≤P¿ ≤s¿ ≤ñ¿ ≤π¿ ≤Ò¿ ≥*¿ ≥4¿ ≥:¿ ≥;¿ ≥`¿ ≥¿ ≥¢¿ ≥≈¿ ≥‘¿ ≥ı¿ ¥¿ ¥9¿ ¥l¿ ¥ì¿ ¥ù¿ ¥£¿ ¥ß¿ ¥®¿ ¥¥¿ ¥˝¿ ¥˛¿ µ$¿ µS¿ µn¿ µu¿ µñ¿ µ¬¿ µÓ¿ ∂¿ ∂R¿ ∂Y¿ ∂]¿ ∂^¿ ∂ù¿ ∂π¿ ∂‚¿ ∑#¿ ∑D¿ ∑c¿ ∑g¿ ∑h¿ ∑Æ¿ ∑˝¿ ∏E¿ ∏r¿ ∏û¿ ∏∆¿ ∏Ã¿ π¿ π¿ π¿ π?¿ π~¿ π†¿ π≥¿ ∫¿ ∫N¿ ∫l¿ ∫•¿ ∫´¿ ∫Ø¿ ∫∞¿ ∫œ¿ ∫Ì¿ ªM¿ ªN¿ ªd¿ ªx¿ ªë¿ ªØ¿ ªÕ¿ º
¿ º"¿ ºb¿ ºy¿ º©¿ º¡¿ Ω¿ Ω¿ Ω(¿ Ω1¿ Ω8¿ Ω<¿ Ω=¿ Ωd¿ Ω}¿ Ωñ¿ Ω∂¿ Ωº¿ æ¿ æ¿ æ3¿ æN¿ æT¿ æU¿ æñ¿ æÀ¿ æ¯¿ ø¿ øa¿ øî¿ ø–¿ ¿¿ ¿¿ ¿c¿ ¿}¿ ¿¶¿ ¿ ¿ ¿Ô¿ ¡¿ ¡3¿ ¡]¿ ¡¿ ¡¨¿ ¡Õ¿ ¡Ù¿ ¬G¿ ¬ô¿ ¬Í¿ √8¿ √o¿ √Æ¿ √È¿ ƒ¿ ƒK¿ ƒb¿ ƒw¿ ƒä¿ ƒõ¿ ƒú¿ ƒ¡¿ ≈¿ ≈0¿ ≈D¿ ≈E¿ ≈ò¿ ≈”¿ ≈¸¿ ∆¿ ∆#¿ ∆_¿ ∆ç¿ ∆©¿ ∆¥¿ «¿ «(¿ «R¿ «í¿ «¬¿ «Õ¿ «·¿ »¿ »8¿ »ä¿ »±¿ »Â¿ …>¿ …X¿ …n¿ …ì¿ …Ê¿  ¿  @¿  n¿  …¿ À*¿ À=¿ ÀN¿ À]¿ Àë¿ Àû¿ À©¿ À≤¿ Àπ¿ ÀΩ¿ Àæ¿ ÀË¿ ÀÙ¿ Ã)¿ Ã*¿ Ã6¿ Ãî¿ Ãï¿ Ã°¿ Ã◊¿ Õ.¿ Õ|¿ Õù¿ Õ«¿ ÕÒ¿ Œ.¿ ŒX¿ Œd¿ Œé¿ Œè¿ Œ…¿ Œ˝¿ œ¿ œ¿ œ0¿ œ1¿ œ=¿ œd¿ œ§¿ œ÷¿ –¿ –¿ –g¿ –ö¿ –Õ¿ –Ú¿ —¿ —4¿ —W¿ —ü¿ —¿¿ —·¿ “¿ “S¿ “Ç¿ “⁄¿ ”0¿ ”`¿ ”l¿ ”w¿ ”¶¿ ”œ¿ ”⁄¿ ”‡¿ ”·¿ ‘
¿ ‘2¿ ‘É¿ ‘å¿ ‘ì¿ ‘Ÿ¿ ‘˚¿ ’¿ ’I¿ ’e¿ ’•¿ ’∞¿ ’∑¿ ’¸¿ ’˝¿ ÷:¿ ÷â¿ ÷Ï¿ ÷Û¿ ÷Ù¿ ◊H¿ ◊I¿ ◊ú¿ ◊ˆ¿ ÿ1¿ ÿc¿ ÿt¿ ÿ}¿ ÿÑ¿ ÿÖ¿ ÿ◊¿ ÿÿ¿ Ÿ¿ ŸM¿ Ÿk¿ Ÿó¿ ŸÊ¿ Ÿ˘¿ ⁄¿ ⁄&¿ ⁄'¿ ⁄Ö¿ ⁄Ü¿ ⁄Õ¿ ⁄Ì¿ ⁄¸¿ €¿ €¿ €=¿ €m¿ €â¿ €ø¿ €Ê¿ €˘¿ ‹Q¿ ‹Y¿ ‹Z¿ ‹é¿ ‹°¿ ‹µ¿ ‹Á¿ ›¿ ›S¿ ›â¿ ›ò¿ ›û¿ ›ü¿ ›Ì¿ ﬁ9¿ ﬁW¿ ﬁl¿ ﬁà¿ ﬁÀ¿ ﬁÎ¿ ﬂ¿ ﬂ¿ ﬂ ¿ ﬂA¿ ﬂm¿ ﬂ©¿ ﬂº¿ ﬂ…¿ ‡¿ ‡¿ ‡[¿ ‡´¿ ‡÷¿ ·¿ ·n¿ ·o¿ ·ö¿ ·π¿ ·◊¿ ‚¿ ‚¿ ‚:¿ ‚\¿ ‚Ä¿ ‚≥¿ ‚Ê¿ „¿ „D¿ „}¿ „©¿ „ÿ¿ ‰¿ ‰H¿ ‰f¿ ‰ë¿ ‰∫¿ ‰Î¿ Â¿ ÂO¿ Â|¿ Â©¿ Âﬁ¿ Ê¿ ÊL¿ Ês¿ Êö¿ Êø¿ Ê„¿ ÁC¿ Áî¿ ÁÊ¿ Ë=¿ Ëb¿ Ëã¿ Ëƒ¿ Ë˝¿ È*¿ ÈY¿ ÈÇ¿ È¨¿ ÈŸ¿ Í¿ Í7¿ Í]¿ Íû¿ Í∆¿ ÍÓ¿ Î'¿ Îi¿ Îï¿ Î¨¿ Îª¿ Î˙¿ Ï7¿ Ïh¿ Ïú¿ Ï’¿ Ì¿ Ì=¿ Ìà¿ Ìø¿ Ì·¿ Ó¿ Ó7¿ Ól¿ Ó≥¿ Ô¿ ÔU¿ Ôê¿ ÔŒ¿ Ô€¿ ÔÊ¿ ÔÔ¿ Ôˆ¿ Ô˜¿ ¿ %¿ N¿ _¿ p¿ £¿ Ò¿ Ò¿ Ò5¿ ÒD¿ Òà¿ ÒÃ¿ Ò„¿ ÒÙ¿ Ú
¿ Ú?¿ Úô¿ ÚÔ¿ Û?¿ Ûï¿ ÛÁ¿ Û¯¿ Û˘¿ ÙS¿ Ùá¿ Ù¥¿ ı¿ ıY¿ ı¨¿ ıˇ¿ ˆP¿ ˆÖ¿ ˆò¿ ˆÊ¿ ˜3¿ ˜Ñ¿ ˜©¿ ˜Õ¿ ˜›¿ ˜Î¿ ˜˝¿ ¯¿ ¯<¿ ¯Z¿ ¯v¿ ¯£¿ ¯ˆ¿ ˘@¿ ˘u¿ ˘ë¿ ˘”¿ ˘ı¿ ˙¿ ˙z¿ ˙ã¿ ˙ö¿ ˙ß¿ ˙≤¿ ˙ª¿ ˙¬¿ ˙∆¿ ˙»¿ ˙…¿ ˚¿ ˚¿ ˚#¿ ˚{¿ ˚õ¿ ˚√¿ ˚Í¿ ¸
¿ ¸ ¿ ¸&¿ ¸'¿ ¸R¿ ¸|¿ ¸ô¿ ¸∂¿ ¸∑¿ ¸√¿ ˝¿ ˝¿ ˝%¿ ˝^¿ ˝y¿ ˝µ¿ ˝Û¿ ˝˙¿ ˝˛¿ ˝ˇ¿ ˛¿ ˛T¿ ˛|¿ ˛Æ¿ ˛ﬁ¿ ˛Â¿ ˛È¿ ˛Í¿ ˛ˆ¿ ˇR¿ ˇc¿ ˇó¿ ˇ ¿ ˇŒ¿ ˇ–¿ ˇ—¿ $¿ %¿ Y¿ ¨¿ Ã¿ ¸¿+¿`¿ì¿î¿÷¿¸¿-¿W¿e¿k¿é¿•¿©¿™¿Í¿¿?¿h¿v¿|¿û¿µ¿π¿∫¿∆¿¿0¿l¿r¿v¿w¿ú¿‹¿‡¿·¿¿Y¿t¿á¿ã¿å¿ò¿±¿ÿ¿¿E¿F¿â¿Œ¿¿V¿W¿p¿ê¿¬¿Ù¿˚¿¸¿M¿i¿q¿¬¿›¿‰¿Â¿	*¿	k¿	™¿	π¿	∫¿	˙¿
<¿
ç¿
ë¿
í¿
û¿
’¿¿B¿C¿b¿¶¿Ï¿:¿@¿A¿Ñ¿…¿¿¿¿(¿h¿Å¿°¿÷¿¿¿¿¿-¿V¿~¿¨¿≥¿‹¿¿¿?¿â¿√¿◊¿Í¿¿¿j¿k¿Ü¿¨¿‚¿¿@¿v¿”¿/¿Ä¿±¿ÿ¿"¿_¿ì¿ô¿ö¿“¿¿2¿M¿u¿y¿{   //// @docImport 'package:flutter/material.dart';ÄﬂÄˆÄı Ä˚ÅÅÅÅ4Å7  Å`ÅzÅ|   Å§   ÅÕ   Åı   Ç   ÇL   Çb   Çà   Çù   Ç∫   Ç”   É   É    É6ÉaÉ∫ çzÑ°çzçÄ  çÁÄëçÁ çÁé  é'é>é=  	éRéKéTéaéfévéoégéqé|%éõéõ    é¶ÇÂé∑é∑  é≈é◊é÷  é¶éßëèÄäë†ë†  ë≥ë∆ë≈  ëèëê í¿ éíõŒâ™/// An iOS-style text field.
///
/// A text field lets the user enter text, either with a hardware keyboard or with
/// an onscreen keyboard.
///
/// This widget corresponds to both a `UITextField` and an editable `UITextView`
/// on iOS.
///
/// The text field calls the [onChanged] callback whenever the user changes the
/// text in the field. If the user indicates that they are done typing in the
/// field (e.g., by pressing a button on the soft keyboard), the text field
/// calls the [onSubmitted] callback.
///
/// {@macro flutter.widgets.EditableText.onChanged}
///
/// {@tool dartpad}
/// This example shows how to set the initial value of the [CupertinoTextField] using
/// a [controller] that already contains some text.
///
/// ** See code in examples/api/lib/cupertino/text_field/cupertino_text_field.0.dart **
/// {@end-tool}
///
/// The [controller] can also control the selection and composing region (and to
/// observe changes to the text, selection, and composing region).
///
/// The text field has an overridable [decoration] that, by default, draws a
/// rounded rectangle border around the text field. If you set the [decoration]
/// property to null, the decoration will be removed entirely.
///
/// {@macro flutter.material.textfield.wantKeepAlive}
///
/// Remember to call [TextEditingController.dispose] when it is no longer
/// needed. This will ensure we discard any resources used by the object.
///
/// {@macro flutter.widgets.editableText.showCaretOnScreen}
///
/// ## Scrolling Considerations
///
/// If this [CupertinoTextField] is not a descendant of [Scaffold] and is being
/// used within a [Scrollable] or nested [Scrollable]s, consider placing a
/// [ScrollNotificationObserver] above the root [Scrollable] that contains this
/// [CupertinoTextField] to ensure proper scroll coordination for
/// [CupertinoTextField] and its components like [TextSelectionOverlay].
///
/// See also:
///
///  * <https://developer.apple.com/documentation/uikit/uitextfield>
///  * [TextField], an alternative text field widget that follows the Material
///    Design UI conventions.
///  * [EditableText], which is the raw text editing control at the heart of a
///    [TextField].
///  * Learn how to use a [TextEditingController] in one of our [cookbook recipes](https://docs.flutter.dev/cookbook/forms/text-field-changes#2-use-a-texteditingcontroller).
///  * <https://developer.apple.com/design/human-interface-guidelines/ios/controls/text-fields/> õ¸ò£° £°£≥ áP/// Creates an iOS-style text field.
///
/// To provide a prefilled text entry, pass in a [TextEditingController] with
/// an initial value to the [controller] parameter.
///
/// To provide a hint placeholder text that appears when the text entry is
/// empty, pass a [String] to the [placeholder] parameter.
///
/// The [maxLines] property can be set to null to remove the restriction on
/// the number of lines. In this mode, the intrinsic height of the widget will
/// grow as the number of lines of text grows. By default, it is `1`, meaning
/// this is a single-line text field and will scroll horizontally when
/// it overflows. [maxLines] must not be zero.
///
/// The text cursor is not shown if [showCursor] is false or if [showCursor]
/// is null (the default) and [readOnly] is true.
///
/// If specified, the [maxLength] property must be greater than zero.
///
/// The [selectionHeightStyle] and [selectionWidthStyle] properties allow
/// changing the shape of the selection highlighting. These properties default
/// to [EditableText.defaultSelectionHeightStyle] and
/// [EditableText.defaultSelectionWidthStyle], respectively.
///
/// The [autocorrect], [autofocus], [clearButtonMode], [dragStartBehavior],
/// [expands], [obscureText], [prefixMode], [readOnly], [scrollPadding],
/// [suffixMode], [textAlign], [selectionHeightStyle], [selectionWidthStyle],
/// [enableSuggestions], and [enableIMEPersonalizedLearning] properties must
/// not be null.
///
/// {@macro flutter.widgets.editableText.accessibility}
///
/// See also:
///
///  * [minLines], which is the minimum number of lines to occupy when the
///    content spans fewer lines.
///  * [expands], to allow the widget to size itself to its parent's height.
///  * [maxLength], which discusses the precise meaning of "number of
///    characters" and how it may differ from the intuitive meaning.H£∫	£¡£¿  £…£œ£Œ  £Í££Ô  £ˇ§§  §§§  §,2§2§1  §d(§j§i  §í§ò§ó  §®§Æ§≠  •-•3•2  •>.•D•C  •r•x•w  •É.•â•à  •∑3•Ω•º  •2•ˆ•ı  ¶(¶.¶-  ¶K¶[¶Z  ¶l¶r¶q  ¶Ü1¶å¶ã  ¶Ω
¶√¶¬  ¶Õ¶”¶“  ¶‚ ¶Ë¶Á  ßßß  ß$ß*ß)  ß<ßBßA  ßWÄêß⁄ßŸ  ßÌßÛßÚ  ®®®  ®®$®#  ®A®G®F  ®_®e®d  ®| ®é®ç  ®¢ ®¥®≥  ®»®Œ®Õ  ®Î®Ò®  ©©©  ©©©  ©/©5©4  ©C©I©H  ©b©h©g  ©v©|©{  ©í©ò©ó  ©®©Æ©≠  ©ø©≈©ƒ  ©ÿ©ﬁ©›  ©Ú©¯©˜  ™™™  ™'™-™,  ™>.™D™C  ™r!™x™w  ™ô™ü™û  ™Ø™µ™¥  ™Œ™‘™”  ™Ï™Ú™Ò  ´	/´´  ´>0´D´C  ´t ´{´z  ´ö´†´ü  ´µ´ª´∫  ´—
´◊´÷  ´·´Á´Ê  ´¸¨¨  ¨%¨¨  ¨?"¨E¨D  ¨g!¨m¨l  ¨é¨î¨ì  ¨¶Äü≠0≠/  ≠KL≠Q≠P  ≠ù)≠£≠¢  ≠Ã4≠“≠—  ÆÆÆ  Æ(Æ.Æ-  Å£ÿ§>§s§y§É§Ñ§á§ã§à§¿§∆§œ•&§·§◊§„§Ì§Ó§ˇ§˙••••P•e•f•ï•™•´•—•„•‰¶¶¶¶†¶≤¶≥¶Û¶¸¶˝ßLßWßXßbßŒßjßï®®8®T®r®·®˚©$™™™R™X™^™_™g™k™h™è´´$´.´/´2´7´3´W´h´i¨)¨7¨8¨/¨6¨0¨{¨¨Ä¨¶¨ß¨±≠$¨π¨Í≠A≠k≠w≠x≠¬≠ÊÆLÆRÆqÆmÆSÆeÆfÆpÆãÆ{Æ®ÆòÆ´ÆÏÆ∏Æ”Æ¨Æ∫Æ…Æ Æ’Æ‰ÆÂØÆˆØ#ØØ&ØgØ3ØNØ'Ø5ØDØEØPØ_Ø`ØqØwØòØâØÅØxØÑØïØåØóØ¢Ø®Ø…Ø∫Ø≤Ø©ØµØ∆ØΩØ»Ø”ØŸ∞&∞c∞Ø˜Ø‰ØıØÓØÂØÒØ˙∞∞Ø˚∞∞∞%∞∞∞∞1∞m∞s∞∞∞˛∞á∞~∞∞ä∞Ø∞ú∞î∞ã∞ó∞®∞ü∞´∞ª±±±,±T±±±±(±±+±.±^±d±á±w±o±e±r±Ñ±z±Ü≤≤≤µ≥0≤y≤[≤&≤'≤0≤Y≤1≤B≤Q≤R≤t≤k≤w≤â≤ä≤ì≤¥≤î≤¢≤Ø≤∞≤¿≥G≥:≥a≥T≥d≥°≥s≥à≥n≥e≥q≥u≥Ç≥É≥ä≥ó≥ò≥∆≥´≥„≥»≥Ê¥ ≥Ò≥Á≥Ë≥Ù≥ı¥ï¡π˚∫∫∫∫Ö≤/// Creates a borderless iOS-style text field.
///
/// To provide a prefilled text entry, pass in a [TextEditingController] with
/// an initial value to the [controller] parameter.
///
/// To provide a hint placeholder text that appears when the text entry is
/// empty, pass a [String] to the [placeholder] parameter.
///
/// The [maxLines] property can be set to null to remove the restriction on
/// the number of lines. In this mode, the intrinsic height of the widget will
/// grow as the number of lines of text grows. By default, it is `1`, meaning
/// this is a single-line text field and will scroll horizontally when
/// it overflows. [maxLines] must not be zero.
///
/// The text cursor is not shown if [showCursor] is false or if [showCursor]
/// is null (the default) and [readOnly] is true.
///
/// If specified, the [maxLength] property must be greater than zero.
///
/// The [selectionHeightStyle] and [selectionWidthStyle] properties allow
/// changing the shape of the selection highlighting. These properties default
/// to [ui.BoxHeightStyle.tight] and [ui.BoxWidthStyle.tight] respectively.
///
/// See also:
///
///  * [minLines], which is the minimum number of lines to occupy when the
///    content spans fewer lines.
///  * [expands], to allow the widget to size itself to its parent's height.
///  * [maxLength], which discusses the precise meaning of "number of
///    characters" and how it may differ from the intuitive meaning.H∫	∫&∫%  ∫.∫4∫3  ∫O∫U∫T  ∫d∫j∫i  ∫x∫~∫}  ∫ë∫ó∫ñ  ∫¶(∫¨∫´  ∫‘∫⁄∫Ÿ  ∫Í1∫∫Ô  ª!ª'ª&  ª2.ª8ª7  ªfªlªk  ªw.ª}ª|  ª´3ª±ª∞  ª‰2ªÍªÈ  ºº"º!  º?ºOºN  º`ºfºe  ºz1ºÄº  º±
º∑º∂  º¡º«º∆  º÷ º‹º€  º¸ΩΩ  ΩΩΩ  Ω0Ω6Ω5  ΩKÄêΩŒΩÕ  Ω·ΩÁΩÊ  ΩˆΩ¸Ω˚  æææ  æ5æ;æ:  æSæYæX  æi æ{æz  æè æ°æ†  æµæªæ∫  æÿæﬁæ›  æÔæıæÙ  øøø  øø"ø!  ø0ø6ø5  øOøUøT  øcøiøh  øøÖøÑ  øïøõøö  ø¨ø≤ø±  ø≈øÀø   øﬂøÂø‰  ø¯ø˛ø˝  ¿ @¿ @¿ @  ¿ @+.¿ @1¿ @0  ¿ @_!¿ @e¿ @d  ¿ @Ü¿ @å¿ @ã  ¿ @ú¿ @¢¿ @°  ¿ @ª¿ @¡¿ @¿  ¿ @Ÿ¿ @ﬂ¿ @ﬁ  ¿ @ˆ/¿ @¸¿ @˚  ¿ A+0¿ A1¿ A0  ¿ Aa ¿ Ah¿ Ag  ¿ Aá¿ Aç¿ Aå  ¿ A¢¿ A®¿ Aß  ¿ Aæ
¿ Aƒ¿ A√  ¿ AŒ¿ A‘¿ A”  ¿ AÈ¿ AÔ¿ AÓ  ¿ B%¿ B¿ B  ¿ B,"¿ B2¿ B1  ¿ BT!¿ BZ¿ BY  ¿ B{¿ BÅ¿ BÄ  ¿ BìÄü¿ C¿ C  ¿ C8$¿ C>¿ C=  ¿ Cb)¿ Ch¿ Cg  ¿ Cë4¿ Có¿ Cñ  ¿ CÀ¿ C—¿ C–  ¿ CÌ¿ CÛ¿ CÚ  Ä˚∫=∫µ∫ª∫≈∫∆∫…∫Õ∫ ªªDªYªZªâªûªüª≈ª◊ªÿª˚ºººîº¶ºßºÁººÒΩ@ΩKΩLΩVΩ¬Ω^Ωâææ,æHæŒæËøøÓ¿ @¿ @?¿ @E¿ @K¿ @L¿ @T¿ @X¿ @U¿ @|¿ A¿ A¿ A¿ A¿ A¿ A$¿ A ¿ AD¿ AU¿ AV¿ B¿ B$¿ B%¿ B¿ B#¿ B¿ Bh¿ Bl¿ Bm¿ Bì¿ Bî¿ Bû¿ C¿ B¶¿ B◊¿ C.¿ CX¿ Cá¿ C´¿ D¿ D¿ D6¿ D2¿ D¿ D*¿ D+¿ D5¿ DP¿ D@¿ Dm¿ D]¿ Dp¿ D±¿ D}¿ Dò¿ Dq¿ D¿ Dé¿ Dè¿ Dö¿ D©¿ D™¿ DÀ¿ Dª¿ DË¿ Dÿ¿ DÎ¿ E,¿ D¯¿ E¿ DÏ¿ D˙¿ E	¿ E
¿ E¿ E$¿ E%¿ E6¿ E<¿ E]¿ EN¿ EF¿ E=¿ EI¿ EZ¿ EQ¿ E\¿ Eg¿ Em¿ Eé¿ E¿ Ew¿ En¿ Ez¿ Eã¿ EÇ¿ Eç¿ Eò¿ Eû¿ EÎ¿ F(¿ E“¿ Eº¿ E©¿ E∫¿ E≥¿ E™¿ E∂¿ Eø¿ E–¿ E…¿ E¿¿ EÃ¿ E’¿ EÍ¿ Eﬂ¿ E÷¿ E‚¿ Eˆ¿ F2¿ F8¿ Fu¿ F√¿ FL¿ FC¿ FD¿ FO¿ Ft¿ Fa¿ FY¿ FP¿ F\¿ Fm¿ Fd¿ Fp¿ FÄ¿ FÕ¿ F”¿ FÒ¿ G¿ F·¿ F‘¿ F’¿ FÌ¿ F‰¿ F¿ FÛ¿ G#¿ G)¿ GL¿ G<¿ G4¿ G*¿ G7¿ GI¿ G?¿ GK¿ G⁄¿ G‡¿ Hz¿ Hı¿ H>¿ H ¿ GÎ¿ GÏ¿ Gı¿ H¿ Gˆ¿ H¿ H¿ H¿ H9¿ H0¿ H<¿ HN¿ HO¿ HX¿ Hy¿ HY¿ Hg¿ Ht¿ Hu¿ HÖ¿ I¿ Hˇ¿ I&¿ I¿ I)¿ If¿ I8¿ IM¿ I3¿ I*¿ I6¿ I:¿ IG¿ IH¿ IO¿ I\¿ I]¿ Iã¿ Ip¿ I®¿ Iç¿ I´¿ I≈¿ I∂¿ I¨¿ I≠¿ Iπ¿ I∫J¿ IÀH¿ J¿ J1/// {@macro flutter.widgets.editableText.groupId} ¿ JÄõ¿ J©¿ J©m/// Controls the text being edited.
///
/// If null, this widget will create its own [TextEditingController]. ¿ J∏I¿ J¯¿ J¯,/// {@macro flutter.widgets.Focus.focusNode} ¿ KÄ‘¿ K–¿ K–Ä¨/// Controls the [BoxDecoration] of the box behind the text input.
///
/// Defaults to having a rounded rectangle grey border and can be null to have
/// no box decoration. ¿ KﬂÄˆ¿ LŒ¿ LŒÄÕ/// Padding around the text entry area between the [prefix] and [suffix]
/// or the clear button when [clearButtonMode] is not never.
///
/// Defaults to a padding of 6 pixels on all sides and can be null. ¿ L⁄Åi¿ N8¿ N8ÅA/// A lighter colored placeholder hint that appears on the first line of the
/// text field when the text entry is empty.
///
/// Defaults to having no placeholder text.
///
/// The text style of the placeholder text matches that of the text field's
/// main text entry except a lighter font weight and a grey font color. ¿ NHÅ¬¿ O˙¿ O˙Åé/// The style to use for the placeholder text.
///
/// The [placeholderStyle] is merged with the [style] [TextStyle] when applied
/// to the [placeholder] text. To avoid merging with [style], specify
/// [TextStyle.inherit] as false.
///
/// Defaults to the [style] property with w300 font weight and grey color.
///
/// If specifically set to null, placeholder's style will be the same as [style]. ¿ PK¿ PT¿ PT4/// An optional [Widget] to display before the text. ¿ P_Å¿ Qh¿ QhÄ‡/// Controls the visibility of the [prefix] widget based on the state of
/// text entry when the [prefix] argument is not null.
///
/// Defaults to [OverlayVisibilityMode.always].
///
/// Has no effect when [prefix] is null. ¿ QwJ¿ Qª¿ Qª3/// An optional [Widget] to display after the text. ¿ Q∆Å¿ Rœ¿ RœÄ‡/// Controls the visibility of the [suffix] widget based on the state of
/// text entry when the [suffix] argument is not null.
///
/// Defaults to [OverlayVisibilityMode.always].
///
/// Has no effect when [suffix] is null. ¿ RﬁÅ¿ S⁄¿ S⁄Äÿ/// Controls the vertical alignment of the [prefix] and the [suffix] widget in relation to content.
///
/// Defaults to [CrossAxisAlignment.center].
///
/// Has no effect when both the [prefix] and [suffix] are null. ¿ SÒÅR¿ U4¿ U4Å/// Show an iOS-style clear button to clear the current text entry.
///
/// Can be made to appear depending on various text states of the
/// [TextEditingController].
///
/// Will only appear if no [suffix] widget is appearing.
///
/// Defaults to [OverlayVisibilityMode.never]. ¿ UHÄÂ¿ V¿ VÄ∂/// The semantic label for the clear button used by screen readers.
///
/// This will be used by screen reading software to identify the clear button
/// widget. Defaults to "Clear". ¿ V2Y¿ V¿ V6/// {@macro flutter.widgets.editableText.keyboardType} ¿ VêÄÏ¿ Wm¿ WmÄΩ/// The type of action button to use for the keyboard.
///
/// Defaults to [TextInputAction.newline] if [keyboardType] is
/// [TextInputType.multiline] and [TextInputAction.done] otherwise. ¿ WÅj¿ WŸ¿ WŸ</// {@macro flutter.widgets.editableText.textCapitalization} ¿ WÄ·¿ XÃ¿ XÃÄ¿/// The style to use for the text being edited.
///
/// Also serves as a base for the [placeholder] text's style.
///
/// Defaults to the standard iOS font style from [CupertinoTheme] if null. ¿ X÷S¿ Y¿ Y4/// {@macro flutter.widgets.editableText.strutStyle} ¿ Y.O¿ Yt¿ Yt3/// {@macro flutter.widgets.editableText.textAlign} ¿ YÇÅê¿ [¿ [ÄÏ/// Configuration of toolbar options.
///
/// If not set, select all and paste will default to be enabled. Copy and cut
/// will be disabled if [obscureText] is true. If [readOnly] is true,
/// paste and cut will be disabled regardless.¿ Zy¿ Zz¿ ZÑ¿ ZÍ¿ Zä¿ Z≥¿ [k¿ [q¿ [q>/// {@macro flutter.material.InputDecorator.textAlignVertical} ¿ [á\¿ [÷¿ [÷7/// {@macro flutter.widgets.editableText.textDirection} ¿ [ËH¿ \(¿ \(2/// {@macro flutter.widgets.editableText.readOnly} ¿ \5M¿ \x¿ \x4/// {@macro flutter.widgets.editableText.showCursor} ¿ \áJ¿ \»¿ \»3/// {@macro flutter.widgets.editableText.autofocus} ¿ \÷^¿ ]"¿ ]"</// {@macro flutter.widgets.editableText.obscuringCharacter} ¿ ]9N¿ ]|¿ ]|5/// {@macro flutter.widgets.editableText.obscureText} ¿ ]åO¿ ]–¿ ]–5/// {@macro flutter.widgets.editableText.autocorrect} ¿ ]‡l¿ ^=¿ ^=D/// {@macro flutter.services.TextInputConfiguration.smartDashesType} ¿ ^Ql¿ ^Æ¿ ^ÆD/// {@macro flutter.services.TextInputConfiguration.smartQuotesType} ¿ ^¬e¿ _¿ _F/// {@macro flutter.services.TextInputConfiguration.enableSuggestions} ¿ _,ÄÆ¿ _“¿ _“Äî/// {@macro flutter.widgets.editableText.maxLines}
///  * [expands], which determines whether the field should fill the height of
///    its parent. ¿ _ﬂÄÆ¿ `Ö¿ `ÖÄî/// {@macro flutter.widgets.editableText.minLines}
///  * [expands], which determines whether the field should fill the height of
///    its parent. ¿ `íF¿ `—¿ `—1/// {@macro flutter.widgets.editableText.expands} ¿ `›É¿ c¿ cÇ„/// The maximum number of characters (Unicode grapheme clusters) to allow in
/// the text field.
///
/// After [maxLength] characters have been input, additional input
/// is ignored, unless [maxLengthEnforcement] is set to
/// [MaxLengthEnforcement.none].
///
/// The TextField enforces the length with a
/// [LengthLimitingTextInputFormatter], which is evaluated after the supplied
/// [inputFormatters], if any.
///
/// This value must be either null or greater than zero. If set to null
/// (the default), there is no limit to the number of characters allowed.
///
/// Whitespace characters (e.g. newline, space, tab) are included in the
/// character count.
///
/// {@macro flutter.services.lengthLimitingTextInputFormatter.maxLength} ¿ c˛Åä¿ et¿ etÅI/// Determines how the [maxLength] limit should be enforced.
///
/// If [MaxLengthEnforcement.none] is set, additional input beyond [maxLength]
/// will not be enforced by the limit.
///
/// {@macro flutter.services.textFormatter.effectiveMaxLengthEnforcement}
///
/// {@macro flutter.services.textFormatter.maxLengthEnforcement} ¿ eç[¿ eﬂ¿ eﬂ3/// {@macro flutter.widgets.editableText.onChanged} ¿ eÌc¿ f?¿ f?;/// {@macro flutter.widgets.editableText.onEditingComplete} ¿ fUÅ4¿ g~¿ g~Ä˛/// {@macro flutter.widgets.editableText.onSubmitted}
///
/// See also:
///
///  * [TextInputAction.next] and [TextInputAction.previous], which
///    automatically shift the focus to the next/previous focusable item when
///    the user is done editing. ¿ gé^¿ g‡¿ g‡6/// {@macro flutter.widgets.editableText.onTapOutside} ¿ gÒb¿ hE¿ hE8/// {@macro flutter.widgets.editableText.onTapUpOutside} ¿ hXk¿ h¥¿ h¥9/// {@macro flutter.widgets.editableText.inputFormatters} ¿ h»Å¿ i»¿ i»ÄÊ/// Disables the text field when false.
///
/// Text fields in disabled states have a light grey background and don't
/// respond to touch events including the [prefix], [suffix] and the clear
/// button.
///
/// Defaults to true. ¿ i‘P¿ j¿ j5/// {@macro flutter.widgets.editableText.cursorWidth} ¿ j)S¿ jp¿ jp6/// {@macro flutter.widgets.editableText.cursorHeight} ¿ jÅR¿ j«¿ j«6/// {@macro flutter.widgets.editableText.cursorRadius} ¿ jÿb¿ k%¿ k%?/// {@macro flutter.widgets.editableText.cursorOpacityAnimates} ¿ k?Åv¿ l™¿ l™ÅQ/// The color to use when painting the cursor.
///
/// Defaults to the [DefaultSelectionStyle.cursorColor]. If that color is
/// null, it uses the [CupertinoThemeData.primaryColor] of the ambient theme,
/// which itself defaults to [CupertinoColors.activeBlue] in the light theme
/// and [CupertinoColors.activeOrange] in the dark theme. ¿ l∫Äº¿ mb¿ mbÄà/// Controls how tall the selection highlight boxes are computed to be.
///
/// See [ui.BoxHeightStyle] for details on available styles. ¿ m{Äπ¿ n!¿ n!Äá/// Controls how wide the selection highlight boxes are computed to be.
///
/// See [ui.BoxWidthStyle] for details on available styles. ¿ n9Ä∏¿ nﬂ¿ nﬂÄâ/// The appearance of the keyboard.
///
/// This setting is only honored on iOS devices.
///
/// If null, defaults to [Brightness.light]. ¿ nˆX¿ oA¿ oA7/// {@macro flutter.widgets.editableText.scrollPadding} ¿ oSl¿ o•¿ o•D/// {@macro flutter.widgets.editableText.enableInteractiveSelection} ¿ oƒY¿ p¿ p:/// {@macro flutter.widgets.editableText.selectAllOnFocus} ¿ p"l¿ p}¿ p};/// {@macro flutter.widgets.editableText.selectionControls} ¿ pìe¿ pÁ¿ pÁ9/// {@macro flutter.widgets.scrollable.dragStartBehavior} ¿ p˝e¿ qR¿ qR:/// {@macro flutter.widgets.editableText.scrollController} ¿ qg\¿ q∂¿ q∂7/// {@macro flutter.widgets.editableText.scrollPhysics} ¿ rAO¿ rã¿ rã-/// {@macro flutter.material.textfield.onTap} ¿ rïÄ£¿ s+¿ s+y/// {@macro flutter.widgets.editableText.autofillHints}
/// {@macro flutter.services.AutofillConfiguration.autofillHints} ¿ s=v¿ sß¿ sßX/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.hardEdge]. ¿ s∏S¿ s˛¿ s˛5/// {@macro flutter.material.textfield.restorationId} ¿ tÄ“¿ t”¿ t”9/// {@macro flutter.widgets.editableText.scribbleEnabled}¿ tL¿ tM¿ tW¿ tƒ¿ t]¿ tå¿ tÁh¿ u7¿ u7B/// {@macro flutter.widgets.editableText.stylusHandwritingEnabled} ¿ uT}¿ u¥¿ u¥R/// {@macro flutter.services.TextInputConfiguration.enableIMEPersonalizedLearning} ¿ u÷Äå¿ vE¿ vEG/// {@macro flutter.widgets.editableText.contentInsertionConfiguration} ¿ vgÅ.¿ wÉ¿ wÉÄÁ/// {@macro flutter.widgets.EditableText.contextMenuBuilder}
///
/// If not provided, will build a default menu based on the platform.
///
/// See also:
///
///  * [CupertinoAdaptiveTextSelectionToolbar], which is built by default. ¿ y3Çô¿ {∂¿ {∂ÇD/// Configuration for the text field magnifier.
///
/// By default (when this property is set to null), a [CupertinoTextMagnifier]
/// is used on mobile platforms, and nothing on desktop platforms. To suppress
/// the magnifier on all platforms, consider passing
/// [TextMagnifierConfiguration.disabled] explicitly.
///
/// {@macro flutter.widgets.magnifier.intro}
///
/// {@tool dartpad}
/// This sample demonstrates how to customize the magnifier that this text field uses.
///
/// ** See code in examples/api/lib/widgets/text_magnifier/text_magnifier.0.dart **
/// {@end-tool} ¿ {—Å¿ |◊¿ |◊Äﬁ/// {@macro flutter.widgets.EditableText.spellCheckConfiguration}
///
/// If [SpellCheckConfiguration.misspelledTextStyle] is not specified in this
/// configuration, then [cupertinoMisspelledTextStyle] is used by default. ¿ |ÛÇ/¿ ~j¿ ~jÅQ/// The [TextStyle] used to indicate misspelled words in the Cupertino style.
///
/// See also:
///  * [SpellCheckConfiguration.misspelledTextStyle], the style configured to
///    mark misspelled words with.
///  * [TextField.materialMisspelledTextStyle], the style configured
///    to mark misspelled words with in the Material style.¿ ~â¿ ~í¿ !¿ ~¢¿ ~ò¿ ~§¿ ~≤¿ ~≥¿ ~—¿ ~¬¿ ~”¿ ~‚¿ ~„¿ ¿ ~Ú¿ ¿ ¿ ¿ 'Äˆ¿ ¿ Äö/// The color of the selection highlight when the spell check menu is visible.
///
/// Eyeballed from a screenshot taken on an iPhone 11 running iOS 16.2.¿ »¿ …¿ Ä¿ Ä¿ Ä¿ Ä¿ É/a¿ ÉÇ¿ ÉÇ3/// {@macro flutter.widgets.undoHistory.controller} ¿ ô“Çæ¿ ô˙¿ ô˙ ¿ ö¿ ö1¿ úè¿ öG¿ ö7¿ öQ¿ úä¿ q»u¿ r¿ r:/// {@macro flutter.widgets.editableText.selectionEnabled}    ¿ wöÅï¿ w®¿ w®  ¿ w»¿ w÷¿ w’  ¿ w‚#¿ wı¿ wÙ   ¿ Ä"É	¿ ÇN¿ ÇNÅÙ/// Default builder for the spell check suggestions toolbar in the Cupertino
/// style.
///
/// See also:
///  * [spellCheckConfiguration], where this is typically specified for
///    [CupertinoTextField].
///  * [SpellCheckConfiguration.spellCheckSuggestionsToolbarBuilder], the
///    parameter for which this is the default value for [CupertinoTextField].
///  * [TextField.defaultSpellCheckSuggestionsToolbarBuilder], which is like
///    this but specifies the default for [CupertinoTextField]. ¿ Ç~¿ Çå¿ Çã  ¿ Çò#¿ Ç´¿ Ç™  ¿ Ç+¿ Ç,¿ ÉïR¿ Éª¿ Éª   ¿ Éï¿ Éñ¿ ÉÎï„¿ É¸¿ É¸  ¿ Ñ&¿ Ñ-¿ Ñ,  ¿ ÉÎ¿ ÉÏ¿ úïÉã¿ ùT¿ ùTÄõ/// Returns a new [SpellCheckConfiguration] where the given configuration has
/// had any missing values replaced with their defaults for the iOS platform. ¿ ùy&¿ ùì¿ ùí    ¿ †$¿ Z£¿ †$¿ †*   ¿ °-¿ °¿ ° ¿ °#¿ °,¿ °-¿ °3,¿ °T¿ °T  ¿ °¡¿ °Ã¿ °Ã  ¿ ¢‡"¿ ¢Â¿ ¢Â ¿ ¢˝¿ £X¿ £?¿ £?  ¿ £—_¿ § ¿ §  ¿ £—¿ £“¿ §¿ §¿ §-¿ §¿ §.¿ §/¿ °cZ¿ °}¿ °}    ¿ °⁄V¿ °Ë¿ °Ë    ¿ ¢4Ä®¿ ¢M¿ ¢M    ¿ £û/¿ £≥¿ £≥   ¿ £û¿ £ü¿ §5A¿ §J¿ §J   ¿ §5¿ §6¿ ´V>¿ ´n¿ ´n   ¿ ´V¿ ´W¿ ¨EE¿ ¨[¿ ¨[    ¿ ¥™R¿ ¥ø¿ ¥ø   ¿ ¥™¿ ¥´¿ ∂üÄ«¿ ∂®¿ ∂®    ¿ ∏GÄ÷¿ ∏]¿ ∏]    ¿ ÀÍ>¿ Ã¿ Ã   ¿ ÀÍ¿ ÀÎ¿ ÃóÇp¿ Ãæ¿ Ãæ   ¿ Ãó¿ Ãò ¿ §ªÅm¿ §Ã¿ §Ã   ¿ §ª¿ §º¿ ¶,Ç±¿ ¶=¿ ¶=  ¿ ¶M¿ ¶a¿ ¶`  ¿ ¶,¿ ¶-¿ ®·Äò¿ ®Ú¿ ®Ú  ¿ ®ˇ¿ ©¿ ©  ¿ ©¿ ©#¿ ©"  ¿ ®·¿ ®‚¿ ©}ÄÆ¿ ©Ç¿ ©Ç    ¿ ™/Å#¿ ™4¿ ™4  ¿ ™L¿ ™_¿ ™^   ¿ ´òÄ©¿ ´©¿ ´©   ¿ ´ò¿ ´ô¿ ¨éB¿ ¨ì¿ ¨ì    ¿ ¨‘Äö¿ ¨Ÿ¿ ¨Ÿ    ¿ ≠rÉ¿ ≠w¿ ≠w  ¿ ≠ì¿ ≠´¿ ≠™   ¿ ∞äÑ¿ ∞è¿ ∞è  ¿ ∞ß¿ ∞∂¿ ∞µ  ¿ ∞¿¿ ∞ÿ¿ ∞◊   ¿ µ Å\¿ µ¿ µ  ¿ µ()¿ µH¿ µG  ¿ µW¿ µf¿ µe   ¿ π!Åç¿ π&¿ π&    ¿ ∫≤Çâ¿ ∫π¿ ∫π    ¿ Ω?é}¿ ΩF¿ ΩF  ¿ Ωh¿ Ωp¿ Ωo  ¿ ΩÅ¿ Ωå¿ Ωã  ¿ Ωö¿ Ω•¿ Ω§   ¿ Ã,g¿ Ã=¿ Ã=  ¿ ÃF ¿ ÃX¿ ÃW  ¿ Ã,¿ Ã-¿ œ3´í¿ œF¿ œF  ¿ œL¿ œZ¿ œY  ¿ œ3¿ œ4 ¿ ˚Ñ»¿ ˚¿ ˚  ¿ ˚}Ä®¿ ˚É ¿ ˚É¿ ˚ò  ¿ ˚ü"¿ ˚Æ¿ ˚≠  ¿ ˚«!¿ ˚÷¿ ˚’  ¿ ˚Ó¿ ˚˝¿ ˚¸  ¿ ¸¿ ¸¿ ¸   ¿ ¸)'¿ ¸<¿ ¸<  ¿ ¸T&¿ ¸g¿ ¸g  ¿ ¸~¿ ¸å¿ ¸å  ¿ ¸õ¿ ¸®¿ ¸®  ¿ ¸π^¿ ¸Ì¿ ¸Ì   ¿ ¸π¿ ¸∫ ¿ ˝Ä‚¿ ˝/¿ ˝/  ¿ ˝<¿ ˝W¿ ˝V  ¿ ˝¿ ˝¿ ˛ÄÁ¿ ˛)¿ ˛)  ¿ ˛<¿ ˛J¿ ˛I  ¿ ˛¿ ˛¿ ˛ÏÄ·¿ ˛˝¿ ˛˝  ¿ ˇ¿ ˇ¿ ˇ  ¿ ˇ&(¿ ˇC¿ ˇB  ¿ ˛Ï¿ ˛Ì ¿ ˇ—R¿ ˇ—¿ ˇ◊        ¿ %îU¿ %¿ +  ¿ ÆÄ‰¿ Æ ¿ Æ¿ …  ¿ –*¿ Á¿ Ê  ¿ )¿¿  ¿H¿2¿J¿|¿g¿~¿ÿ"¿Â¿Â  ¿Ï!¿˘¿˘  ¿ñ?¿ß¿ß    ¿¨=¿Ω¿Ω    ¿yf¿à¿à    ¿„Äß¿Ò¿Ò    ¿˛Ä™¿¿  ¿¿%¿$   ¿Äß¿¿  ¿)¿7¿6   ¿ºÄπ¿Õ¿Õ  ¿›¿Ë¿Á  ¿º¿Ω¿éÖ¿ü¿ü   ¿é¿è¿
îÇÜ¿
•¿
•  ¿
´¿
º¿
ª  ¿
ƒ¿
Ã¿
À  ¿
î¿
ï¿Ä˜¿/¿/  ¿@$¿Z¿Y  ¿¿¿Ü_¿¿  ¿1#¿J¿I  ¿Z"¿r¿q  ¿Ç(¿†¿ü     ä#ÉUä#ãÄÁ/// Visibility of text field overlays based on the state of the current text entry.
///
/// Used to toggle the visibility behavior of the optional decorating widgets
/// surrounding the [EditableText] such as the clear text button.  ã*IãnãnA/// Overlay will never appear regardless of the text entry state. ãxÄ“åCåCÄ¬/// Overlay will only appear when the current text entry is not empty.
///
/// This includes prefilled text that the user did not type in manually. But
/// does not include text in placeholders. åOÄŸççÄ∆/// Overlay will only appear when the current text entry is empty.
///
/// This also includes not having prefilled text that the user did not type
/// in manually. Texts in placeholders are ignored. ç-Hçoço?/// Always show the overlay regardless of the text entry state.     ¿ ˙…<¿ ˙…¿ ˙Œ   ¿ ˙Í¿ ˙Í¿ ˙Í  ¿ ˙˜¿ ˙˜¿ ˙˜              ÉΩÄÅÉÕÉÕ ÉÈÉÚÑ=Ñ ÉˆÑÑÑÑÑÑÑ+Ñ,ÑxÄΩÑâÑâ Ñ¶Ñ∞Ö4ÑπÑ¥ÑªÑ–Ñ—ÑﬂÖ#ÑÍÑÂÑÏÑÒÑ¸ÑÚÖÖÖÖÖÖÖ-Ö(Ö/Ö7Ä¡ÖDÖD Ö]ÖcÖ˜ÖjÖgÖlÖêÖäÖíÖ¥Ö∞Ö∂ÖŸÖ‘Ö€Ö˚ÅÜÜ $Ü2Ü?áÜHÜCÜJÜ_Ü`ÜnÜ∫ÜyÜtÜ{ÜäÜãÜüÜñÜ°Ü∞Ü±Ü≈ÜøÜ«ÜÌÜ·ÜÔÜ˚Ü¸Üˇáá ááááááÄÜá'á' á>áSáTábá†ákáfámárá}ásáãáÇáçáíáùáìà0ÄîàLàL àaàvàwàÖà√àéàâàêàïà†àñàÆà•à∞àµà¿à∂âÒ/â˚â˚ ää   ÄÆ  package:flutter/material.dart áZ <ÄÜÄ§Ä•Ä’ÄﬁÄﬂÄ˚Å6Å7Å|Å§ÅÕÅıÇÇÇLÇbÇàÇùÇ∫Ç”ÉÉ É5É6É]ÉºÉΩÉÙÑÑ=Ñ@ÑAÑxÑ≤Ñ·ÑˇÖ!Ö&Ö4Ö7ÖeÖàÖÆÖ“Ö˜Ö˙Ö˚ÜAÜpÜíÜ∏ÜΩÜﬂáááádáÄá†á£á§á€à0àáà£à√à∆à«ââ`âáâäâ’âÒä"ä#äwä{ä…ãã(ãlãuãvãøã≈ååAåLåMåíåòåÊçç*ç+çmçwçyçzç≥çÂéEé[éyézé£é§é∞é·è,èvèøè›êê8êãê›ë'ë7ë?ëEëgëàëåëçëôë–ëÔííííí:í>íëí´íØì ììì`ìÆì˙î î$îXî\îpî∆î˙î˛ïVïfïjïªï˛ññOñüñﬁñ‚óóófó∞ó¥óóÙòòòhò≥ôôEôéôíô†ô§ôÈö8öVö•öπõgõ»õ˙ú!ú'úwú≠ú≥ù ù=ùCùëù‚û2û{û¨û≤üü5ü;üÉüâü’†&†^†ù†£†Ò°<°å°€°Ó°Ù¢.¢4¢D¢J¢ó¢ª£
£R£ô£∂£≈£Ê£˚§§(§`§é§§§—§Ù•"•)•:•n••≥•Ï¶$¶G¶h¶Ç¶π¶…¶ﬁßß ß8ßSßdßèß ß–ßÈß˛®®=®[®x®û®ƒ®Á®˛©©+©?©^©r©é©§©ª©‘©Ó™™#™:™n™ï™´™ ™Ë´´:´p´ñ´±´Õ´›´¯¨¨;¨c¨ä¨¢¨≥¨‰≠ ≠&≠G≠ô≠»ÆÆ$ÆEÆtÆçÆÔØØjØõØÃØ€∞(∞\∞f∞u∞≤∞˜±±W±ä≤≤≤^≤|≤∑≥)≥3≥I≥§¥¥¥5¥;¥ã¥¡¥«µµQµWµ•µˆ∂F∂è∂¿∂∆∑∑I∑O∑ó∑ù∑È∏:∏à∏é∏û∏§∏Òππdπ¨πÛ∫∫*∫K∫`∫t∫ç∫¢∫–∫Êªª.ªbªsªßª‡ºº;º\ºvº≠ºΩº“º¯ΩΩ,ΩGΩXΩÉΩæΩƒΩ›ΩÚææ1æOæeæãæ±æ‘æÎæ˛øø,øKø_ø{øëø®ø¡ø€øÙ¿ @¿ @'¿ @[¿ @Ç¿ @ò¿ @∑¿ @’¿ @Ú¿ A'¿ A]¿ AÉ¿ Aû¿ A∫¿ A ¿ AÂ¿ A˝¿ B(¿ BP¿ Bw¿ Bè¿ B†¿ B—¿ C¿ C¿ C4¿ C^¿ Cç¿ C«¿ CÈ¿ D
¿ D9¿ DR¿ D¥¿ DÕ¿ E/¿ E`¿ Eë¿ E†¿ EÌ¿ F!¿ F+¿ F:¿ Fw¿ Fº¿ F∆¿ G¿ GO¿ G”¿ G‚¿ H#¿ HA¿ H|¿ HÓ¿ H¯¿ I¿ Ii¿ I»¿ I…¿ I˝¿ J¿ J¿ J<¿ JB¿ Jä¿ Jµ¿ J∂¿ JÂ¿ K¿ K¿ KI¿ KO¿ K†¿ Kπ¿ K‹¿ K›¿ L(¿ Lg¿ Lm¿ L≥¿ L◊¿ Lÿ¿ M'¿ MV¿ M\¿ Mä¿ Mê¿ Mﬁ¿ N(¿ NE¿ NF¿ Nw¿ N}¿ NŒ¿ O¿ O:¿ O@¿ Oç¿ Oì¿ OÁ¿ P¿ P¿ PD¿ P\¿ P]¿ P®¿ P·¿ PÁ¿ Q¿ Q¿ QJ¿ Qt¿ Qu¿ Q´¿ Q√¿ Qƒ¿ R¿ RH¿ RN¿ RÄ¿ RÜ¿ R±¿ R€¿ R‹¿ SB¿ SH¿ Sw¿ S}¿ Sø¿ SÓ¿ SÔ¿ T5¿ T;¿ T¿ Tû¿ T§¿ Tﬂ¿ TÂ¿ U¿ UE¿ UF¿ Uå¿ Uí¿ U‚¿ V¿ V/¿ V0¿ Vi¿ Vç¿ Vé¿ V«¿ VÕ¿ W¿ WT¿ W~¿ W¿ Wæ¿ WÌ¿ WÓ¿ X ¿ X&¿ Xf¿ Xl¿ Xπ¿ X”¿ X‘¿ Y¿ Y+¿ Y,¿ Yb¿ Y¿ YÄ¿ Y®¿ YÆ¿ Y˛¿ ZF¿ Zw¿ ZÜ¿ ZØ¿ ZË¿ ZÏ¿ [¿ [¿ [V¿ [Ñ¿ [Ö¿ [ø¿ [Â¿ [Ê¿ \¿ \2¿ \3¿ \j¿ \Ñ¿ \Ö¿ \ª¿ \”¿ \‘¿ ]¿ ]6¿ ]7¿ ]o¿ ]â¿ ]ä¿ ]¬¿ ]›¿ ]ﬁ¿ ^%¿ ^N¿ ^O¿ ^ñ¿ ^ø¿ ^¿¿ _	¿ _)¿ _*¿ __¿ _∞¿ _≈¿ _‹¿ _›¿ `¿ `c¿ `x¿ `è¿ `ê¿ `ƒ¿ `⁄¿ `€¿ a*¿ a@¿ aF¿ aã¿ a≈¿ aË¿ aÓ¿ b¿ bm¿ bé¿ bî¿ bﬁ¿ c*¿ c0¿ c{¿ cí¿ cò¿ c„¿ c˚¿ c¸¿ d;¿ dA¿ dí¿ dª¿ d¡¿ e¿ e¿ eV¿ eä¿ eã¿ e¡¿ eÍ¿ eÎ¿ f)¿ fR¿ fS¿ fã¿ fë¿ f°¿ fß¿ fÌ¿ g=¿ g`¿ gã¿ gå¿ g≈¿ gÓ¿ gÔ¿ h*¿ hU¿ hV¿ hí¿ h≈¿ h∆¿ h¿ hˆ¿ iB¿ iè¿ iù¿ i£¿ iª¿ i—¿ i“¿ j
¿ j&¿ j'¿ j`¿ j~¿ j¿ j∏¿ j’¿ j÷¿ k¿ k<¿ k=¿ kn¿ kt¿ k¿¿ l¿ l_¿ lõ¿ l∑¿ l∏¿ m¿ m¿ mG¿ mx¿ my¿ m√¿ m…¿ n¿ n6¿ n7¿ n]¿ nc¿ nñ¿ nú¿ nÀ¿ nÛ¿ nÙ¿ o.¿ oP¿ oQ¿ oò¿ o¡¿ o¬¿ oˇ¿ p¿ p ¿ p^¿ pê¿ pë¿ pÕ¿ p˙¿ p˚¿ q8¿ qd¿ qe¿ qü¿ q≈¿ q∆¿ r¿ r>¿ r?¿ ro¿ rí¿ rì¿ rÕ¿ s¿ s:¿ s;¿ sq¿ sw¿ sö¿ sµ¿ s∂¿ sÓ¿ t¿ t¿ tJ¿ tY¿ tà¿ t¬¿ t∆¿ t‰¿ tÂ¿ u*¿ uQ¿ uR¿ uß¿ u”¿ u‘¿ v¿ vd¿ ve¿ v§¿ v™¿ vÚ¿ v¯¿ w¿ w¿ w[¿ wó¿ wò¿ wƒ¿ wﬁ¿ x¿ x¿ xn¿ x¡¿ x«¿ y,¿ y0¿ y1¿ yc¿ yi¿ y∫¿ z¿ zB¿ zz¿ zÄ¿ zØ¿ zµ¿ zÀ¿ {$¿ {*¿ {Ä¿ {í¿ {Œ¿ {œ¿ |¿ |¿ |i¿ |∂¿ |¿ |Ò¿ }A¿ }G¿ }W¿ }ß¿ }Ã¿ ~¿ ~Q¿ ~î¿ ~æ¿ ~Ó¿ ¿ $¿ %¿ v¿ |¿ ∆¿ €¿ Ä¿ Ä ¿ Äo¿ Ä|¿ ÄÇ¿ Äí¿ Ä‹¿ Ä˚¿ ÅG¿ Åò¿ ÅÁ¿ Ç)¿ Ç>¿ Çz¿ Çî¿ ÇΩ¿ Ç√¿ É(¿ É,¿ É-¿ Éc¿ Éí¿ Éì¿ Éü¿ ÉË¿ ÉÈ¿ Éı¿ Ñ:¿ Ñe¿ Ñy¿ ÑŸ¿ Ñ‡¿ Ö@¿ ÖT¿ ÖÜ¿ Ö†¿ Ö∏¿ Ö‘¿ Ö›¿ Ö‰¿ Ü6¿ Üá¿ Ü«¿ á!¿ á5¿ áï¿ áú¿ á∞¿ à¿ à¿ à{¿ àè¿ àË¿ àÔ¿ â¿ â-¿ âE¿ â[¿ âÖ¿ âé¿ âï¿ âÌ¿ äI¿ ä]¿ äΩ¿ äƒ¿ ã$¿ ãÉ¿ ãó¿ ãº¿ ã◊¿ ã¿ åH¿ åQ¿ åX¿ ål¿ åë¿ å¨¿ å≈¿ ç¿ ç&¿ ç-¿ çA¿ çû¿ ç•¿ çÌ¿ é8¿ éê¿ é›¿ éÒ¿ è¿ è;¿ èY¿ èu¿ è~¿ èÖ¿ èÿ¿ ê.¿ êë¿ ê•¿ ë
¿ ë¿ ës¿ ëá¿ ëõ¿ ë∑¿ ëÿ¿ ëÙ¿ í¿ í$¿ í+¿ í?¿ íq¿ íé¿ í©¿ í≈¿ íŒ¿ í’¿ íÈ¿ ì¿ ì2¿ ìL¿ ìh¿ ìq¿ ìx¿ ìå¿ ìÍ¿ ìÒ¿ îU¿ îi¿ îó¿ î¥¿ îœ¿ îÎ¿ îÙ¿ î˚¿ ï`¿ ït¿ ï–¿ ï◊¿ ïÎ¿ ñD¿ ñK¿ ñ_¿ ñÄ¿ ñ§¿ ñ∆¿ ó
¿ ó¿ ó¿ ó.¿ óO¿ óx¿ óü¿ óª¿ óƒ¿ óÀ¿ óﬂ¿ ò¿ ò6¿ òW¿ òs¿ ò|¿ òÉ¿ òó¿ ò¿¿ ò‚¿ ô/¿ ôk¿ ôä¿ ôª¿ ôƒ¿ ôÀ¿ ôœ¿ ô–¿ ö3¿ öI¿ öS¿ ös¿ öù¿ ö”¿ öﬂ¿ õ
¿ õ3¿ õX¿ õª¿ õ‰¿ ú¿ ú2¿ ú[¿ úv¿ úÇ¿ úç¿ úí¿ úì¿ ú„¿ ù3¿ ùu¿ ù°¿ ùß¿ û¿ û<¿ ûB¿ ûC¿ ûf¿ ûÅ¿ û·¿ ü¿ üc¿ üé¿ üÕ¿ †¿ †¿ †!¿ †#¿ †$¿ †e¿ †≤¿ †ˇ¿ °0¿ °1¿ °a¿ °æ¿ °ø¿ °ÿ¿ ¢1¿ ¢2¿ ¢o¿ ¢î¿ ¢›¿ ¢ﬁ¿ £¿ £¿ £a¿ £b¿ £ú¿ £®¿ £Œ¿ £œ¿ £€¿ §2¿ §3¿ §?¿ §w¿ §∏¿ §π¿ §≈¿ §⁄¿ §Ò¿ •L¿ •_¿ •f¿ •ã¿ •´¿ •±¿ •Î¿ ¶%¿ ¶)¿ ¶*¿ ¶6¿ ¶m¿ ¶ì¿ ¶ÿ¿ ß¿ ß_¿ ßé¿ ß¨¿ ß∆¿ ßÃ¿ ßÕ¿ ® ¿ ®P¿ ®ö¿ ®†¿ ®⁄¿ ®ﬁ¿ ®ﬂ¿ ®Î¿ ©4¿ ©S¿ ©p¿ ©v¿ ©z¿ ©{¿ ©ö¿ ©ª¿ ©Û¿ ™(¿ ™,¿ ™-¿ ™h¿ ™â¿ ™©¿ ™’¿ ´¿ ´,¿ ´I¿ ´O¿ ´S¿ ´T¿ ´`¿ ´ï¿ ´ñ¿ ´¢¿ ´µ¿ ´Ú¿ ¨¿ ¨)¿ ¨>¿ ¨B¿ ¨C¿ ¨ã¿ ¨å¿ ¨®¿ ¨Õ¿ ¨—¿ ¨“¿ ¨Ò¿ ≠¿ ≠O¿ ≠c¿ ≠k¿ ≠o¿ ≠p¿ ≠≥¿ Æ¿ ÆA¿ Æâ¿ Æ—¿ ÆÂ¿ ÆÎ¿ ÆÏ¿ Ø2¿ Øh¿ Ø|¿ ØÇ¿ ØÉ¿ Ø∂¿ Ø ¿ Ø–¿ Ø—¿ ∞¿ ∞ ¿ ∞&¿ ∞'¿ ∞W¿ ∞j¿ ∞p¿ ∞q¿ ∞É¿ ∞á¿ ∞à¿ ∞‡¿ ±.¿ ±k¿ ±¿ ±π¿ ±√¿ ±…¿ ± ¿ ±Ô¿ ≤¿ ≤/¿ ≤P¿ ≤s¿ ≤ñ¿ ≤π¿ ≤Ò¿ ≥*¿ ≥4¿ ≥:¿ ≥;¿ ≥`¿ ≥¿ ≥¢¿ ≥≈¿ ≥‘¿ ≥ı¿ ¥¿ ¥9¿ ¥l¿ ¥ì¿ ¥ù¿ ¥£¿ ¥ß¿ ¥®¿ ¥¥¿ ¥˝¿ ¥˛¿ µ$¿ µS¿ µn¿ µu¿ µñ¿ µ¬¿ µÓ¿ ∂¿ ∂R¿ ∂Y¿ ∂]¿ ∂^¿ ∂ù¿ ∂π¿ ∂‚¿ ∑#¿ ∑D¿ ∑c¿ ∑g¿ ∑h¿ ∑Æ¿ ∑˝¿ ∏E¿ ∏r¿ ∏û¿ ∏∆¿ ∏Ã¿ π¿ π¿ π¿ π?¿ π~¿ π†¿ π≥¿ ∫¿ ∫N¿ ∫l¿ ∫•¿ ∫´¿ ∫Ø¿ ∫∞¿ ∫œ¿ ∫Ì¿ ªM¿ ªN¿ ªd¿ ªx¿ ªë¿ ªØ¿ ªÕ¿ º
¿ º"¿ ºb¿ ºy¿ º©¿ º¡¿ Ω¿ Ω¿ Ω(¿ Ω1¿ Ω8¿ Ω<¿ Ω=¿ Ωd¿ Ω}¿ Ωñ¿ Ω∂¿ Ωº¿ æ¿ æ¿ æ3¿ æN¿ æT¿ æU¿ æñ¿ æÀ¿ æ¯¿ ø¿ øa¿ øî¿ ø–¿ ¿¿ ¿¿ ¿c¿ ¿}¿ ¿¶¿ ¿ ¿ ¿Ô¿ ¡¿ ¡3¿ ¡]¿ ¡¿ ¡¨¿ ¡Õ¿ ¡Ù¿ ¬G¿ ¬ô¿ ¬Í¿ √8¿ √o¿ √Æ¿ √È¿ ƒ¿ ƒK¿ ƒb¿ ƒw¿ ƒä¿ ƒõ¿ ƒú¿ ƒ¡¿ ≈¿ ≈0¿ ≈D¿ ≈E¿ ≈ò¿ ≈”¿ ≈¸¿ ∆¿ ∆#¿ ∆_¿ ∆ç¿ ∆©¿ ∆¥¿ «¿ «(¿ «R¿ «í¿ «¬¿ «Õ¿ «·¿ »¿ »8¿ »ä¿ »±¿ »Â¿ …>¿ …X¿ …n¿ …ì¿ …Ê¿  ¿  @¿  n¿  …¿ À*¿ À=¿ ÀN¿ À]¿ Àë¿ Àû¿ À©¿ À≤¿ Àπ¿ ÀΩ¿ Àæ¿ ÀË¿ ÀÙ¿ Ã)¿ Ã*¿ Ã6¿ Ãî¿ Ãï¿ Ã°¿ Ã◊¿ Õ.¿ Õ|¿ Õù¿ Õ«¿ ÕÒ¿ Œ.¿ ŒX¿ Œd¿ Œé¿ Œè¿ Œ…¿ Œ˝¿ œ¿ œ¿ œ0¿ œ1¿ œ=¿ œd¿ œ§¿ œ÷¿ –¿ –¿ –g¿ –ö¿ –Õ¿ –Ú¿ —¿ —4¿ —W¿ —ü¿ —¿¿ —·¿ “¿ “S¿ “Ç¿ “⁄¿ ”0¿ ”`¿ ”l¿ ”w¿ ”¶¿ ”œ¿ ”⁄¿ ”‡¿ ”·¿ ‘
¿ ‘2¿ ‘É¿ ‘å¿ ‘ì¿ ‘Ÿ¿ ‘˚¿ ’¿ ’I¿ ’e¿ ’•¿ ’∞¿ ’∑¿ ’¸¿ ’˝¿ ÷:¿ ÷â¿ ÷Ï¿ ÷Û¿ ÷Ù¿ ◊H¿ ◊I¿ ◊ú¿ ◊ˆ¿ ÿ1¿ ÿc¿ ÿt¿ ÿ}¿ ÿÑ¿ ÿÖ¿ ÿ◊¿ ÿÿ¿ Ÿ¿ ŸM¿ Ÿk¿ Ÿó¿ ŸÊ¿ Ÿ˘¿ ⁄¿ ⁄&¿ ⁄'¿ ⁄Ö¿ ⁄Ü¿ ⁄Õ¿ ⁄Ì¿ ⁄¸¿ €¿ €¿ €=¿ €m¿ €â¿ €ø¿ €Ê¿ €˘¿ ‹Q¿ ‹Y¿ ‹Z¿ ‹é¿ ‹°¿ ‹µ¿ ‹Á¿ ›¿ ›S¿ ›â¿ ›ò¿ ›û¿ ›ü¿ ›Ì¿ ﬁ9¿ ﬁW¿ ﬁl¿ ﬁà¿ ﬁÀ¿ ﬁÎ¿ ﬂ¿ ﬂ¿ ﬂ ¿ ﬂA¿ ﬂm¿ ﬂ©¿ ﬂº¿ ﬂ…¿ ‡¿ ‡¿ ‡[¿ ‡´¿ ‡÷¿ ·¿ ·n¿ ·o¿ ·ö¿ ·π¿ ·◊¿ ‚¿ ‚¿ ‚:¿ ‚\¿ ‚Ä¿ ‚≥¿ ‚Ê¿ „¿ „D¿ „}¿ „©¿ „ÿ¿ ‰¿ ‰H¿ ‰f¿ ‰ë¿ ‰∫¿ ‰Î¿ Â¿ ÂO¿ Â|¿ Â©¿ Âﬁ¿ Ê¿ ÊL¿ Ês¿ Êö¿ Êø¿ Ê„¿ ÁC¿ Áî¿ ÁÊ¿ Ë=¿ Ëb¿ Ëã¿ Ëƒ¿ Ë˝¿ È*¿ ÈY¿ ÈÇ¿ È¨¿ ÈŸ¿ Í¿ Í7¿ Í]¿ Íû¿ Í∆¿ ÍÓ¿ Î'¿ Îi¿ Îï¿ Î¨¿ Îª¿ Î˙¿ Ï7¿ Ïh¿ Ïú¿ Ï’¿ Ì¿ Ì=¿ Ìà¿ Ìø¿ Ì·¿ Ó¿ Ó7¿ Ól¿ Ó≥¿ Ô¿ ÔU¿ Ôê¿ ÔŒ¿ Ô€¿ ÔÊ¿ ÔÔ¿ Ôˆ¿ Ô˜¿ ¿ %¿ N¿ _¿ p¿ £¿ Ò¿ Ò¿ Ò5¿ ÒD¿ Òà¿ ÒÃ¿ Ò„¿ ÒÙ¿ Ú
¿ Ú?¿ Úô¿ ÚÔ¿ Û?¿ Ûï¿ ÛÁ¿ Û¯¿ Û˘¿ ÙS¿ Ùá¿ Ù¥¿ ı¿ ıY¿ ı¨¿ ıˇ¿ ˆP¿ ˆÖ¿ ˆò¿ ˆÊ¿ ˜3¿ ˜Ñ¿ ˜©¿ ˜Õ¿ ˜›¿ ˜Î¿ ˜˝¿ ¯¿ ¯<¿ ¯Z¿ ¯v¿ ¯£¿ ¯ˆ¿ ˘@¿ ˘u¿ ˘ë¿ ˘”¿ ˘ı¿ ˙¿ ˙z¿ ˙ã¿ ˙ö¿ ˙ß¿ ˙≤¿ ˙ª¿ ˙¬¿ ˙∆¿ ˙»¿ ˙…¿ ˚¿ ˚¿ ˚#¿ ˚{¿ ˚õ¿ ˚√¿ ˚Í¿ ¸
¿ ¸ ¿ ¸&¿ ¸'¿ ¸R¿ ¸|¿ ¸ô¿ ¸∂¿ ¸∑¿ ¸√¿ ˝¿ ˝¿ ˝%¿ ˝^¿ ˝y¿ ˝µ¿ ˝Û¿ ˝˙¿ ˝˛¿ ˝ˇ¿ ˛¿ ˛T¿ ˛|¿ ˛Æ¿ ˛ﬁ¿ ˛Â¿ ˛È¿ ˛Í¿ ˛ˆ¿ ˇR¿ ˇc¿ ˇó¿ ˇ ¿ ˇŒ¿ ˇ–¿ ˇ—¿ $¿ %¿ Y¿ ¨¿ Ã¿ ¸¿+¿`¿ì¿î¿÷¿¸¿-¿W¿e¿k¿é¿•¿©¿™¿Í¿¿?¿h¿v¿|¿û¿µ¿π¿∫¿∆¿¿0¿l¿r¿v¿w¿ú¿‹¿‡¿·¿¿Y¿t¿á¿ã¿å¿ò¿±¿ÿ¿¿E¿F¿â¿Œ¿¿V¿W¿p¿ê¿¬¿Ù¿˚¿¸¿M¿i¿q¿¬¿›¿‰¿Â¿	*¿	k¿	™¿	π¿	∫¿	˙¿
<¿
ç¿
ë¿
í¿
û¿
’¿¿B¿C¿b¿¶¿Ï¿:¿@¿A¿Ñ¿…¿¿¿¿(¿h¿Å¿°¿÷¿¿¿¿¿-¿V¿~¿¨¿≥¿‹¿¿¿?¿â¿√¿◊¿Í¿¿¿j¿k¿Ü¿¨¿‚¿¿@¿v¿”¿/¿Ä¿±¿ÿ¿"¿_¿ì¿ô¿ö¿“¿¿2¿M¿u¿y¿{   _kDefaultPlaceholderStyle_kDefaultRoundedBorderSide_kDefaultRoundedBorder _kDefaultRoundedBorderDecoration_kDisabledBackground_kClearButtonColor _iOSHorizontalCursorOffsetPixelsOverlayVisibilityMode2_CupertinoTextFieldSelectionGestureDetectorBuilderCupertinoTextField_CupertinoTextFieldState_BaselineAlignedStackSlot_BaselineAlignedStack_BaselineAlignedStackParentData_RenderBaselineAlignedStack  G#
version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: thela-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-thela}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-thelapass}
      POSTGRES_DB: ${POSTGRES_DB:-thela}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-thela}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - thela-network

  # MeiliSearch (Optional - for search functionality)
  meilisearch:
    image: getmeili/meilisearch:v1.6
    container_name: thela-meilisearch
    restart: unless-stopped
    environment:
      MEILI_ENV: ${MEILI_ENV:-production}
      MEILI_MASTER_KEY: ${MEILISEARCH_API_KEY:-changeme_meilisearch_key}
      MEILI_NO_ANALYTICS: ${MEILI_NO_ANALYTICS:-true}
    volumes:
      - meilisearch_data:/meili_data
    ports:
      - "${MEILISEARCH_PORT:-7700}:7700"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7700/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - thela-network

  # MinIO (Optional - S3-compatible storage for development)
  minio:
    image: minio/minio:latest
    container_name: thela-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio_data:/data
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - thela-network

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: thela-backend
    restart: unless-stopped
    environment:
      # Database
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-thela}:${POSTGRES_PASSWORD:-thelapass}@db:5432/${POSTGRES_DB:-thela}

      # Authentication
      JWT_SECRET: ${JWT_SECRET:-change_me_in_production_very_important_secret}
      GOOGLE_OAUTH_CLIENT_ID: ${GOOGLE_OAUTH_CLIENT_ID}

      # MeiliSearch (Optional)
      MEILISEARCH_HOST: ${MEILISEARCH_HOST:-http://meilisearch:7700}
      MEILISEARCH_API_KEY: ${MEILISEARCH_API_KEY:-changeme_meilisearch_key}
      MEILISEARCH_INDEX_PREFIX: ${MEILISEARCH_INDEX_PREFIX:-thela}

      # S3 Storage (Optional - using MinIO for development)
      AWS_REGION: ${AWS_REGION:-us-east-1}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET:-thela-media}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-minioadmin}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-minioadmin}
      S3_ENDPOINT_URL: ${S3_ENDPOINT_URL:-http://minio:9000}

      # CORS
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:8080}

      # Rate Limiting
      RATE_LIMIT_ENABLED: ${RATE_LIMIT_ENABLED:-true}
      RATE_LIMIT_REQUESTS_PER_MINUTE: ${RATE_LIMIT_REQUESTS_PER_MINUTE:-60}
      RATE_LIMIT_BURST: ${RATE_LIMIT_BURST:-10}

      # App Settings
      APP_NAME: ${APP_NAME:-Thela Backend}
      API_V1_PREFIX: ${API_V1_PREFIX:-/api/v1}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      db:
        condition: service_healthy
      meilisearch:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - thela-network

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: thela-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - thela-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  meilisearch_data:
    driver: local
  minio_data:
    driver: local

networks:
  thela-network:
    driver: bridge
